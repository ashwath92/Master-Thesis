<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook original-version='18.1' source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='map+ (acl_metrics)' inline='true' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='acl_metrics' name='excel-direct.17w55ru1kkf6e41gzsw4r1d7onnr'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Coursework/Thesis/OfflineEval/Acl/acl_metrics.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[map].[k]' />
              <expression op='[recall].[k]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[map].[k]' />
                <expression op='[ndcg].[k]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[map].[k]' />
                  <expression op='[mrr].[k]' />
                </expression>
              </clause>
              <relation connection='excel-direct.17w55ru1kkf6e41gzsw4r1d7onnr' name='map' table='[map$]' type='table'>
                <columns gridOrigin='A1:I19:no:A1:I19:0' header='yes' outcome='6'>
                  <column datatype='integer' name='k' ordinal='0' />
                  <column datatype='real' name='hd2vINOUT' ordinal='1' />
                  <column datatype='real' name='ldamallet' ordinal='2' />
                  <column datatype='real' name='bm25' ordinal='3' />
                  <column datatype='real' name='hd2vOUT' ordinal='4' />
                  <column datatype='real' name='hybrid' ordinal='5' />
                  <column datatype='real' name='lda' ordinal='6' />
                  <column datatype='real' name='paper2vec' ordinal='7' />
                  <column datatype='real' name='doc2vec' ordinal='8' />
                </columns>
              </relation>
              <relation connection='excel-direct.17w55ru1kkf6e41gzsw4r1d7onnr' name='mrr' table='[mrr$]' type='table'>
                <columns gridOrigin='A1:I19:no:A1:I19:0' header='yes' outcome='6'>
                  <column datatype='integer' name='k' ordinal='0' />
                  <column datatype='real' name='hd2vINOUT' ordinal='1' />
                  <column datatype='real' name='ldamallet' ordinal='2' />
                  <column datatype='real' name='bm25' ordinal='3' />
                  <column datatype='real' name='hd2vOUT' ordinal='4' />
                  <column datatype='real' name='hybrid' ordinal='5' />
                  <column datatype='real' name='lda' ordinal='6' />
                  <column datatype='real' name='paper2vec' ordinal='7' />
                  <column datatype='real' name='doc2vec' ordinal='8' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.17w55ru1kkf6e41gzsw4r1d7onnr' name='ndcg' table='[ndcg$]' type='table'>
              <columns gridOrigin='A1:I19:no:A1:I19:0' header='yes' outcome='6'>
                <column datatype='integer' name='k' ordinal='0' />
                <column datatype='real' name='hd2vINOUT' ordinal='1' />
                <column datatype='real' name='ldamallet' ordinal='2' />
                <column datatype='real' name='bm25' ordinal='3' />
                <column datatype='real' name='hd2vOUT' ordinal='4' />
                <column datatype='real' name='hybrid' ordinal='5' />
                <column datatype='real' name='lda' ordinal='6' />
                <column datatype='real' name='paper2vec' ordinal='7' />
                <column datatype='real' name='doc2vec' ordinal='8' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.17w55ru1kkf6e41gzsw4r1d7onnr' name='recall' table='[recall$]' type='table'>
            <columns gridOrigin='A1:I19:no:A1:I19:0' header='yes' outcome='6'>
              <column datatype='integer' name='k' ordinal='0' />
              <column datatype='real' name='hd2vINOUT' ordinal='1' />
              <column datatype='real' name='ldamallet' ordinal='2' />
              <column datatype='real' name='bm25' ordinal='3' />
              <column datatype='real' name='hd2vOUT' ordinal='4' />
              <column datatype='real' name='hybrid' ordinal='5' />
              <column datatype='real' name='lda' ordinal='6' />
              <column datatype='real' name='paper2vec' ordinal='7' />
              <column datatype='real' name='doc2vec' ordinal='8' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[bm25 (mrr)]' value='[mrr].[bm25]' />
          <map key='[bm25 (ndcg)]' value='[ndcg].[bm25]' />
          <map key='[bm25 (recall)]' value='[recall].[bm25]' />
          <map key='[bm25]' value='[map].[bm25]' />
          <map key='[doc2vec (mrr)]' value='[mrr].[doc2vec]' />
          <map key='[doc2vec (ndcg)]' value='[ndcg].[doc2vec]' />
          <map key='[doc2vec (recall)]' value='[recall].[doc2vec]' />
          <map key='[doc2vec]' value='[map].[doc2vec]' />
          <map key='[hd2vINOUT (mrr)]' value='[mrr].[hd2vINOUT]' />
          <map key='[hd2vINOUT (ndcg)]' value='[ndcg].[hd2vINOUT]' />
          <map key='[hd2vINOUT (recall)]' value='[recall].[hd2vINOUT]' />
          <map key='[hd2vINOUT]' value='[map].[hd2vINOUT]' />
          <map key='[hd2vOUT (mrr)]' value='[mrr].[hd2vOUT]' />
          <map key='[hd2vOUT (ndcg)]' value='[ndcg].[hd2vOUT]' />
          <map key='[hd2vOUT (recall)]' value='[recall].[hd2vOUT]' />
          <map key='[hd2vOUT]' value='[map].[hd2vOUT]' />
          <map key='[hybrid (mrr)]' value='[mrr].[hybrid]' />
          <map key='[hybrid (ndcg)]' value='[ndcg].[hybrid]' />
          <map key='[hybrid (recall)]' value='[recall].[hybrid]' />
          <map key='[hybrid]' value='[map].[hybrid]' />
          <map key='[k (mrr)]' value='[mrr].[k]' />
          <map key='[k (ndcg)]' value='[ndcg].[k]' />
          <map key='[k (recall)]' value='[recall].[k]' />
          <map key='[k]' value='[map].[k]' />
          <map key='[lda (mrr)]' value='[mrr].[lda]' />
          <map key='[lda (ndcg)]' value='[ndcg].[lda]' />
          <map key='[lda (recall)]' value='[recall].[lda]' />
          <map key='[lda]' value='[map].[lda]' />
          <map key='[ldamallet (mrr)]' value='[mrr].[ldamallet]' />
          <map key='[ldamallet (ndcg)]' value='[ndcg].[ldamallet]' />
          <map key='[ldamallet (recall)]' value='[recall].[ldamallet]' />
          <map key='[ldamallet]' value='[map].[ldamallet]' />
          <map key='[paper2vec (mrr)]' value='[mrr].[paper2vec]' />
          <map key='[paper2vec (ndcg)]' value='[ndcg].[paper2vec]' />
          <map key='[paper2vec (recall)]' value='[recall].[paper2vec]' />
          <map key='[paper2vec]' value='[map].[paper2vec]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ldamallet</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ldamallet]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>ldamallet</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lda</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lda]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>lda</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[map]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I19:no:A1:I19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ldamallet</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ldamallet (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>ldamallet</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25 (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lda</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lda (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>lda</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mrr]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I19:no:A1:I19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ldamallet</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ldamallet (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>ldamallet</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25 (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lda</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lda (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>lda</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ndcg]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I19:no:A1:I19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ldamallet</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ldamallet (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>ldamallet</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25 (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lda</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lda (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>lda</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[recall]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I19:no:A1:I19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;' value='BM25' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;' value='Doc2Vec' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;' value='hd2vINOUT' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;' value='hd2vOUT' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;' value='Hybrid' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;' value='LDA' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (recall):qk]&quot;' value='Ldamallet' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;' value='Paper2Vec' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Bm25 (Mrr)' datatype='real' name='[bm25 (mrr)]' role='measure' type='quantitative' />
      <column caption='Bm25 (Ndcg)' datatype='real' name='[bm25 (ndcg)]' role='measure' type='quantitative' />
      <column caption='Bm25 (Recall)' datatype='real' name='[bm25 (recall)]' role='measure' type='quantitative' />
      <column caption='Bm25' datatype='real' name='[bm25]' role='measure' type='quantitative' />
      <column caption='Doc2Vec (Mrr)' datatype='real' name='[doc2vec (mrr)]' role='measure' type='quantitative' />
      <column caption='Doc2Vec (Ndcg)' datatype='real' name='[doc2vec (ndcg)]' role='measure' type='quantitative' />
      <column caption='Doc2Vec (Recall)' datatype='real' name='[doc2vec (recall)]' role='measure' type='quantitative' />
      <column caption='Doc2Vec' datatype='real' name='[doc2vec]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT (mrr)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT (ndcg)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT (recall)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT (mrr)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT (ndcg)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT (recall)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT]' role='measure' type='quantitative' />
      <column caption='Hybrid (Mrr)' datatype='real' name='[hybrid (mrr)]' role='measure' type='quantitative' />
      <column caption='Hybrid (Ndcg)' datatype='real' name='[hybrid (ndcg)]' role='measure' type='quantitative' />
      <column caption='Hybrid (Recall)' datatype='real' name='[hybrid (recall)]' role='measure' type='quantitative' />
      <column caption='Hybrid' datatype='real' name='[hybrid]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='K (Mrr)' datatype='integer' name='[k (mrr)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='K (Ndcg)' datatype='integer' name='[k (ndcg)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='K (Recall)' datatype='integer' name='[k (recall)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal' />
      <column caption='Lda (Mrr)' datatype='real' name='[lda (mrr)]' role='measure' type='quantitative' />
      <column caption='Lda (Ndcg)' datatype='real' name='[lda (ndcg)]' role='measure' type='quantitative' />
      <column caption='Lda (Recall)' datatype='real' name='[lda (recall)]' role='measure' type='quantitative' />
      <column caption='Lda' datatype='real' name='[lda]' role='measure' type='quantitative' />
      <column caption='Ldamallet (Mrr)' datatype='real' name='[ldamallet (mrr)]' role='measure' type='quantitative' />
      <column caption='Ldamallet (Ndcg)' datatype='real' name='[ldamallet (ndcg)]' role='measure' type='quantitative' />
      <column caption='Ldamallet (Recall)' datatype='real' name='[ldamallet (recall)]' role='measure' type='quantitative' />
      <column caption='Ldamallet' datatype='real' name='[ldamallet]' role='measure' type='quantitative' />
      <column caption='Paper2Vec (Mrr)' datatype='real' name='[paper2vec (mrr)]' role='measure' type='quantitative' />
      <column caption='Paper2Vec (Ndcg)' datatype='real' name='[paper2vec (ndcg)]' role='measure' type='quantitative' />
      <column caption='Paper2Vec (Recall)' datatype='real' name='[paper2vec (recall)]' role='measure' type='quantitative' />
      <column caption='Paper2Vec' datatype='real' name='[paper2vec]' role='measure' type='quantitative' />
      <column-instance column='[bm25 (mrr)]' derivation='Sum' name='[sum:bm25 (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[bm25 (ndcg)]' derivation='Sum' name='[sum:bm25 (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[bm25 (recall)]' derivation='Sum' name='[sum:bm25 (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[bm25]' derivation='Sum' name='[sum:bm25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec (mrr)]' derivation='Sum' name='[sum:doc2vec (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec (ndcg)]' derivation='Sum' name='[sum:doc2vec (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec (recall)]' derivation='Sum' name='[sum:doc2vec (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec]' derivation='Sum' name='[sum:doc2vec:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT (mrr)]' derivation='Sum' name='[sum:hd2vINOUT (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT (ndcg)]' derivation='Sum' name='[sum:hd2vINOUT (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT (recall)]' derivation='Sum' name='[sum:hd2vINOUT (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT]' derivation='Sum' name='[sum:hd2vINOUT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT (mrr)]' derivation='Sum' name='[sum:hd2vOUT (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT (ndcg)]' derivation='Sum' name='[sum:hd2vOUT (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT (recall)]' derivation='Sum' name='[sum:hd2vOUT (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT]' derivation='Sum' name='[sum:hd2vOUT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid (mrr)]' derivation='Sum' name='[sum:hybrid (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid (ndcg)]' derivation='Sum' name='[sum:hybrid (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid (recall)]' derivation='Sum' name='[sum:hybrid (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid]' derivation='Sum' name='[sum:hybrid:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lda (mrr)]' derivation='Sum' name='[sum:lda (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[lda (ndcg)]' derivation='Sum' name='[sum:lda (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[lda (recall)]' derivation='Sum' name='[sum:lda (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[lda]' derivation='Sum' name='[sum:lda:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ldamallet (mrr)]' derivation='Sum' name='[sum:ldamallet (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[ldamallet (ndcg)]' derivation='Sum' name='[sum:ldamallet (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[ldamallet (recall)]' derivation='Sum' name='[sum:ldamallet (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[ldamallet]' derivation='Sum' name='[sum:ldamallet:qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec (mrr)]' derivation='Sum' name='[sum:paper2vec (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec (ndcg)]' derivation='Sum' name='[sum:paper2vec (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec (recall)]' derivation='Sum' name='[sum:paper2vec (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec]' derivation='Sum' name='[sum:paper2vec:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.592068' measure-ordering='alphabetic' measure-percentage='0.407932' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (mrr):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (mrr):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (mrr):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (recall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (mrr):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (mrr):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (mrr):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (mrr):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (mrr):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='High value MAP'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25' datatype='real' name='[bm25]' role='measure' type='quantitative' />
            <column caption='Doc2Vec' datatype='real' name='[doc2vec]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT]' role='measure' type='quantitative' />
            <column caption='Hybrid' datatype='real' name='[hybrid]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal' />
            <column caption='Lda' datatype='real' name='[lda]' role='measure' type='quantitative' />
            <column caption='Ldamallet' datatype='real' name='[ldamallet]' role='measure' type='quantitative' />
            <column-instance column='[k]' derivation='None' name='[none:k:ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec' datatype='real' name='[paper2vec]' role='measure' type='quantitative' />
            <column-instance column='[bm25]' derivation='Sum' name='[sum:bm25:qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec]' derivation='Sum' name='[sum:doc2vec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT]' derivation='Sum' name='[sum:hd2vINOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT]' derivation='Sum' name='[sum:hd2vOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid]' derivation='Sum' name='[sum:hybrid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda]' derivation='Sum' name='[sum:lda:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ldamallet]' derivation='Sum' name='[sum:ldamallet:qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec]' derivation='Sum' name='[sum:paper2vec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:k:ok]' member='10' />
              <groupfilter function='member' level='[none:k:ok]' member='20' />
              <groupfilter function='member' level='[none:k:ok]' member='30' />
              <groupfilter function='member' level='[none:k:ok]' member='40' />
              <groupfilter function='member' level='[none:k:ok]' member='50' />
              <groupfilter function='member' level='[none:k:ok]' member='100' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='MAP' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</cols>
      </table>
      <simple-id uuid='{5655C8B9-CEC9-4A52-B75D-AF44EF23F03E}' />
    </worksheet>
    <worksheet name='High value Recall'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Recall@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Recall)' datatype='real' name='[bm25 (recall)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Recall)' datatype='real' name='[doc2vec (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (recall)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Recall)' datatype='real' name='[hybrid (recall)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Recall)' datatype='integer' name='[k (recall)]' role='dimension' type='ordinal' />
            <column caption='Lda (Recall)' datatype='real' name='[lda (recall)]' role='measure' type='quantitative' />
            <column caption='Ldamallet (Recall)' datatype='real' name='[ldamallet (recall)]' role='measure' type='quantitative' />
            <column-instance column='[k (recall)]' derivation='None' name='[none:k (recall):ok]' pivot='key' type='ordinal' />
            <column-instance column='[k (recall)]' derivation='None' name='[none:k (recall):qk]' pivot='key' type='quantitative' />
            <column caption='Paper2Vec (Recall)' datatype='real' name='[paper2vec (recall)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (recall)]' derivation='Sum' name='[sum:bm25 (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (recall)]' derivation='Sum' name='[sum:doc2vec (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (recall)]' derivation='Sum' name='[sum:hd2vINOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (recall)]' derivation='Sum' name='[sum:hd2vOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (recall)]' derivation='Sum' name='[sum:hybrid (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda (recall)]' derivation='Sum' name='[sum:lda (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[ldamallet (recall)]' derivation='Sum' name='[sum:ldamallet (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (recall)]' derivation='Sum' name='[sum:paper2vec (recall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:k (recall):ok]' member='10' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='20' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='30' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='40' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='50' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='100' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='Recall' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):qk]</cols>
      </table>
      <simple-id uuid='{728FE13B-C33C-43B1-B399-EF81DAB52CF7}' />
    </worksheet>
    <worksheet name='MAP'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='18'>MAP@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25' datatype='real' name='[bm25]' role='measure' type='quantitative' />
            <column caption='Doc2Vec' datatype='real' name='[doc2vec]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT]' role='measure' type='quantitative' />
            <column caption='Hybrid' datatype='real' name='[hybrid]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal' />
            <column caption='Lda' datatype='real' name='[lda]' role='measure' type='quantitative' />
            <column-instance column='[k]' derivation='None' name='[none:k:ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec' datatype='real' name='[paper2vec]' role='measure' type='quantitative' />
            <column-instance column='[bm25]' derivation='Sum' name='[sum:bm25:qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec]' derivation='Sum' name='[sum:doc2vec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT]' derivation='Sum' name='[sum:hd2vINOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT]' derivation='Sum' name='[sum:hd2vOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid]' derivation='Sum' name='[sum:hybrid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda]' derivation='Sum' name='[sum:lda:qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec]' derivation='Sum' name='[sum:paper2vec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]'>
            <groupfilter from='1' function='range' level='[none:k:ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='MAP' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</cols>
      </table>
      <simple-id uuid='{41C82915-1299-4B14-998C-E916B4EBCFC8}' />
    </worksheet>
    <worksheet name='MRR'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='18'>MRR@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Mrr)' datatype='real' name='[bm25 (mrr)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Mrr)' datatype='real' name='[doc2vec (mrr)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (mrr)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (mrr)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Mrr)' datatype='real' name='[hybrid (mrr)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Mrr)' datatype='integer' name='[k (mrr)]' role='dimension' type='ordinal' />
            <column caption='Lda (Mrr)' datatype='real' name='[lda (mrr)]' role='measure' type='quantitative' />
            <column-instance column='[k (mrr)]' derivation='None' name='[none:k (mrr):ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec (Mrr)' datatype='real' name='[paper2vec (mrr)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (mrr)]' derivation='Sum' name='[sum:bm25 (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (mrr)]' derivation='Sum' name='[sum:doc2vec (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (mrr)]' derivation='Sum' name='[sum:hd2vINOUT (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (mrr)]' derivation='Sum' name='[sum:hd2vOUT (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (mrr)]' derivation='Sum' name='[sum:hybrid (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda (mrr)]' derivation='Sum' name='[sum:lda (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (mrr)]' derivation='Sum' name='[sum:paper2vec (mrr):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (mrr):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]'>
            <groupfilter from='1' function='range' level='[none:k (mrr):ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='MRR' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]</cols>
      </table>
      <simple-id uuid='{258031A8-E651-405E-B3D4-716C98C5D783}' />
    </worksheet>
    <worksheet name='NDCG'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='18'>NDCG@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Ndcg)' datatype='real' name='[bm25 (ndcg)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Ndcg)' datatype='real' name='[doc2vec (ndcg)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (ndcg)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (ndcg)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Ndcg)' datatype='real' name='[hybrid (ndcg)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Ndcg)' datatype='integer' name='[k (ndcg)]' role='dimension' type='ordinal' />
            <column caption='Lda (Ndcg)' datatype='real' name='[lda (ndcg)]' role='measure' type='quantitative' />
            <column-instance column='[k (ndcg)]' derivation='None' name='[none:k (ndcg):ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec (Ndcg)' datatype='real' name='[paper2vec (ndcg)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (ndcg)]' derivation='Sum' name='[sum:bm25 (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (ndcg)]' derivation='Sum' name='[sum:doc2vec (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (ndcg)]' derivation='Sum' name='[sum:hd2vINOUT (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (ndcg)]' derivation='Sum' name='[sum:hd2vOUT (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (ndcg)]' derivation='Sum' name='[sum:hybrid (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda (ndcg)]' derivation='Sum' name='[sum:lda (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (ndcg)]' derivation='Sum' name='[sum:paper2vec (ndcg):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (ndcg):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]'>
            <groupfilter from='1' function='range' level='[none:k (ndcg):ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='NDCG' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]</cols>
      </table>
      <simple-id uuid='{60BAAFFD-9277-44E5-A061-4A11AEC523B9}' />
    </worksheet>
    <worksheet name='Recall'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='18'>Recall@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Recall)' datatype='real' name='[bm25 (recall)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Recall)' datatype='real' name='[doc2vec (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (recall)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Recall)' datatype='real' name='[hybrid (recall)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Recall)' datatype='integer' name='[k (recall)]' role='dimension' type='ordinal' />
            <column caption='Lda (Recall)' datatype='real' name='[lda (recall)]' role='measure' type='quantitative' />
            <column caption='Ldamallet (Recall)' datatype='real' name='[ldamallet (recall)]' role='measure' type='quantitative' />
            <column-instance column='[k (recall)]' derivation='None' name='[none:k (recall):ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec (Recall)' datatype='real' name='[paper2vec (recall)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (recall)]' derivation='Sum' name='[sum:bm25 (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (recall)]' derivation='Sum' name='[sum:doc2vec (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (recall)]' derivation='Sum' name='[sum:hd2vINOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (recall)]' derivation='Sum' name='[sum:hd2vOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (recall)]' derivation='Sum' name='[sum:hybrid (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda (recall)]' derivation='Sum' name='[sum:lda (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[ldamallet (recall)]' derivation='Sum' name='[sum:ldamallet (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (recall)]' derivation='Sum' name='[sum:paper2vec (recall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;</bucket>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;</bucket>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;</bucket>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;</bucket>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (recall):qk]&quot;</bucket>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;</bucket>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;</bucket>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]'>
            <groupfilter from='1' function='range' level='[none:k (recall):ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='Recall' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' value='136' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</cols>
      </table>
      <simple-id uuid='{F00F0ED4-5094-41E9-9446-FA36A49AB6B4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='34500' id='9' name='MRR' w='41900' x='53000' y='10875' />
        <zone h='34500' id='10' name='MAP' w='42800' x='5400' y='47875' />
        <zone h='34750' id='3' name='Recall' w='44400' x='5400' y='10875' />
        <zone h='34375' id='23' name='NDCG' w='41500' x='52800' y='47750' />
        <zone h='6250' id='8' leg-item-layout='horz' name='Recall' pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' show-title='false' type='color' w='99000' x='2700' y='84250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='27' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='278' h='34750' id='3' is-fixed='true' name='Recall' w='44400' x='5400' y='10875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6250' id='8' leg-item-layout='horz' name='Recall' pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' show-title='false' type='color' w='99000' x='2700' y='84250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='276' h='34500' id='9' is-fixed='true' name='MRR' w='41900' x='53000' y='10875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='275' h='34375' id='23' is-fixed='true' name='NDCG' w='41500' x='52800' y='47750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='276' h='34500' id='10' is-fixed='true' name='MAP' w='42800' x='5400' y='47875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0B046EC0-DDC6-4381-A0CC-2B06166E247D}' />
    </dashboard>
    <dashboard name='Dashboard 1 (2)'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='12' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='7750' id='8' leg-item-layout='horz' name='Recall' pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='34500' id='9' name='MRR' w='41900' x='53000' y='10875' />
        <zone h='34500' id='10' name='MAP' w='42800' x='31300' y='48375' />
        <zone h='34750' id='3' name='Recall' w='44400' x='5400' y='10875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='28' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='278' h='34750' id='3' is-fixed='true' name='Recall' w='44400' x='5400' y='10875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7750' id='8' leg-item-layout='horz' name='Recall' pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='276' h='34500' id='9' is-fixed='true' name='MRR' w='41900' x='53000' y='10875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='276' h='34500' id='10' is-fixed='true' name='MAP' w='42800' x='31300' y='48375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{10F95DDF-C8EC-4D4E-A4C3-44E8C0B39C9B}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='MAP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE1AD117-502F-4F45-B5C2-4CDCF5C5477C}' />
    </window>
    <window class='worksheet' name='High value MAP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{60BABB40-9960-4112-9321-97B28E7B44F8}' />
    </window>
    <window class='worksheet' name='MRR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AA50CC9-8D96-4EFF-91AD-EA35F198D8C1}' />
    </window>
    <window class='worksheet' name='Recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FDBFCA76-4A4E-43E7-BE4A-930952F7A6BF}' />
    </window>
    <window class='worksheet' name='High value Recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F1E2AE7-CB73-41DB-B8A1-8C1EC09B4440}' />
    </window>
    <window class='worksheet' name='NDCG'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{040FF1B5-8143-4244-8521-DD5825CFCB72}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='MAP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MRR'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='NDCG'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]</field>
                    <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
                    <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>1</value>
                  <value>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (ndcg):qk]&quot;</value>
                  <value>0.02414414414414414</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Recall'>
          <zoom type='entire-view' />
          <highlight field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{8AA6632A-4CA1-4462-8319-C99E3EE5A28E}' />
    </window>
    <window class='dashboard' name='Dashboard 1 (2)'>
      <viewpoints>
        <viewpoint name='MAP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MRR'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Recall'>
          <zoom type='entire-view' />
          <highlight field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7D5C38EF-3721-4A47-8F67-FDC6E8BACE13}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      EHJ5yBaoAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1 (2)' width='192'>
      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
      PMQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='High value MAP' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWYwcR56fv4g86uz7bpJNUbxEUbc0I4m6VjsD78zserDe+2VtGAZswA9+
      86sBA35aGPCT/eADtrHGeu2Fx8as11iPd2Y0o2M00vAQKUq8r2Y3++6u7qrKqsyMCD9kVnUV
      SYlNsnhWfOjsuDOzMv+/yMjMiEhhjDFYLF2IEELIB70TFsuDxArA0tU8UAEYY7AtMMuDxH0Q
      G1VKobVuCkAI8SB2w2LplAAMKzPnOXpqmv0vfINtQ0WEUSzMXGZ2zfDcwSdZnj7D8bMz7Nj3
      LHu3j+A4DkopABzH6cxuWCy3SWeaQKrO+dl1Dh16iavnL2AMYAxOth9XVzEm5sLVFQ69+Sql
      a1eJO7JRi+Xu6YgAjFJ4hR5yuT6yXoQBkC5Dw4M4AhAOw70eH7z3ASbXh63vLQ8LHRGAcFyi
      9RVKpQXKoY8gads32vlaRSysR7z1a28Tl2aJdCe2arHcPaJTL8Kqq9c4fPIyz778Ms7GLCo/
      yoXPf8VKuU7fxJPsH3E4evIiTxx8ianRXgTYewDLA0UIITomgDvBCsDyILFvgi2PDcYYlFa3
      Xe6BvAewWO4EYwyxjglVSBjXCVWdMA6pxTV+eOJ/sBos848O/RN2DOzc8jqtALoIgyEIq8yU
      rrK9f4qsmyF5Ym2a6cmfaYTApC4G05pmaMuj0cRKoXRMrGNiHfGzcz/m5NwJfuPAb9KX6aOe
      Gm49rlNX9cSI4zp1FVKPW8P1ZriRrx7XCVWINprktakgeX8qEEAtrgFwcu7EbQnA3gM8BBhj
      WCjPE6uI8d5JHOmkb8k1ymi0USiduNpolN50lVEorYh1lBpNSHgTAwpVSD2u8cXc51xYPseT
      Q3sY75kgNonRKq02F7MZjnXc3EayNMJxmp74DQaBQAiJFAIhBLFK4j3HJ+tmkVLiCAcpHBwp
      U9fBdzJk3Ay+myHj+Jt+N9NMa/g9x8d3fXzHT/yOj+e4fHjxfdaCFf7opb/LcGFkS8ddCCHs
      FeAeo43erPXiGrXUrcc1KmGFSr3MarDCj079HyIV8czk80gE9bjerEljHROr6/3JEqmQSEUI
      IXCliyNd3NbFaY8r1dYACKKAWlzDlS6+k8H13M3yjnPDum7u38znSAcpHRyRGLYUkuOzRzm9
      8CXfe/r7jPdO4kkX1/Fa9s3DEU5HusLsGtpzR+WsAL6G+Y05FjbmOTB+EFe6GAxRHFKNqlTD
      yqYbJm45LFOub2wuYZlqWCFUIbGKiBqLjohVhO/65L0CWS9LOdwAA5X6Br3ZfnqyvWScTFLb
      uZnUn8FvqSF9J0POy5Jxs6kh3li7SpHWutLBEQ5rwSrnlk5zYOwZ+vMDaQPi3rB3ZD/aaBz5
      8F7hbROohUazoxpVObPwJf/pk3/ParDCZO8kICiHG0RxiCbJp03DTU5ywS9SzPQkS+ov+EV6
      sj0U/R4KmSSuJ433HA8pJEJIzi+dpR7XeHbiBVzHTZsTtpPgvaTr3wNoownCKqXaGueXz3F2
      4RRnF08xU7qK5/gYYwhVnWcmnmfnwBMUMj0UM0WKfpGCX0wM2i9SyPSQdbPWYB8xuk4ASivW
      glUWy/OJwS+eZnr1MovlBYqZIsOFUfYM72XPyH529E+hjGalusQz48/ju/592UfL/eOxF4DS
      ioXyHNOrVzi/dJZzS6dZ2JinVCsxmB9ke/8Ue0b2sWd4H2M94wzkhnAde1vULTx2AlBacbU0
      zfnFM5xdPM3ZpdOUglVqcZ2xnnH2Du9n3+hT7B7ey0B+iLyXf6hv0Cz3lkdSALWoRilYpS/X
      T6hCrq5d4cziKc4snOLc0hnCOMR3fSb7trN/5AD7Rp9iz/Beipne9IbTttMtCR0TgI5rnDj8
      Ceuin2++9AwZVxLV1jl1/CwjBw4wVsxw8eQRLi7HvPLNV+jLecDtCyBSEf/mg3/FLy9/xGTv
      NlaCFQTQlx1gx8AU+0cPsGtoD1P9O8n7BWvslq+lYy/CqstXYOgAT0azXCtVeWKoiDGC/p5e
      QhUSlVeYq/fza28+yd30v1M6ZqW6DEDeL/Dbz/0+2/unGOsZJ+vmrMFbbpuOCMCEAYXBPQyF
      a1yoJ7W6n+uht7jGOmA2lpmZW+XHf3OJ/S+9xvbBfNug+MaV4FZIJH/88j/g9MKXvLL9VQby
      g+kOQBRFnfgpli6jIwKQ+V5WZy6j4lV6n5hEKYUUEMcxcRxD3zg7J3LsHzOcWyuzc6TnjgfF
      7xndx57RfZ3YbYulM0Mi84NTDDtr1PLjTPYXuHZtlsryVU5cvszlzz+npIeYGog5OVvn6SfG
      OrFJi6UjPHJPgSyWTmFHhFm6HisAS1djBWDpaqwALF2NFYClq7ECsHQ1VgCWrsYKwNLVWAFY
      uhorAEtXYwVg6WqsACxdjRWApauxArB0NVYAlq6mMx/J0xGnj33MJ8fPEutkeIGOa5w98TmL
      lWTaah0FHP/sGIEduWh5iOiIACrLVyhndjAi1pldqwBQDyoI4xJENTCGucvnmFtcILDfSO0a
      jDHoDo+3Sj6+aIiVJowUtTCmWot479glfvDzLykH4W2trzOD4mtl+sZ2MRFWuVBLRnnleoYY
      GaiyDsTBKgu1HDtHe4AbvxS/1UHxlrunHIRcXVhnaqyPfNbbUpmG0enUoJv+pksyUXBLHqU1
      h8/McfrKCt96aSe9+QxKa1RqvLHSREoTxY1FNcOxUoTxpj+KNWGclok1sdaodB1KG6JYcXlu
      DW0g60m+/fKuLR+PjghAZAqsL84zH21QmJy4IX1t7grTV+bZWJpmb/ZJvrFvzH4pvgWlNX/1
      i7NUaxHfenkXnuskxqJMepJTf3riG0aktCaONbE2iUFo3TSuONZthpbEKU5dWeLczCp7tg0w
      MdSTljM32d7menVaUWmzKQZjaIlPvx7T4tfaUA5CtDEcOTuHIwVKb4rGkQLXkbiOxHNl8k2C
      NLwZ1xJ2JK7rkM96eK7Edx08V+K5Sbko1pQqNXaM9eP7W5/HtSNjgo2KOPXZp5ScYV5+di/X
      rl5hIKP56OhpjBC88Pq3GO91Wbx2mcLwTvJpxfMwC8AYw1q5xsJqlb3bB2mdcsi0eCKlCOox
      QT2mFkapPyIIE7eWpgWNtDCmVt/0B/WIaj1iZT3AGChkvXR+o4ZRJR8iapwlY0xbXPPzRmmc
      I7/aiFxHslSqslENGerNMTXWhyMljiNwpcRxZNMw2+NFc72OFDjOdf6b5ZGSX5yc5vOLi/zh
      rx/kifF+PNfBT41WyuQTRyL91JEQidv4uoxgM67NTeOvp1qLiJWmmPeRW5wf6pGcGvFeoI0h
      ihRhnBjzwlqFmcUN/vwnn7O6HrB3xxA5320abGLsiV/ppDaTQiBlurT4HSFxXUnOd8llPHIZ
      l5yfuNnUn/EdPjhxhTBS/Obr+xgoZhODdRPjavpba8OmkTtthn6rycGWSlWOn5/npX0T9Bez
      9+kIP5x0nQDCSFEOQiq1kLVyjWvLZa4tbzC3UmG5VGV5PWB1I8D3HIo5n3IQUgtjnt45wvhQ
      MTFg302MOPVnfJeM55DxXHzPSfz+pt/3XFx5649d1MIYpTSFnJ2G/X7xWAqg0fZc2QhYWQ9Y
      WKtwbbnM3PIGS6WA9WqdjWqdKNb0F7MM9uQY7M0xPlhgYqiHiaEifcUsvfkMK+sBi2sVXtw3
      Qda306Y/bjySArg0t8bx8/O8+vQ24lgzv1phfqXMtZUys0sbzK+UKQcRtSimHsbkMh5jAwXG
      BguMDRSZHE6MfLgvTy7jkU1r6622Gy2PD4+cAIJ6xD/7Dz/lzNWV5GbLSdrbriMZ7sszmdbg
      40PFtDbvoSfnN9vljRspiwUewc+kuo5kfKjI9OI6bz03xVvP72S0v8BQbw7PffieJFkefh6p
      KwAkj7vmVsrsGO21Rm+5Kx65JpDF0kns3KCWrscKwNLVWAFYuhorAEtXYwVg6WqsACxdjRWA
      pauxArB0NR3pChGHZX75/gdsiB7eevM1Cr5DUJrnyKen2fHKi2zLKX7x0RHKdc1zrx1isj/f
      ic1aLHdNR94Eb8x+wbSeYjy6ykpxkj0jvWgVszY9Q6W/j+29RSIF6zMXWM+Nsmu0DwCtNQBS
      2guR5f4jpexQZzgV4+WyZKUkjBI9ScfFcVLDFpLl6dOsiT72j/ajdfugeNtD0/Kg6IgAvN5h
      5k4cYdGE7HlhirW1NXKu4dL0NJV8nsK2AY5fXGX3To9Spc5AMWMHxVseCjoigEzvOM/sg5rM
      M1zMsrFeBwE94+P0AG52kL27EmO3lb3lYcL2BrV0LbY3qKXrsQKwdDVWAJZHH2OofvopGz/6
      f+gguK2ij9SYYMvdY5RCb2wge3sR9/j9S+3kSeqnz1D81q8ji0VMGGGiEBNFqb89TBrWjXxh
      BGGICUN0PXE3l3qyjrCOrodE09OgFMJzKb777pb30QrgAWE25zoErQkOH0EHAflXv4lw3XT+
      RdNwaE7IqDUmjiGOMUqlRhSDijGxwqg0LU7Czfi0TO34CYJjx8i9/BLe1FSyPqVAaYxWoFQa
      Vhit28NKg1ab+ZW6MdyIixVqZQUThqz/8C9vfPzX9uzFtMw3maYJgfA9hJ9pcX2E7yN9H5Hx
      kfl8M06vr6ODAGdw6LbOg30K9DWYKELX68hC4caXdelsyIlhxE0DSYwgNc5aDR0E6GoVUw1a
      /NXEHwSYWg21USY8fRoAZ3AQHKdpuA0DNHGyjYZxNBeZTocoBQiZGE5behLfiNPVKqZWQxYK
      yEKhmUc4DkgncR0HHNkSJ8FxEDJJa4bTvELePFw7foL42jUKb76Bt2MHwvPA95G+h/B8hJ+E
      heclRu15CN8Hz0v8t/HMXFeq6FqAOzi45WftdlD89RiD0RpdLqM2Nlj/wf8kunKF/KFDiIyP
      rgabxlsNMPUaph5i6nV047Kchk0UJoaXnlTROKmel9Rono/IZZG5PCKToXbiBCaKKLz9Fk5f
      L8JxwXURrpsYVurHkakhpq7rtBvq9W7DINNwePUqtaPHyL/2anIFkLeeT/RO0UGAWl3DnRh/
      KN/2d60AjNbojTJqdQW1skq8vEQ8v5AsS0uYSgWdLgAin0+MMpNFZjKIbBaRySBzWUQ+h8zl
      kfk8Mp9D5BJX5vKJobsewnMhdYXrJjWh6zaNwhiDWl2FOMYZHr7nbXNLwmMvAF2uEC8sEC/M
      E80vohbmiefniRcXkxo8vdESmQzu6Aju6Cju2Bju2Cju6BjR9DTR9FV6fus3cYcGk9pSSmhc
      8sG+2n6EefQEYAzx6irRxUv4e/eAkJhaQLy4mNbg84m7kLi6Wk2aHK6LyGZwR0YSAx8dbTN2
      2dPTZsitNXNr2PJ48cgJQNfrLP7Jv6R+8iTOwECzvS4ymaTZkS/gDA3ijqa1+MgIzuAAzuAg
      Tm9v0la2WFIeublBgaYRezunyL/2Gu7IMLKnF6eniOzpSW4ULZYt8khdAYCkCTR9lcye3ci8
      HVlmuXMeuSaQxdJJOtYb1BhDeW2FlVK55WNumvL6OvVYYYyhUlpheW0D/cDkZrHcSEcEUC8v
      cPjYSY4fPsxypQ5AsDbP558eZ3Z9A1Vb4dPDJzh57AjzpWonNmmxdISO3DFGpXkmDr7GtvAi
      VzZqDBcz5AcmOLAvZl1CvDbLyNOHeFLMcHGjwlhvFq11c1B8w7VY7jedeWQiJDpWxLHBzd34
      zFxIiQojYsek34cVbe1+OyuE5UHRkZvguL7Oh++9T9np5Z23XmdlfoaBjObnHx6l7vu89sY7
      nP/k52zIAofeeIP+9EvZ9ibY8iCxT4EsXY0dE2zpeqwAugxjYlR9AWPUPd+Wqi8RlQ5jTHzP
      t1Vffp/a3P/CqNt7ymj7DXwNRtcxuo5witx4sTQtg5oMm0OaTMsIrta4Fn9LGWMAExPM/hlG
      VcmO/w5CZsEoQCeGahQYDSiM0Wm4kR6DUWm+69Na4tJwvH6caP0YXv8ruPkn0w5/pmUfdYvf
      pOntcYlfp+PVWuP1pt9ooo0TmGgNp7AH6Q9fl0+n69fN/K37YJrral9n8juu255R6HAxCUuf
      7Oj3tnyOu1oAxhgwEUaHm64OMaqCjlYIZv87KrhEZvhvIdxeMBGYGKNT18SQLsbEyVDA6+Ma
      ft0w1Julb9bG4dJPkpFdiGQRoukXLf7r07guTXxFmonXwUTEG1+gguk0nmY+gfiK7cubrFO2
      5RGtcY11YppxQjrNdTXKN8sIgWiJb90H0fBf77bsU335PYyq4mQmbssGHr2bYGMw6JaDdX2y
      AV3H6ACj0kUHmLiCjtcwUQkdlzBRCROXMKqaLkHi6iogETKLURVAI/3RRABCIoQDwiE5SQ5C
      eCDdxBUuQrrQ9KfuDXkSF+EhhAtCUl/8a4yqkR3/PsLpaZ7k5OTL605+q+HIZtymEW2Gk7yb
      ZVUwTVQ6jD/wOjK7PTV42DTazqFqM6hgGq/3BYST7fj6W9FRCaMCZGZsy93Xt/QUaH3mJH/6
      gx/j9W/nD37v+/TnOnfRuF0BGKOpzf2AcPk9/KF3kW4x+eFxCR2tpW4Jo2tJTa7rae0eAgLh
      9CDcItItbvq9PoTbl7r9ievkQfio6nlUcBl/+NvIVABthtWs/e6e5KqiEU6mI+uz3JotCeAX
      /+3PGPzO36F+9GdE21/kpd2jHRsgctvjAeIyG1/+U1RwCRAgPaTbasB9CK8vifP6210nn9bY
      aQ2e1uJ2sEv3sqXxANKL+OF//neotRUi7wQL7/xtvnvoqfuxfzcgnAKZse8TLr9HduL38fte
      tkMSLXfF1u4BjKFWKXH54gWq7jAvHpjqyMbtizDLg2RLV4C5c5/x04+PshFsMDsj+Hv/+I/v
      x75ZLPeFWwpgbW6ahbUqY9tGMDrPtpG++7FfFst94ZZNoKgeUKkGrC1e5cP3P6Rn79t8/+2D
      Hdm4bQJZHiRbagId/ss/5QefzTAxOkZvIctk3j6mszw+3FIAL373DyjsOU+ptMZyqcpQX+F+
      7JfFcl+4pQB0HLK2usJ6OSBWBs/37sd+WSz3hVsK4Mhf/wU/PLHIcG+RTMYjN7qPAzuH2/IY
      HXPuxBHW5CAvHtyNKwU6rnHi8K9whnfz9K4Rznz2KctxkZdfPEjWtZ1QLQ8HHekLVFk8z6nF
      DAPxHO72A0wNFpi/8Blr/hTBlS+ZfHKAC4v97M6vsJwb56nJZA53exNseZB0bGY4XSvTN76L
      yTDgQi3p+x2HhsHJAcRGkY3MMPXZwxwRWV58fTdKtX8ouyEEi+V+0xEBiEyejaUFFqIyhYmk
      O6rjQWl1ndp6lf7cVQq7v8mz7izTS+uM7hq1H8q2PBR0pDGeH9qJv36emTDHZF+BK1cuM7x9
      D6ULRwn7JpnY9hTO4gmOzwQ8MT7QiU1aLB3h0RsPYLF0CDso3tL1WAFYuhorAEtXYwVg6Wqs
      ACxdjRWApauxArB0NVYAlq7GCsDS1VgBWLoaKwBLV2MFYOlqrAAsXY0VgKWrsQKwdDUdGRGm
      wjKffPAR67KHtw59k7zvUNtY4OOPj6KKY7zzjYOc/NUHLAQZXnn1FQbyfic2a7HcNR0ZELNx
      7QuuxDsYj66y1ruN3cO9zJ45ghp5hvjSSfxtBWYWirzy9HjbdOSND2Tb7wRbHgRSys4MiieO
      8XN5co7DfJjoyWhBJuuRyUjW19e5fGmG1StHmXrudfZN9LUNirdz9FseFB0RgNs7xPzJY6zo
      Gk88P8X6eolcMcfZL05SK5d58ZWnmFq8yECxh3qscBzHDoq3PBR0pAlkjGZlboZAFpgcHaS0
      tkp/Xw9zM1eRxWFG+wtsrMyzVFZs3z6B7yRNHisAy4PEfine0tXYQfGWrscKwNLVWAFYuhor
      AEtXYwVg6WqsACxdjRWA5bEg1pp6HN92uc50hbA8MoRxzGKlzGixB69D71+MMRhAG4NOu7do
      Yzi9uMCltRW+uX2KYiaTdn0BQ6ublG2UMS3ra3NvmpasRxvDx9OX2KjX+Z2DzzHZu/VP+VoB
      PAQYY/hycZ56HPPs+ASudNrStDHEWqOMRmmd+FO3dWmmmevC6RJpzYWVZaZLq+zoG2CsWEQb
      gzIGbTRam5bwZlwzvTVNb4ZbjTHtCYYxUAlDlNEcnb2a/qbEeGnNd124+d80U28IJ8elpTyJ
      CAAuri7flgDsm+CvwBjDfHmDpWqFvUMjSCGaNU8jvRGOtCJSilBtuqFSRDp145jwq/IoRRBH
      TK+tYoC+TBaEQGnVNN7GCRKt/1v6DzbjRcPfiE9CUggcKXGlJIgjgiiiJ5NhIJdHCpGkC4EU
      Eilb/FtIk7KRpyW/FAgh+GJ+nunSKod27mKkUESSxEtB6goEqdsIC24an5SlGdeeDh9evsR6
      LeA39h2gL5vd0jm2XSFIahetNXUVU49jKmHIcrXKYmWDDy9fohqFjBaK+K5LnBp1pDSRVmlY
      I2DTKJpGcp2hpIvrOPjp4jkOvnRwpOTM0iLKaF6Y2EZPJoMrHVwpcVqM15ESR0gcKVI3iW+m
      XZeexCfG0uhxu1gpc3ZpkQOjYwzk8vf02GpjiJQi4z6cDY2uE0CkFBthnUq9TqleY6lSYalS
      ZiUIKId1Nup1anFE3vMo+hnKYUg1Cnl6dJzhfCEx2IbhtriudHCEaBpimyvaDTSpvdoxxrBW
      C4i1ZjhfsN3D7xOPpQCMMQRxxFoQsBoErASVxNCrFUq1gFoUU4tjDIa+bJaBXJ6BXI6hfIHh
      fJGhfJ6c55F1PYIoYqNeY1tfX1u73PJ48MgJwBjDQqXMueVFnhmbJNaK5eqmgS9WyixXq1TT
      my9tDL7jMpzPM1woMpwvMFwoMFwo0pfN4qXNjEZb0tJddEwAxhiC8jqR8Ogt5BEiGSNQXi8h
      vDyFXAbQVCoVcvke0uEAty2Aehzzbz/9BVdLa0k5IfAdF89x6MlkGCkUGMpvLsP5AgXft8Zt
      uSkd+05wWF7gk0+/RBt47rXXGS5kWJ+/wLHT89Rjw9vvHCJaucKP3j/Mu9/7XQZzd7YdRwiG
      cnnmN9Z5YXI7L0xM0pvJ0ZvNkHFca+iW26Yzg+KvHuda5gDbwotMO2M8Nd7HzKmjuFPPYy6e
      INq5h9UzZ0AEbH/qEP0Zfcdjghvt+5FCEdcOprfcBb7vd2hQvJDoWKEUSC81ZmFQyqCVYfX8
      rzhxsYIbzBH27OHl3SNIKdFaJ89xb8OQi45DMbO157wWy63oyBUgrpX44L0PqMgib7/9BqsL
      Mwz3uHz4i2PEhRG+/cbLCAwXTx1h6MlvMJhPRPIwvAewdC+P3FMgi6WT2DHBlq7HCsDS1VgB
      WLoaKwBLV2MFYOlqrAAsXY0VgKWrsQKwdDVWAJauxgrA0tVYAVi6GisAS1djBWDpaqwAugyj
      NfVKDaPvfSdgFStqGwH3o8NxdbXM+twqJv3y6FZ5OCdseUgIShWqaxUGdgx39FOuxhiMNk1X
      K82lT04T1yN2vrIXx3PBmPZ8yRyAm9ME6mTcdSO9PS2ZmY3ryhttWL44x9zpGSYPTtG/bQja
      bLN1fra2qJv9iuaMbTf5gQBc+2Ka0uwyO17aQ66/0PxNmHSCscZUiS3+6/NsJZ/WmmsnrxDX
      I176gzcZ3799y+eiY4PiW1aZDor/6tU2hkDeyawQcRhTXijRNzmIkLceSmm0QUUxKlK3dHVL
      OA5jZk9epl6uMfTEKJlCdtO4dGp4OpkisOFvGmSaRzf9LWWMbp7AZAeT3xVW6wB4Wa992rfG
      lICth9O0TBLYnKmurUCLcZqvXk8naZupTrRvSwikI5IUmdgH6exupLPE0ZjxrZEmNtNa/TfN
      h6E0twoGXvidQ+x8ec/WdrlTg+KjYJWfv/cRVbK8/e479Oc8KstX+OCXnxP5fXz70FP88qOj
      VOsRB159i10jPXe0HR1rfvVnP2Ph3Cz924bI9eVvadhGm/RAtRxAeeMBbqY5AsdzcVyHKAjR
      ShFW6ggpk3IynfHNS9fTEt+epzV8XZ50H2QaD4ZLn5whDhW7Dz2FX8hu5hctZVvXed06bpr/
      JmWWLy8wc/wiO1/Zy8COkRZjaD3Sos1pTxE3jb8BA7MnL7N4/hp733mGfH/xjs75Vlm6OE9t
      vcrEwanbKtehQfEnmPX2MRleZtYfY/9YHzOnjyC3vYC5eAL2HGA8I5k5fxY5tJ3JgWLboPit
      Ni/iMOaT//JTVi4tUBzppTDci+M5icE23cQvXRfXd5Cug+MmrnQl0mmE5Q1pjuMgnM19Kc2u
      UF5eZ2z/dlz/3rYWdazQ2tzz7Vg2cV23Q4PigZtVC8llKmmjXT5zCndwismBHoxJblRaJ5rd
      Co7n8Pxvv0ZpZoXhJ8fw8pmO7X2D1n3pnRigd2LgtvbxThGOxHHu/XYs7XTkChBWlvjgg19R
      Fxlee/MNqqsL9PoRHx85R+wWePO5Yf73T88wOdbDroMvMzWcXA7tmGDLg6SjM8OpOMIgcV0X
      rWOkdIijCCEdHAlhlHy9w3E9XPuleMtDgJ0VwtLV2FkhLF2PFYDlscBEASZYve1y9pnbLbjd
      uUvvdBtEAegYMj03317jidmdbyX5vzFHfPkj3F1vIwrDd7y2rWxOXf0UNXsY79k/ROT6b5Ih
      Bh1jdAw6Sn7/TeJMGtdYjIquC4dEx/4rJlgj+70/wd3+ypZ30wqgheTVugKdLPGl99GLp/EO
      /jZkekjfxwM6ddOw0S0nKrrpifratCggOvqnmKiG98zvIvx8sg9Gg9EYo0DrNJzG60a8aovD
      qOQxc0v5zXSFXrmACVYJc4OIvm3tvyM5CtfFtbrt6ebrymqNqS6Bjgk//Y/g+GBiaPxuo0nf
      RH61+zVp4ro8JlgDo9Er5+FxFoAJK+jyPLJvB8LxNuONSQxMRRgVJgc6dU3qN3EAYQVTL2PC
      CiYsJ+EwCRNWkzxRgImq6KWzyQn87M8Rbga0wpi4KZDEyOLkpAv5lYto+OVX5BdpEWEAAANE
      SURBVEFgqitgDOrCe+Bmv8IQknUI4aRlHZDJ0tyGcJLj4mbT/O1p6BgVlpFDe5Aj+9J1y/Q1
      Tsu2mt8Va8Tx9cbafEO8GVYX30evnMfd/z3k4C6QLkK6IF1w3Ob+C7np34xrDSfpzbjWfKkb
      nfkRprKIt+87t2VPj9RTIKNCan/zz4nP/wRn+zeQucFNQ44qmDhMDF0lLnGLX4WJEbhZhJdN
      XDcLXi5x03jhF8EvIvw88fQnmLUreM/+HrJvBzje5klM/Y1l08gbxtlikLI93CoGkQogvvgz
      TFjF2/9d8LIkRtkwJtnsqnG3mPo6evUKcnAXwi/c9fq+fltlTHUZ0b+Dh/F5yyP3GNSEFap/
      8ffRC18g8sPIod1Jc8ErIPx8arwFhF9MTm7qikwa72TSGsTdrHmkA8JtGm5r+9uEFUxUReSH
      HsoTaLk7Hj0BGINe+JL48od4T/0WojjacsnGfiHGcls8cgKwWDqJfRFm6XqsACxdjRWApaux
      ArB0NVYAlq6mIwIwRjF78TRnLl+jMduGUREXT5/k8twqxmjmr5zl9IUZ1KM24Ok+PSRrzoBw
      n7Z1v2iM/rvXaK2Jo+i2y3WkK0SwNsPl5ZhcfIn5/j4m+vIsz5xhNc5RO3OS3swTnJ0N6PdW
      mOntZWr4zgbFG2M4/cnPOH/0Yw68/i6D4zswLbMebE7VYdrKNDM0Jyow1+W/Mc5ozdnDH7I8
      c4ln3/kuhb6hzfV89R5uUS+mzauU4uQH/5eoVuOZt3+DTO7evKE1wNyFU1w49kv2vvImo1O7
      0/j2/dn62lp8N5QzXPjsE+YunObZt79Dz9BIu/BaO/fd8nxthm84ZyTn6ouPfkxQLvHOH/1D
      hrc9sdUf0aFB8dOfMZ9/lm3heS6aUZ6e7GPm1DH8J56HiydYc0Pivhd5UlzlbJDnwLbB5qB4
      x3Go1WoAeF7StydKlez7fqLsOBlNJjH85b/+F2wszSUjzRrvD0TzX4dIZmqIwxAwOK6HvIfv
      KpLpXpJpUVzPT7pO3CPiKMJolU4O4N26wN1sK6wn59j1kM5X1LVbOG1fnyU5V2EtAOCl7/w+
      +197l0wmQ71eb0664Pt+M+w4Dp7n4bqu+P9+llNGM+2E7AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='High value Recall' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eXAc2X3n+cmj7hsFoAo3SPC+m2STfbpb3Tpa9khuy17JlicsyZ6xbE94
      vBEb442J3Y3YiN0/d/7ajVh7vfbanll7xsfYXkmW5e6Wmn13s3k3D9wEcRVQVaj7yMrj7R9Z
      AME+KJK4gfwEKrIqUVXvVebv+/L3fu+9X0pCCIGDww5F3ugKODhsJI4AHHY06yIAIQSmaT7y
      5w3DWMXaOGX/NIQQG1a2ZVkrspWHZcUCEMKioWmY1t2uhGUaaI0Gy7sXK+lqWJa1ojquhJ1a
      9kZ2DdezbGmlneCZ4SsMzuTwx7o5e2wPiAbvvH4OAu089tgRVOyTaJomsvxoejNNE0VRVlLN
      R8Ype30RQiCEeGRbeVjUlX5Bti7z3HPPceXKFXtHcZK05qMj6kKRJVyKCyEEkiShqo9WXKPR
      wO12r7SqTtkPyOL5crlc6162ZVlYlvXItvKwrFhmkqmj6Tpi8Wqtekh297MvpnNrprzSr3dw
      WFNWLID+nnY+ePsdIole8tkUFVeSmDnN1aka/W3+1aijg8OaseI+wIOwGAVyXKCtUfZiFMhx
      gRwctjmOABx2NI4AHHY0jgAcdjSOABx2NI4AHHY0jgAcdjSOABx2NI4AHHY0jgAcdjSOABx2
      NI4AHHY0jgAcdjSOABx2NI4AHHY0jgAcdjTrs+rAwWGdEUJgWgZ1o07dqFNrVFmoZslU0vaj
      nCZbSTsCcNjamJZJUSuQr+bI13IsVLPMFqaZL8+Rqy1Q1sqUtRJ1vUbQEyLqixH1xWjxxznS
      cdwRgMPmolQvops6sUALhqWjmwYNQyNXWyBTnm+24BkyFbsFz1WzWM0sFhISfneAjnAn7aEk
      BxOHiQfaaA220eKL41Y9qLKKKitIsoyE5AjAYeMRQpCrLjBdmOQP3/k/qBs1drUMUNKKFOt5
      SvUSXpePkDdMqNmKtwfbOZg4TGuglYgvRtQXJeKN4lG9SJL0wGWvTADC4vJ750hXZE4/9SQx
      v5vS5A3ODc3Tlezj+OFdTi/bYQkhBAKBaZlkKmlG0oOMZIYYzQyTrWSoG3VMy0BCojfWT3e0
      h3iglXigFZ/Lj0f14FE8KLL6UEZ+P1YmgMY8RA/y/L46g9kyMX8LC9ka/bv76WnvQBICs5ne
      byU5H1eaW3Ql7MSyhRCrlqNTN3Xy9RzzpRTDmUHGsiOMZUeoNapEfS10hrs42fU4A6376G/Z
      RUkroel1+lp2faaRr2bKyFV3gRIDuxGZBW589BGnTp9kYxL7OWwUuqkzlb/DaGaY0ewwtxfG
      yFWzGMKkv2UXu1oGeGbXc3RHe4n5WvC57s0d5XcFljLTrQcrE4C7HfLneH1G4fQTZ5hJpZDq
      OSYmUngiHSiyhCIpS/keHzXX5E7MkbmRZT/I+RJCUNdrFLUid3K3GUkPMZIZYiI3jizJhD1h
      +lp288K+L7CndT/d0R5cihtZku9r3JIkYVnWuv1uJzGWU/Yn+LTEWEIISlqRqfwk4wujjGaG
      mcpNMF+eJ+AJ0h3pYVd8gD1t++gMd9MeTKAqD3++1zsxlhMFcrgHIQSjmWFmClMMtO1lPGsb
      +3B6kEwljSUsor4YA617+fKhr7I7vpfWQCtelw+5GVrcSjgCcADAEhbp0hy35m/wFxf+jJJW
      RJFV2oPtdIS7ON1zll3xAXpjfUR9Levmo681jgB2KLafbzFTnObC5Adcmb7EdOEOkiQT9kaQ
      JInvPvW77Gs7gN8d2DYG/3EcAewghBAU6nkmFsa5NH2By1MXKNbzdES6OJI8ztcf+1X2tO1D
      kRR0Xd+wvs964ghgmyOEIFNJc23mMldmLjKaGaam19jffoCfPfRVDiQO0RHuwqXc2+Hdri3+
      x3EEsM0QQlDTq8wWZ7gyfZGLU+dJlWYJukMcTB7m22d+kwOJQ/hdfmTZGaVxBLANEAiKtQJD
      6Ztcnb7MjbmPWKhm6Y31caL7FEeSx9gV34NH9Wx0VTcdjgC2IEIIDMsgV13g6sxFLk59yO2F
      MUzLZG/bfn7u0M9zuOMYLf4WXMr29+NXgiOALUSlUeHOwjjXZq9wdeYSU/lJe1Zk8ggv7vsS
      BxOH8bsDG13NLYUjgE1KtVFlcmGCzmgXN1LXuDj9IUPzt1ioZumP7eLx3if4ztnv0hnp+sR8
      GocHxxHAJkMIQa62wP/+xn9gcP4GiqQQ9cfY07qPl4/+Eie6TxP2hAF2TKRmLXEEsEmwhMVY
      ZoS3xl/nwzvvU6gXkCWZrx3/Bi/u+xIhb3jLTTPYCjgC2EAWB6YuTp3n9eFXmS3O0Bvr41dO
      /hqHO45RrpXpiHaiOOHKNcMRwAZgWAbD6UHeGX+DD++8h1v1cKb3KX79id+iN9aPLNnr6PxK
      wDH+NcYRwDphTycu8d7tt3hz9CfMFqfZFR/gW2f+NYeTxwh6Qo5PvwE4AlhjGobGcHqQt8bP
      cf7Oe4S9ER7vfYLffub36Ah3OUa/wTgCWCMKtTxvj5/jnfE3mc5PcjB5hN988t9wKHmUgDvo
      GP4mwRHAKiEQaHqdkcwQr4+8yuWpC0R9Mc70PcXvPffviAfakJAcw99kOAJYIYuzLd+9/Sbv
      3X6budIsRzqO892n/y1HOo7jc/k2uooO98ERwCMghEAzNIbSN/nx0D9zc+46QU+IZ3Y/x9O7
      niMeaHWiN1sERwAPgRAWqeIs7028zTvjb5Kv5TjWeYLvPvW7HO08cc+ceoetwQoFIJi/M8RE
      TnDi6H5csu3flrNTpLUAuzpjq1DFjcOedamDCTdS13ht8EcMzt8g5I3w/J4XOdP3JG3BxFLc
      3mHrsTIBmCXGUia7WwUT6RJ7EmGwGtz66CYisWdLC0AIwd9f+2v+7upfNf14iWOdj/Fvn/t3
      HEoedYx+m7DC1IhlAvEkba0VZhd0AGbGRujcd4h0sbGUXwbsJE+PmtLONE0ajcaKqvqwDM7f
      4NXBf8KwDAbie/nmye/QHkwAYOjGutRhI3738rLXIWXUJ1hMyrWa6Q/vx8oE4IlQnrvJcBki
      Xfup16uUyiWmx8aZrXk4ONCH2+VaWmO6FRJj1fQqP7zxPf7xxj9wqvcsB9oO83jfWYKe0LqU
      v5yNTIwlSdI9ibHWi/VOjLXizHDFzAzpCvT3JCkUCrTEYlhGg7JmEA7Y89S3Sma4qfwkf/L+
      HzBfSvGrp77N2b6nMQzDyQy3jmw5ATwIm10AhmlwbvTH/M3lv2B36x5+7fHfoD2YRJIkJzXi
      OuOkRlxHBIJsOc1fXPwzPpq9ys8f/SVeOvAvnBj+DmJHC+DS1If8+Qd/TMAd4N9//n+mv2W3
      M1VhmyGEoFxrkCvVyZXr5Es18uX60usdJ4DFLMd/d/WveGP0x3xh/5f52rFv4HZShmx67Ds/
      CrSGgaabaLpBVdMplDVypRq5Up18uc58vsJCsUauVCNf1gDwuBQ8bhWvS8HndREL+oiGvDtL
      AAI78/Efv/d/Ujfq/N5zv8/RjuNITkx/U2BZgv/3lWuUag3OHOyiWteXWmt7W6Nca1Ct61Q1
      nZpmoBsmAZ+bSMBD2O8hHPDQHg1wsLeVWMhHNOgl6Hfj97jweVT8XhduVVm60u8YAWhGnR/e
      +B4/uPEPnOo5w6+c/LWlJLAO64tpWdQbBpWazuR8gdupAuOzOcZn80yliwC8e30Kt6oQ8rtp
      aRryQGeMaMhLLOgjFvISDXoJBzyoiowiy8iyhCI/3IzbbS8AIQQzhSn+/PwfM5W/w788/ev8
      zMDnHMNfJ4QQFCoa87kK05kit1MFJlJ5UgtlMoUqIZ+b9liQ7vYwL53dw3yuTE0z+MYLh2kJ
      +1Dktb06b2sBWJbJm2Ov818u/Se6o738j1/6X0mGOhzjX2Xs0Vu7Za/Ude7MFRibzTGRKnB7
      Nk+uXKOhm3jcKn2JCLs7Ynzu5C76ExGiQS9+rwuXakfeTNNCCCcMuiKEECxUM/zni/+RK9OX
      +OrRr/HSgX+B6szWXBUsS1CqamSLNWayJcabxj45X7Rbdb+beNhHV1uYnznRR18iQk97mNaI
      /6c2PpIE6zkDY9sJQAjBR7NX+JP3/wCP6uX3X/yfGGjd67T6D4EQAsO0cLns55W6zkQqz0Sq
      wHgqz0Qqz0KxRr5Sx+9x0ZeM0p+M8OThbvoSUWIh2zdfbNU3M9tKABWtzN9e/S+cG3mNF/d9
      kV849g28D3nn8J2KYVpU6g0KZY0/+v5FxmZy7O+NMzVfJF+u4/O4CPvd9LRHePxgF/3JCLs6
      YsSCXiTZTtm1FY/zthCAEIKx7Ah/+sH/RVkr8TvP/Lec7H58S56Q9cC0BNlClZlsiel0kfHZ
      PNOZEul8hXypjmlZWALcqsIvPneInvYwbVE/LSEfirK9QsZbXgC62eCfbv2A7330XznacYL/
      7vl/T8QX2/HGL4RANyw03SBbqDGeynNnLs/tVIHJ+QJawwQJwn4PuzqiPLY3SX8ySm8iQqmq
      MZctceZQD27X5ndjVsKWnQwnhGC2OMN/+vBPuL0wxtdP/CrPDnxu1efxbIXJcEIIappBplBl
      PlfhdirPnbkC05kSqYUShilojfhpi/rpS0TpS0bobA3REQ8S9ns+0VjslMlwwjS35hXAEhbv
      T7zDfzz/x3SEO/kfvvi/0LnNk0zZzZTAsgR13WByrshEs0W/ncqTyVeoajqmJehuC9OXiPDc
      iT76k1ESsQBBvxufx4W8jY8R2OJl8WFZWJUKRjaLmV3AXFiwny/kMLMZzHxh6wkgV13gLy/+
      OZemzvOVI7/Ilw9+ZdstRhcCbt1Jc3l4lhN7O8gWa9yezTM5X2BirkA6XyXgdREJeumMBzm2
      u53eRITeRISOlhCqur389HsQAmGYWPUaolbDqlYxC0XMbBZjoWnkc/O2gS/kEJaF7PNheTyU
      ZImq30fJ5yXr9VAZ6N06LpDL5eJ66ip/9sEfocgq3z7zr9nffmjNW/31dIF0w2R0JseVkTl+
      +P4wuVIdSYJY0Et3ux1L35WM0t0eJh72Ew16canyqh+DjXSBKu9/gFmp4D9+HKtYwMzlMXM5
      27izWcyFBcxCEatatQVQqyG53SgtMZRoDCUWxZVMYsVizLtdzAqLqUadtGVSAIQs0RmK0B2J
      0hONbn4BVBsVrk5dZjh7i3Mjr/HswOf4b078Kj6Xb11cnrUSgBCCesMgna9y43aayyMpbtxO
      IwS0Rf3Ew35mF0p858snODqQQJVlJGl9Qo1rLQAhBKLRQNRqmKUSxsws+tQU+p1JqufPg2Uh
      eb1IbjeSqiJ5PCixKGq81Tb0eBwl3oLa0oISj2O63VQNg2y9yp1igeFMmuliAVWWCbg9dEci
      9ERi9EajtAWC9rFsZum7rwBMQyO3UGBxebLHHyISfPhMZ48qACEEf3PlL/m7q3+F3x3gu0/9
      Lqd6zqxrRobVFIAlBPO5CsOTWa6MzjE0mWU2WybREmB/byvHBxIMdLXQ0RJEliU0TcPjWf9p
      2qspAGFZWIUCRiaDMTePPjODPjWFmc5gLGSxKlWUWAy1vQ01kcBIpRC6TvQbX0dpbUUJBpH8
      fqRlc4I0wyBdKTNbKnInn2O2VCRTqQDQHgyyuyVOf6yF9kCIiM+Lch97ua9FNqo5Pnj7XbTm
      6669j3HmSP+KD8rD0Bpow+fy8/Su5zjdc3bLdHTtzAZ2dGZoKsvV0Tmujs6RzleRZYmDfa18
      6cwejg8kiEd8eN3qJ37blvmtpoUwdITWwJibWzJyY3oafWYGq1YHy0RyuVA7OnB1d+M9fBhX
      dzdqMoHs9SF53EiKgtloYJkmqs9uaA3LotrQmCkWmMjnmCzkmS+XMSwTj6rSE4lxLNlJbzRG
      qz+A16WiyMoD30vnvgKQJBmvz8eiftY7JixJEs/v+TxHEydoCcW3hEGUaw0m5wvcuJ3m6ug8
      w1NZXKpCbyLCE4e7ObKrnd2dMbzuLRd/ACGwNA0zl8PM5dFnZppGPosxP4+RySB7PCjRKEpr
      HFdnJ77Tp1CTSdT2BEpL7J6W/ONYQvDKxBiVRoO2QJDpYoHZUpFstULQ7aE1EKA7HOWJnn46
      w2FiPv+Ko1r3dYGMRo1UKo3ZfIs/3EJbbHl6EEF6ctjODHdkH6osUVmY4dL1UXr2HaO3PdKc
      3LS5F8U/atlCCAQwt1Dm8kiKq6PzjEwvkC/V6WwNcmJPB8cG2unviBINeh96au9G/G4hBNrg
      INqdSQInjttuy/T00sPMZrEqFay6htraiqurE1d3N66uLtTOTpRoBDkQsH34n2Kci6ZX1Orc
      Ss9zc36Om+k5AFr9AXbFWuiJxuiORIl4vPjd7lUP4z5AJ7jK//Mf/jfmKiq7n/pZvv75E3f/
      ZRZ578Iku+OCYrCXPYkw5XIRj0vl0qUbnDx7GnWbCUA3TLKFGiPTC1wZnePKSIp8uU5bNMD+
      3jgn9iQ5urudaHDlc5DW9HcLgTBNrGoVq1jCyKTRp6bRp6aovvseQtNAVVFCIeRQCLWzA1dX
      F67OTlzdXajJJLLbbU/ffKhiBVVdZ75cYjCTZjA9x3ylTNTroz/WgktRMEyTrxw8gmcdBsMe
      oASTQEsvHaEyjWL13n81ygTiHbS13c0MF/TKvP3me/gSu5ER6PrWzAwHUKnrDN7J0JuIMDlf
      5KPxNIOTC0yli7hUhQO9rXzlqb3s7YrR1RbGs8xF1HV9xeWv5u8Wdc12U1IpjFQKa3YWc24O
      s1DAyheQPB7bVUkm8Ozfj5HNEPzG13H196OEQqDc6/4aAA/xG4v1OqMLWUbzWSYLBUoNja5w
      hEPtCX4ucoBEMIRHVZcyw0mWtS7n/AEEoLL70En6uj0MzXzsEu6JUJ67xUgFIh37qGsa1WKJ
      fUeOMjo6hmH1b7nMcItUag3+6AeXefejKdwuBY9boac9wqn9HfzGzz1GbyKCx6Uiy2vXL3mY
      3y2EQGgaQtMw8wX0mWn0qWnbR5+ewcxmQVGQXC6UlhZcXV14zp5F7erE3d2NHA4jqSooCsI0
      MRoNXL5HCzULIdBMg2ylwmAmza30HPPlMh5VpTca4wt79zPQ0krQ7UaW5Xs6rJswL5DF0LXL
      SFaSuVLbvf+SAxzam2S+Aj3xAPlCAY8qc3tqjl37D7MV51FlC1XevHqHVy+MMZ+vIMsSXzoz
      wMvPHCAW2hxTq4Vp2h3R7ALG/JztuszMYMynMbNZhKahtLTYHdGODoIvfA61s8OOo7fGkb3e
      +xfQFMrD/FY724bGRD7HUGae8VyWfL1OMhhiT7yVL+7dT3ckilfdXKP2D9AHEHzwo7/mTi3I
      3qOnOD6QeOhCNnMfwLIE8/kKH9ycZjZbZnAyw/6eVjrjQc4c7MI0DdpioXVb3CGac1iq779P
      IzWHoirQPENmuYwxO4uRXUAOBlDjceRQCCR7UEdpa8XV2YXa3o7s89odUeXh632/cQDR/L9u
      mkzkF5gtFdFNi8lCjpqu0xEK41FV4v4AAy1xIl4froeowya8AhT5aGiWvoMnGLk68kgC2Izo
      hsXgnQw/Oj/K+VvT9LZH+Pzp3XzrpeP3hCgbjca6GL/QdfSZWbQbN6h+eAHt1i0wTdSODjz7
      9uHq7sKzfz/B559DbWtDWmeX0LAsstUKE7kFbqXtFl6WJDpCYfa3tvPSvoMkgqEtN9nuAQQQ
      ZO9AOx9euswzL//y2tdojTFNi3euT/KjD0YZmspybHeC3/+Vpznc34ZnnWPzwrJojIxSu3SJ
      +pUr6DOzKNEovlMnCTz7DI1UivAXPo8aj69rvQzLotJoEFIU7uRzDGXSDGXTpCtlvKrKvtZ2
      vnb4OD2RKGGvd8sZ/XLue8Yto8Z7r7/GgtzBL//yaW5NzcPerXcFEEKQLdZ46+od/vH9YRq6
      ydmDXfzWV0/T1RYCpIeN5j1aPSwLq1ikMT5O9fwF6pcvIxoaamcXvjOP03LqFK7OTpDlpcS8
      6jq29EIISg2NP7t4ntliAVVRUCSZtkCAQ+0JDrQdI9ls5TdDX2g1uK8AclPD5KQOjnXm+PO/
      epvf+O4316teq8bEXJ5Xzo/x9rVJPG6FL5we4PkTfQ+UoWC1MDIZ6tevU7t4icbwMEJr4Dl4
      gMjXfgHPoUOoifZH8tVXrX6WxURugSupGQbT8+TrNSTg2b7dnOzqXpUR183K/a/5smDo/Bvc
      9ptoVcHl62N8/uyBdarao9PQTW7dyfCP7w1zbWyertYQ3/rycc4c7ML3KXNuVhN7pqOOmUlT
      u3iJ2sVL6JOTSB4P3iOHiX3n23j270cOBu87LWCtMSyTTKXCtdQsl2enqeoNuiNRvrh3P13h
      COV6nV3x1jVPTLXRbPrp0PDgUaBKrcH7N6d55cMxxmdzPLa3gy+f3cPh/rZHXsz9oGVbtRqN
      8dvUr1yhfvUa+vQ0alcn3sOH8T12AvfAwE8PPz5i2Q+KEIKFWpXB9DxXUzNMFwskgiGOJTs5
      2J6g1R9AkqQdsyQStsGieCEE+bLGaxfGeO3iOOVag5851svvvHyaztbQ2rRgzdFKoWnUr9+g
      dvEi9Y+uY5WKuHt68T/5BN7jx1ATSWTPw08XWN2qChqmyc30HFdmp5nI53ArCkeTnXzlwGHa
      g6GHClNuN7asACxLMDab47ULY5y7PEE84udLjw/w4qldhPxrM4demCZGOo1285Zt9NdvIHs9
      uHfvJvK1l/EeO4YS2/iMFALQdJ3JQp4rs9Ncn5/DpcjsibfyK8dOsqsljrrNXZsHZcu5QKYl
      uDKS4ofvj3BtbI5dySg/99Q+HtuTxO91r2pja+ZylC9fwdORpDE8Qu3CRduf93rxHj+G7+Rj
      eAYGkKPRNTH6h3WBhBCkyiUuz0xzI50iX6sx0NLK8Y5O9sRbCbo/mQHis75np7hAm14ApmWR
      zpVxuVQuDaX4/rtDZApVju9J8vNP72egK7bqYTkhBGY2S/YP/hDto+tIbjdqMoHv5El8Jx/D
      vWsXqGvbmYYHE4BpWeRrNW6m57gwPcVCrUJ7MMTxZCfHkp0EPZ6HjuDsJAFsahdICPjxxdv8
      6Q8vocgyiiLz/Ik+Xjy5m6620JosBm+MjFI5d47q+fNIioocDhH+ylcIffkle7LYJqHc0BhK
      p7mSmuF2LkvY4+VIsoPD7Uk6Q2Fkx8V5IDbPGf1UBOlchUpN51B/G//9N58mHHiwy/gDlyAE
      ol6nfvUapVdeQR+/jau3l5bvfAfPkcPouo4nEtnQkOViPRvN+TeXZ6cZSqeRJDjQluBbJ8/Q
      FY7gVtUHXgq4aVkzh0Qs5VZamlwlxOZ3gap1nUtD0xzsT9ASfvgF+fepFEY6TeXd96icO4dV
      ruA7dYrg51/Evat/yeA38lallXodr8fNdLHIR6lZrs+nqOkNdsXinOjsYm+8Dd8auCnr6QLZ
      iax0hFVHmHXqcz9AmGW8bV8AZMBECBOECcJAWIb9fmGA1dwK/WP7Gwihg6U3P9PcCgOEAcJc
      er7pBQCraITNJYz6+DilV16lduEiks9L6MUX8T/1JEr8k+uO11sAi8ss/2noJtdSM7gUlVyt
      SkcozImOLg62J4h4fWs6MmsLQMfl+uyloMte3fvc0hBGGcssI4wywiwjjArCLGMZZYRZWba/
      +dpqNI1YRxh5+6vkZiRPWIBlXxkkFWQVSXKBpCLJza3k+th+N0iuT/z/U9+7UwRglcvUrlyl
      /NprNEbH8OzfR/ALX8D32In7+vbrJQBLCPK1GiPZNBdnppnILWAhOJro4Ev7DtAWCK5xDQTC
      MhBmFS39CkZ1FG/bF0GYy4z5rvFaS8+Xbc2KbbCyC0ly29slY3QjKUEkNYCkBJHVYPN1EEkJ
      NLd+GgvvIswqvs6v2++VVFg01jUQ/bYXgJHNUjn3BpW33sYqFvE/cZbACy/g7ut9oPk3ay2A
      mq4zmJnn6uwMt3MLuBSFI4kk/bE4+WqFk909BNyrM64hhInQC1j6gv1oZJuPNELPYOkF27i1
      NGABCpLqR1L8tpF+fKuGkJTAvcYse0H22AYve2BxKz3YAhsnCrQKCF2nMTZO+bUfU7twASUW
      I/jiCwSefQY5tPrRo4eqmxDUDYOJ/AJXUzPcmp9HkWX2trbxy8dP0heN4VaUpdmgP018QlhN
      n7cBVgPLKGE1Ms1H+p7nQm+6F5IKkoKkeJFdcWRPO4p/Ly53K7K7DbM2jlGbwt/9L5HVaHMk
      W767ZfvMBt1WVwCrWqX24QXK587Zbs7BAwRffAHv0aPIj5hhbbWuALppcief46O5WQYz89R0
      nd0tcY4nu9gdjxNwue8xKquRQSuN4o0et1tuo4Awilh6vtl6Lxp3FmEU7f8ZBRAgu8JIagRZ
      DSO548hNw5ZdLUiuqL1fDdut+KcYsjMOsIUQloWZXaBy7hyVN9/Eqmv4z54h9q1v4ers2LDY
      vRACUwgylQqXZ6e4PpeipGl0hiM8v2sP+9sShNxuJOwIhzAKmNocpjaLVZ9Fy/4Eqz5N3RUD
      hO1bCxMQthG725DdrajBA00Dbxq5GrLdDsnd3DrjAfdjywpA6Dra0BCV189R/fACaiJB8KWX
      CDz9FEo4vGH1soRFulzhVmaOq7OzzFdKdAT9nEoEOdTSTtSlYWk3sNKvUtHmsLR52z0xCk2/
      OoysRpBkL5LixxN/ATV0GNndguyKIbmidsfQYVVYsQuUmbIzwx0/vBdVljC1EhcvXKV11yH6
      O2JIrK4LZDUaVN99j8qPf0Lj9m08Bw8S+tIX8RzYb083XmXf9EFdoLKmcX1+liuz9jRjv5Xh
      kG+Sfb40rWoJWdSXoiSypw3F04HsSSJ7O1E8SWR3e7NTaXc6sRo0ahncgQ4kaX1nazou0INi
      FhmZ0dgVh9vpEnsSYfL5EodOnmL4+k2MRAzXCq/Alqahj4+D10v1/Q8o/+R1JEXB//jjtPz2
      d1ET9hLNteiUCUvD0mYRaqf92qwgzCqWnsOsz1KqFRkvS3yUlxkrQVCuscc3z7WKYcAAABY8
      SURBVLOxaTo8DVRvAtlzDMXbgexpPtwtwF2D/sx6K14kd/u6G/9OY2UCaJQJxDtpb6uQamaG
      i7cnGR++SbyrH1VaeWa4yg/+kdJf/w3IMq6eHoI//xU8p06hRKP2oNYqZGD7NKxGlkbqP2Pk
      Xkfz71ry0zW9yoTWxq3GAHeMLoQaZ388yi/3BOjyK/jcPiQ1gqT4YNnEBAGYgKk3B3YegI3K
      iLdY9jrERz7BYma4R80i+LCsTACeCJW5QcZqEE7sRWs0mBu7iRXqIBJwAxKulWSGE4K614Pk
      duE7eZL4b/8WPGTCpgcrxkQYZczaBHrhAnrxClZ9BlNA3VRw4yGnHuJq2cVQ2Ysl+ehvaeXn
      O7rYE2/Du0YzQzdyGoYkSTvCBVpxH6AwP0WqDHv6O8nn86CVmJzL4Q5E2T/QjyKvrA8gDIPa
      xATe7u5HDmV+6veaNczabfTSDYziVYzKEAgDxT+AGjqCK3yUn0zXefPODAG3j6op6I+2cCSR
      ZH9bgshDLm98FDZSADulD7CtxgHuVz7CxNIzGMWr6IULGJUhhFFCdsdRwydwRU6i+geQ1ChC
      UriWmuEfbnxERW/YCVz3HyLm86/rInFHAGvPto2nCWFiNdKYlVH04mWM0jXM+iyypw01eBBf
      5zdRw0dR3Il7Ikfz5RI/Gr7F6EKWsz19JPwBDiY61mTWpcPGs60EIEwNo3wTvXQVvXgZqz4N
      wkINHcbT9hJq6IgdiVEDn/isYVmcn7rDqyODtAaC/KvTT9AVjqDrOm7H+LctW1YAQojmxK05
      9OIVjOIljPItkFwo3k5ckVO4en4dNbDXnoiF9KljBEIIposFvnfzOplqmS/s2c/p7h4UafVv
      P+qw+dhCAmiGx+pTditfvIJRHsRqZFB8faihQwTafw7FP4Dsbn2gKQB1Q+eN8THemRhnT2sr
      v3TkOK2BT58f47A92dwCEIJG/n2qE3+I5u/FrKcQRh5J9qGGDuPr+qY9TcAVA8n9wIZrCcF4
      Lsv3bl5HMwxePnyUo4mObZ8FzeGTbG4BAEbpGlYjBQg8yZdxhQ6j+Prt1T6PQEnTeGVkkCuz
      0xzv6OILe/YR8qx9SNNhc7K5BSBJeJMvY8lBvLEzqIGBR/4qSwiuz6X4p6GbyJLEN4+fYm9r
      27ZN+urwYGxuAQCyuw13+y8+cppwIQTZapUfDd9iKDPPEz39vLhnH+4dnA7Q4S6bXgArwbQs
      Ppi6w49Hh2nx+fmN00/QE1mbLG4OW5NtKQAhBDPFAj8YvMl8ucTzu/dwtqdvRyeBdfh0tp0A
      6obOOxPjvHF7jF2xFn7zzFO0B9c6o4LDVmXbCMASgon8At+7eZ1yQ+Plg0c5kkyiyk6r7/DZ
      bAsBlLQ6Pxkb4cOpSY51dPLFPfsJr8NsTYfNiRACy7SwDBPTMLEME8uwlj03MRoGhqZvbQEI
      IbiVnuP7t24A8CvHT7K/tc1JDLuFmbw0SqPaoO/0HizDwtB0+9FobjVj2WvjY/+z9+n1hm3o
      prX0EKY9y3TxueJSUT1bNDOcEIJcvcY/Dt5gOJPmid5+Xti9F88aTKHdqCnJG1n2akyHFpbd
      4pq6iaXbLbGh6TSqGlqlTqNSb241GtU6WkVDK9eoZEsASLKErMhIioysyMiyfM9r24Bdyx4q
      qtt+7vK6cXmb+90uVG9z62l+xq0u5X7dclcA07L4cHqS10aHiHp9fPvUGfqjLU5ocxWxLLvl
      /YQABJiGiV7TaNQad7eLRr3MuBvVBmZDt12NZmstLMs2Tr8H9+LW58YXDRLtasXt9zA/PIPR
      0Nn33FFcPjeyqqCoCrIq332uKEjy6pzvLSMAIQRz5RLfv3Wd2VKJZ/t383TfLie0uUKEEAhL
      YOoGZsOgVqhy40cXKM4XSB7sxtRN26ArtnGbugGSfV9lqXljEtml4PZ78QS8eAIeQu1R3AEv
      Hr/H3gbsrcvnRpZlJNn+nCRLze+6a8w9J3fbC2LWYOnrp7HpBVDTG9ycT5Gt13lnYoy+aAu/
      eeZJ2gNBp9V/SCzTQivXqJdq1AoVypkilWyJykKJerFKvVhFkuWm32xSXSgTiIcIxFqXDNnl
      8yy5GC6vG9XrRnEpq3YuJFlGYm2yfHwam1oAQgjeGB/jx2PDeFSVrx44wvGOTqfV/xQWu3KL
      nT2tVKOcKVLOlqhki5TTBaq5CkbDwDJMJFmyjTsepm2gg2A8TKA1jDfopV6qUcmVSB7oQVG3
      97He1AKQJInWQICQ28OJzi5Od/dsdJU2BcKyaNQaNCoa9VKVSrZEOWu35tVcmepCCSHAHfDg
      CXjxRQPEetroPr6bQDyEPxbEG/J/ph/tCfkItIe3vfHDFlgUbwnBQrlMNBDYkFt7blQkpjC7
      wNzIDJ0HemhUtWZLXqKcKVBZKNOo1tFrDSzTxB8LEmgJEWyNEIiHCLaG8Yb9uH1uXD4P8kPe
      JHwnLYpfmQCEzvtvvE6+LvHYU8/QHvKST93h2vURDj3zAvHFm3xsghtkPCqrXrawT7LZMDB0
      A1PTqZfr1IsVaoUqtYK9zY6n0Os6sirbvrbHhS8SINgabhp5hGBrGF80gCzfXe65Gr7zThLA
      ykrRMniTx3mxvcbNhQrtIS/RZC/7qxXgruHDyjKNWZa1Zhng1qRsAXrddlH0qoZWri8Zdr1Q
      oV6po1fvhhIVl4LL78Ud8OAOePBFArTsTlJK5Rh49jCtuxJ4gj5k9ZMtuSUsLHOVfuwyFs/b
      erOYGW69stKtTACyiqlr6A0D9TP8RUVRln6Q8oid15V8diUIS6BpdVxBOyS3NKJo2nHyWvFu
      i10rVKgvbotVLMtqLsQHWVHwhnz4IgHbH+9rxxfx4wsH8EX8qB7X0gDPkl8uBFpNw+PfmCkd
      G3bMm2kR16VsYa1QAO5WfI13eW9Q5vSZHmZSKVx6kcs3R1DTOs+ePopLuXtpXskUhfWc3mDq
      BrVChYkPR5j4cJjWXUkkCeple/RSK9cwGwYunxu3z4PL78Eb9Notd69t3J6gF0/Qhyfoxe3z
      PNLAjeJWN2Rax2JqxI0o27KsRypbCAsMDaHXoFFB6FXQawi9itBK9qNeAK2E0IqIehHRqGz+
      TjCsTR/AzhZnH/BavkJhdoHCbI7CTJZKtoReb6BrOsK0CLVHaN2dtFvwiB9fJIAn6ENxq6gu
      FcWt2PHrDUrNvtqsZR/grrndvVfv0msh0G/8f1j1Iu5DX7ENeNFYtcVHCep3n4t6wd6nlRCm
      DpYBZsO+bappgLCQ3AHwhpE8ISRPGMkbtree0M4RgGmYaOU69WKVYipHIZWjmMpRmstjWRbe
      oA9fNECks4VwIkY4GcPtczM/NkPnwT7c/tXLS/qgbJQAzNwdjOIs7u6TICn2/XYtA6zmfXrN
      j79uGp1Ra7a6dXtr1OwW2ajbW72GMOqg1+2tUbffayzuryEqabsSkgKqB0n1gOIB1Y2keMDl
      bRpvGMkbQvJEkLwhWDRoTwjJG0XyRpA8IXAHkO4zJX5bCkAIQa1QpTSft419doFyukC9VEOv
      NfC3hAi1R4h0tBBJxvDHQ3hDPlzeT6ZW2VYRqCZCCGiUENUcop7Hqi5ALYdVXUBUMxjD/4yo
      LiC37gOkJQHcbWGbN6a2dNv4rWaQQPUgqV5QvUiu5lZdtnV5bYNWfeDyIbl8zf0+JNUHLi/6
      4A+hUcHz5O+AJ9J8v+fuVnat6k1QNvVA2P1YnMNiR1vqFOfyS25MMZXDaOioLhVv2E84GaP3
      1B4iHS2E2qP2NNimj7mVp1MIIZoGqSGMBpgN0GtYtQVEdQFRzTYf9vNFAxe1XPN+viqSrILi
      AsWN5GtB9rcguUMIU0fpPo0c6mga7qLRekFtGq/L1zR2HyjupmFKd7fNIMDyffbLzz7m8sCL
      CMtEUd2rauifxaa/Api6QWZijlhnK5ZpUckWKc0XKKRylOZyVHMVtHINb9hPIB4inIwRScYI
      tkXwx4K4/Z4VGflGXQGMyQ9ojL+FZ++LIMm2H1zPIyoZRG0Bq5JF1BYQ9aLdmmtl2xc2NPAE
      7/V1vRGkQCuSrwXJH0fytzT/F0Jy2+/F7V/KpmfVSxiVBVwtveveQGytgbAH5FEFIIRg+I2P
      uPXaFdxe99I+l89NOBkj2tFCuCNGOBHD5XOvSdRkNQWwmKZ90W0Qeg1RSmGVU/a2tLidxcqO
      gl61fVileZMR1XvXgJtb2R9vPm8+vJGmq9Bs2WWXbdgPYcjOQNgmQnHZVYz2tLLn6UMEW8N4
      Qr5N67oIy7gbqagXENUFrNIsotw08EoGUclgVdKgV5DcoWaEIowUaEUOJlAThxCdJzBmruA5
      /W2U5FG7Y6eu/k0Adzqb+goAdvSmOJ8jFI+geta3RRJCoFcLuPyR5XuhUcUqzyFKs7Zxl+aa
      Rj6HKKcReqUZ9aiC7EYOJZFCyY9tO2y3xB1AcvnB5UdSVBbvKyaEQK9Xcfv8S/vW83c7V4BN
      gqIqBFrDqO71ORnCNBCa3XLrl/8S/aO/xeh7EpBtgy/PgV6xDdYVsA3Y34IU7kBJHrtr4MHm
      1hN6pFZbkiTbhVln499pbHoBrCXCMhDFWazcbayFUczsCFZ2DFFJI6rZ5ptMRHUBpecM8q5n
      kIIJ5EAbkjcMiwMry1puh63FtheAEJY9wNIoYxWmsLKjWOlBe7swhhAmkuJG8seR43tw7f08
      csse5NY9IKs0pi7h6X/SNniHbcem7wPAg0dihLDsTmap2apnRzAzo4jiFFZxFlQXcqgTOdqD
      3DKA3LoXOdKDHO60oyef4qpsx4Gwn4bTB9hMCHuOyOIEraXBH0tHlFKY2VGszBBWZgRrYdSO
      l5sNJJcfOW4bubL/S8jxPUjBBJLbbw/kONEUB7aAAMz5G+gf/N/Q9RhYBmZmBCs3jpWbAEtH
      8rcihxLILQO4es8it+xGjvUhB9qdkKHDT2VzC0AI9Bv/gDXyCtrY68ht+2w/fZ/dosuRbiRv
      1I6jP8A9wRwcPs7mFoAk4Tr8NcxyGs+hr6Dsfh6QHPfFYdXYVp3gtWAnlr2TOsGO3+Cwo3EE
      4LCjcQTgsKNxBOCwo3EEsEkRQmA0tI0p27Iw9MaGlF3OZSikZ7dIXiBh8MEbr5OrS5x86hna
      Qh4yEze5ODRFuL2fs8f2rngsKpea4uq5H9J/+CQtXX1LWQSWDpAQdn4BIeypEJZ1N7mSZdn7
      mssn7ed3X7P42lpMxrT88xbpO2OMXHqXfaefIZboauYxEM0/0UxsIJpV+ux6fXx/81P3/fzM
      8A1St4fYd/oZAtH4yg7iQzJx7UMKmRT7zzxnT8denqxq2XO7rp/cz8f+d8++T/uupe+wuHPz
      CpZh0LXvCPKynFKIu+eV5efrE3W6e/4+vp9FO+Du+V9hZrg0nuQxXmyrcXOhTFvIw2xR58UX
      X2Two6s0LIEi7mYY0zS7RZMkCUVRPpEtTlXVpTDYIrfeP8fIhbcZvfgOsuq6a+iCew5084vt
      vPPczTu/uPb3bh76Zs6Z5akEJQlZkpFk2f6+5nv1epVGrcrQ+TdQvYGl9axy832L0zPATn6F
      EFhCNOeFSs2cnNLS75EkO/23LMlYloWApVTgsixjLfvOaj6LodWZHrqO4r6bkcIuB6xl6eDk
      ZkoW07SWjoUkyciyXfbSMZYklMVylh1jO3nZ3e8sZVLoWp3poY+gOdNVkkCWFbuezbrbx1JC
      UVSsRWNsjtOoLrX5nWLpPgKKqtoJxixr6RgrioIsK5iWaNqAC80wcfsCSM16LZ5HVVUR2AnL
      JEkCWcKl2ovkl3+nJMnNOriQkDCFdbcOiorctD1JklaaGU7B1BvohomymIBVWJiWhSXsg6bI
      ylK2r8XYrrRUUWnp5Czft3xZ48CJs+Tnptl17HGSuw/cfZ8s2z9UvmvYS0a9+OF7Lj/SspcS
      y2cvS8sXby+jVsozceMKu46ewhsI3fM9H79AS5K01Op/onyx9NGl9y4XvrSsPou7a6U883fG
      6DlwFEVdHo9f/HbxU/Yt7v+0fff/fDEzRyEzR/e+I/ekFLEbi49/VLrnty+yvJFY/vklAXxs
      3+J76+Uiut4g3NLWPB7iU993v3Iepg4rHAgT3LjwDnMVhVOPn6RcWCCi6rx/dZj2/oMc3t1h
      Hy9nIGxLlb2TBsKckWCn7E+wkwTgRIEcdjSOABx2NI4AHHY0jgAcdjTrth5gR90hxin7kdla
      d4h5QCRJwuNZWXrxjYhI7NSyVxq1WwmLA3frdXcaxwVy2NGsyzjASlk+5cApe33KhY1JHb/e
      ZW8JATg4rBWb1gUyGjWGrl6moIPVqHD+nbcYnc5+YmbLWtCo5Hj/7be4MTZDo5rnvbffZDJd
      XJey86nbvPHGG4zNLFArpnnnrbdI5WvrUDIgBLOj15jMVillp3n7rbdZqKxPRzg9cYufvP46
      I1NZcqnbvP3O+xTrxpqXu3kFoDcIqlDU4fbwMH1HTlKeu03DXHsz1HSLY6fPYObnuHVrhP2P
      nSY1Mbrshm5rhzvcxhNnTjA/dYeRkQmOnnqMydGhNS8XQK/lmbwzSa5SZ+z2HI+dOsbo4OA6
      lCzIFzTO/szz7OkMMj5d4MThXYyNTax5yZtWAN5AhHDAjhxpsotYwIvf78JYBwEEwxGmxwaJ
      9w4gub1E/V7c7vU5VF7V4IP3LuKLtIDbS9DnZ30CQYLxkXF6+nuxDB3Z68fnC+JS1+eG2bLU
      4P1zP+ba0CSuQBi/P4TE2pe9afMCaZUCkzMpSo0QHYrg2s1bNKom/Z9yt/TVZuLmZUpSBLdW
      JSwbXL1xk6qusB4ZoOfns3T29jAzP0/CD9dv3qBhrcfNsi0MQ2d4aIKMR+dgROfmzeuYcuin
      f3SlCIErEKHPFyZT1vDoZW4MFlB8bWte9KbtBGvVInPpHCguksl2cvMp/LF2Qr61nx1ZKWTJ
      5Msobh/Jthjp1BzhtiQBz9q3F7VSjnSuRCSeIOgWzM1laUkk8brWJy5u6XU04cIlNFLpPInO
      DlyPcJPvh0IIauU86XyVREcHkl4hnauQSCZQ17jsTSsAB4f1YNP2ARwc1gNHAA47GkcADjsa
      RwAOWxKxPNvFQ31Q3LMof9OGQR0cFsnPjDBbj0BukOjeMySDMm/884/o29XBq+8N0tLawc++
      9DN4lc9uz4euXCTU08XU2AzzE+M8+9VfIOySnCuAw+ankp/jzshHfDBcoi3kRivOkDVChM0M
      rUeep6N2m6F0jWsfvMH710bJp8b55x+9Siqd4tUf/pDBqSyzk+PkKkXGJ+Z57lSSn5y/Azgu
      kMOWwOD8j39EqHcfqgT17AyueA+SEHzw6n/lnRlBMHeFv//n87z+93/Hn74zz2NnT2MW0szO
      p/irv/37e77N39NLaXgUcATgsCVQefLlb6HfeJXJfB01GEZU8iBJPPb05+iNyRQ0lUQiwVOf
      e5akVODyxSsMDt7A1dJHyHtvX0GUiiixGOAMhDlsAUxdQ7cUJEtDqF7caHz/+6/wwktfRFHc
      uIRGQ6gYtRINSyEUcFMsVgiFg5QrddweFx5FRna50BsG1879gLYnX2Z3VHUE4LA1KWTnkHwx
      wv6HnBpjNZiYytDX2wk4VwCHHc7/D9D8gorBVLzeAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='MAP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MRR' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='NDCG' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Recall' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
