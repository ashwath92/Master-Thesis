<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook original-version='18.1' source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='map+ (acl_metrics)' inline='true' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mag_owncontexts_metrics' name='excel-direct.0xjwcom0qx40in19x3qmk117tu9c'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Coursework/Thesis/OfflineEval/MAG/mag_owncontexts_metrics.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[map].[k]' />
              <expression op='[recall].[k]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[map].[k]' />
                <expression op='[ndcg].[k]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[map].[k]' />
                  <expression op='[mrr].[k]' />
                </expression>
              </clause>
              <relation connection='excel-direct.0xjwcom0qx40in19x3qmk117tu9c' name='map' table='[map$]' type='table'>
                <columns gridOrigin='A1:H19:no:A1:H19:0' header='yes' outcome='6'>
                  <column datatype='integer' name='k' ordinal='0' />
                  <column datatype='real' name='hd2vINOUT' ordinal='1' />
                  <column datatype='real' name='hd2vOUT' ordinal='2' />
                  <column datatype='real' name='bm25' ordinal='3' />
                  <column datatype='real' name='hybrid' ordinal='4' />
                  <column datatype='real' name='lda' ordinal='5' />
                  <column datatype='real' name='paper2vec' ordinal='6' />
                  <column datatype='real' name='doc2vec' ordinal='7' />
                </columns>
              </relation>
              <relation connection='excel-direct.0xjwcom0qx40in19x3qmk117tu9c' name='mrr' table='[mrr$]' type='table'>
                <columns gridOrigin='A1:H19:no:A1:H19:0' header='yes' outcome='6'>
                  <column datatype='integer' name='k' ordinal='0' />
                  <column datatype='real' name='hd2vINOUT' ordinal='1' />
                  <column datatype='real' name='hd2vOUT' ordinal='2' />
                  <column datatype='real' name='bm25' ordinal='3' />
                  <column datatype='real' name='hybrid' ordinal='4' />
                  <column datatype='real' name='lda' ordinal='5' />
                  <column datatype='real' name='paper2vec' ordinal='6' />
                  <column datatype='real' name='doc2vec' ordinal='7' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.0xjwcom0qx40in19x3qmk117tu9c' name='ndcg' table='[ndcg$]' type='table'>
              <columns gridOrigin='A1:H19:no:A1:H19:0' header='yes' outcome='6'>
                <column datatype='integer' name='k' ordinal='0' />
                <column datatype='real' name='hd2vINOUT' ordinal='1' />
                <column datatype='real' name='hd2vOUT' ordinal='2' />
                <column datatype='real' name='bm25' ordinal='3' />
                <column datatype='real' name='hybrid' ordinal='4' />
                <column datatype='real' name='lda' ordinal='5' />
                <column datatype='real' name='paper2vec' ordinal='6' />
                <column datatype='real' name='doc2vec' ordinal='7' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0xjwcom0qx40in19x3qmk117tu9c' name='recall' table='[recall$]' type='table'>
            <columns gridOrigin='A1:H19:no:A1:H19:0' header='yes' outcome='6'>
              <column datatype='integer' name='k' ordinal='0' />
              <column datatype='real' name='hd2vINOUT' ordinal='1' />
              <column datatype='real' name='hd2vOUT' ordinal='2' />
              <column datatype='real' name='bm25' ordinal='3' />
              <column datatype='real' name='hybrid' ordinal='4' />
              <column datatype='real' name='lda' ordinal='5' />
              <column datatype='real' name='paper2vec' ordinal='6' />
              <column datatype='real' name='doc2vec' ordinal='7' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[bm25 (mrr)]' value='[mrr].[bm25]' />
          <map key='[bm25 (ndcg)]' value='[ndcg].[bm25]' />
          <map key='[bm25 (recall)]' value='[recall].[bm25]' />
          <map key='[bm25]' value='[map].[bm25]' />
          <map key='[doc2vec (mrr)]' value='[mrr].[doc2vec]' />
          <map key='[doc2vec (ndcg)]' value='[ndcg].[doc2vec]' />
          <map key='[doc2vec (recall)]' value='[recall].[doc2vec]' />
          <map key='[doc2vec]' value='[map].[doc2vec]' />
          <map key='[hd2vINOUT (mrr)]' value='[mrr].[hd2vINOUT]' />
          <map key='[hd2vINOUT (ndcg)]' value='[ndcg].[hd2vINOUT]' />
          <map key='[hd2vINOUT (recall)]' value='[recall].[hd2vINOUT]' />
          <map key='[hd2vINOUT]' value='[map].[hd2vINOUT]' />
          <map key='[hd2vOUT (mrr)]' value='[mrr].[hd2vOUT]' />
          <map key='[hd2vOUT (ndcg)]' value='[ndcg].[hd2vOUT]' />
          <map key='[hd2vOUT (recall)]' value='[recall].[hd2vOUT]' />
          <map key='[hd2vOUT]' value='[map].[hd2vOUT]' />
          <map key='[hybrid (mrr)]' value='[mrr].[hybrid]' />
          <map key='[hybrid (ndcg)]' value='[ndcg].[hybrid]' />
          <map key='[hybrid (recall)]' value='[recall].[hybrid]' />
          <map key='[hybrid]' value='[map].[hybrid]' />
          <map key='[k (mrr)]' value='[mrr].[k]' />
          <map key='[k (ndcg)]' value='[ndcg].[k]' />
          <map key='[k (recall)]' value='[recall].[k]' />
          <map key='[k]' value='[map].[k]' />
          <map key='[lda (mrr)]' value='[mrr].[lda]' />
          <map key='[lda (ndcg)]' value='[ndcg].[lda]' />
          <map key='[lda (recall)]' value='[recall].[lda]' />
          <map key='[lda]' value='[map].[lda]' />
          <map key='[paper2vec (mrr)]' value='[mrr].[paper2vec]' />
          <map key='[paper2vec (ndcg)]' value='[ndcg].[paper2vec]' />
          <map key='[paper2vec (recall)]' value='[recall].[paper2vec]' />
          <map key='[paper2vec]' value='[map].[paper2vec]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lda</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lda]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>lda</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[map]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H19:no:A1:H19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25 (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lda</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lda (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>lda</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mrr]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H19:no:A1:H19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25 (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lda</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lda (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>lda</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ndcg]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H19:no:A1:H19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25 (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lda</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lda (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>lda</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[recall]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H19:no:A1:H19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;' value='BM25' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;' value='Doc2Vec' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;' value='hd2vINOUT' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;' value='hd2vOUT' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;' value='Hybrid' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;' value='LDA' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (recall):qk]&quot;' value='Ldamallet' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;' value='Paper2Vec' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Bm25 (Mrr)' datatype='real' name='[bm25 (mrr)]' role='measure' type='quantitative' />
      <column caption='Bm25 (Ndcg)' datatype='real' name='[bm25 (ndcg)]' role='measure' type='quantitative' />
      <column caption='Bm25 (Recall)' datatype='real' name='[bm25 (recall)]' role='measure' type='quantitative' />
      <column caption='Bm25' datatype='real' name='[bm25]' role='measure' type='quantitative' />
      <column caption='Doc2Vec (Mrr)' datatype='real' name='[doc2vec (mrr)]' role='measure' type='quantitative' />
      <column caption='Doc2Vec (Ndcg)' datatype='real' name='[doc2vec (ndcg)]' role='measure' type='quantitative' />
      <column caption='Doc2Vec (Recall)' datatype='real' name='[doc2vec (recall)]' role='measure' type='quantitative' />
      <column caption='Doc2Vec' datatype='real' name='[doc2vec]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT (mrr)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT (ndcg)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT (recall)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT (mrr)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT (ndcg)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT (recall)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT]' role='measure' type='quantitative' />
      <column caption='Hybrid (Mrr)' datatype='real' name='[hybrid (mrr)]' role='measure' type='quantitative' />
      <column caption='Hybrid (Ndcg)' datatype='real' name='[hybrid (ndcg)]' role='measure' type='quantitative' />
      <column caption='Hybrid (Recall)' datatype='real' name='[hybrid (recall)]' role='measure' type='quantitative' />
      <column caption='Hybrid' datatype='real' name='[hybrid]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='K (Mrr)' datatype='integer' name='[k (mrr)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='K (Ndcg)' datatype='integer' name='[k (ndcg)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='K (Recall)' datatype='integer' name='[k (recall)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal' />
      <column caption='Lda (Mrr)' datatype='real' name='[lda (mrr)]' role='measure' type='quantitative' />
      <column caption='Lda (Ndcg)' datatype='real' name='[lda (ndcg)]' role='measure' type='quantitative' />
      <column caption='Lda (Recall)' datatype='real' name='[lda (recall)]' role='measure' type='quantitative' />
      <column caption='Lda' datatype='real' name='[lda]' role='measure' type='quantitative' />
      <column caption='Paper2Vec (Mrr)' datatype='real' name='[paper2vec (mrr)]' role='measure' type='quantitative' />
      <column caption='Paper2Vec (Ndcg)' datatype='real' name='[paper2vec (ndcg)]' role='measure' type='quantitative' />
      <column caption='Paper2Vec (Recall)' datatype='real' name='[paper2vec (recall)]' role='measure' type='quantitative' />
      <column caption='Paper2Vec' datatype='real' name='[paper2vec]' role='measure' type='quantitative' />
      <column-instance column='[bm25 (mrr)]' derivation='Sum' name='[sum:bm25 (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[bm25 (ndcg)]' derivation='Sum' name='[sum:bm25 (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[bm25 (recall)]' derivation='Sum' name='[sum:bm25 (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[bm25]' derivation='Sum' name='[sum:bm25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec (mrr)]' derivation='Sum' name='[sum:doc2vec (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec (ndcg)]' derivation='Sum' name='[sum:doc2vec (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec (recall)]' derivation='Sum' name='[sum:doc2vec (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec]' derivation='Sum' name='[sum:doc2vec:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT (mrr)]' derivation='Sum' name='[sum:hd2vINOUT (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT (ndcg)]' derivation='Sum' name='[sum:hd2vINOUT (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT (recall)]' derivation='Sum' name='[sum:hd2vINOUT (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT]' derivation='Sum' name='[sum:hd2vINOUT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT (mrr)]' derivation='Sum' name='[sum:hd2vOUT (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT (ndcg)]' derivation='Sum' name='[sum:hd2vOUT (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT (recall)]' derivation='Sum' name='[sum:hd2vOUT (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT]' derivation='Sum' name='[sum:hd2vOUT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid (mrr)]' derivation='Sum' name='[sum:hybrid (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid (ndcg)]' derivation='Sum' name='[sum:hybrid (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid (recall)]' derivation='Sum' name='[sum:hybrid (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid]' derivation='Sum' name='[sum:hybrid:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lda (mrr)]' derivation='Sum' name='[sum:lda (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[lda (ndcg)]' derivation='Sum' name='[sum:lda (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[lda (recall)]' derivation='Sum' name='[sum:lda (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[lda]' derivation='Sum' name='[sum:lda:qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec (mrr)]' derivation='Sum' name='[sum:paper2vec (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec (ndcg)]' derivation='Sum' name='[sum:paper2vec (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec (recall)]' derivation='Sum' name='[sum:paper2vec (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec]' derivation='Sum' name='[sum:paper2vec:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.592068' measure-ordering='alphabetic' measure-percentage='0.407932' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (mrr):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (mrr):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (mrr):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (recall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (mrr):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (mrr):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (mrr):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (mrr):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (mrr):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='High value MAP'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25' datatype='real' name='[bm25]' role='measure' type='quantitative' />
            <column caption='Doc2Vec' datatype='real' name='[doc2vec]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT]' role='measure' type='quantitative' />
            <column caption='Hybrid' datatype='real' name='[hybrid]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal' />
            <column caption='Lda' datatype='real' name='[lda]' role='measure' type='quantitative' />
            <column-instance column='[k]' derivation='None' name='[none:k:ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec' datatype='real' name='[paper2vec]' role='measure' type='quantitative' />
            <column-instance column='[bm25]' derivation='Sum' name='[sum:bm25:qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec]' derivation='Sum' name='[sum:doc2vec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT]' derivation='Sum' name='[sum:hd2vINOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT]' derivation='Sum' name='[sum:hd2vOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid]' derivation='Sum' name='[sum:hybrid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda]' derivation='Sum' name='[sum:lda:qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec]' derivation='Sum' name='[sum:paper2vec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:k:ok]' member='10' />
              <groupfilter function='member' level='[none:k:ok]' member='20' />
              <groupfilter function='member' level='[none:k:ok]' member='30' />
              <groupfilter function='member' level='[none:k:ok]' member='40' />
              <groupfilter function='member' level='[none:k:ok]' member='50' />
              <groupfilter function='member' level='[none:k:ok]' member='100' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='MAP' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</cols>
      </table>
      <simple-id uuid='{5655C8B9-CEC9-4A52-B75D-AF44EF23F03E}' />
    </worksheet>
    <worksheet name='High value Recall'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Recall@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Recall)' datatype='real' name='[bm25 (recall)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Recall)' datatype='real' name='[doc2vec (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (recall)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Recall)' datatype='real' name='[hybrid (recall)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Recall)' datatype='integer' name='[k (recall)]' role='dimension' type='ordinal' />
            <column caption='Lda (Recall)' datatype='real' name='[lda (recall)]' role='measure' type='quantitative' />
            <column-instance column='[k (recall)]' derivation='None' name='[none:k (recall):ok]' pivot='key' type='ordinal' />
            <column-instance column='[k (recall)]' derivation='None' name='[none:k (recall):qk]' pivot='key' type='quantitative' />
            <column caption='Paper2Vec (Recall)' datatype='real' name='[paper2vec (recall)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (recall)]' derivation='Sum' name='[sum:bm25 (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (recall)]' derivation='Sum' name='[sum:doc2vec (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (recall)]' derivation='Sum' name='[sum:hd2vINOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (recall)]' derivation='Sum' name='[sum:hd2vOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (recall)]' derivation='Sum' name='[sum:hybrid (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda (recall)]' derivation='Sum' name='[sum:lda (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (recall)]' derivation='Sum' name='[sum:paper2vec (recall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:k (recall):ok]' member='10' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='20' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='30' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='40' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='50' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='100' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='Recall' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):qk]</cols>
      </table>
      <simple-id uuid='{728FE13B-C33C-43B1-B399-EF81DAB52CF7}' />
    </worksheet>
    <worksheet name='MAP'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='18'>MAP@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25' datatype='real' name='[bm25]' role='measure' type='quantitative' />
            <column caption='Doc2Vec' datatype='real' name='[doc2vec]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT]' role='measure' type='quantitative' />
            <column caption='Hybrid' datatype='real' name='[hybrid]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal' />
            <column caption='Lda' datatype='real' name='[lda]' role='measure' type='quantitative' />
            <column-instance column='[k]' derivation='None' name='[none:k:ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec' datatype='real' name='[paper2vec]' role='measure' type='quantitative' />
            <column-instance column='[bm25]' derivation='Sum' name='[sum:bm25:qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec]' derivation='Sum' name='[sum:doc2vec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT]' derivation='Sum' name='[sum:hd2vINOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT]' derivation='Sum' name='[sum:hd2vOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid]' derivation='Sum' name='[sum:hybrid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda]' derivation='Sum' name='[sum:lda:qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec]' derivation='Sum' name='[sum:paper2vec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]'>
            <groupfilter from='1' function='range' level='[none:k:ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='MAP' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</cols>
      </table>
      <simple-id uuid='{41C82915-1299-4B14-998C-E916B4EBCFC8}' />
    </worksheet>
    <worksheet name='MRR'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='18'>MRR@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Mrr)' datatype='real' name='[bm25 (mrr)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Mrr)' datatype='real' name='[doc2vec (mrr)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (mrr)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (mrr)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Mrr)' datatype='real' name='[hybrid (mrr)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Mrr)' datatype='integer' name='[k (mrr)]' role='dimension' type='ordinal' />
            <column caption='Lda (Mrr)' datatype='real' name='[lda (mrr)]' role='measure' type='quantitative' />
            <column-instance column='[k (mrr)]' derivation='None' name='[none:k (mrr):ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec (Mrr)' datatype='real' name='[paper2vec (mrr)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (mrr)]' derivation='Sum' name='[sum:bm25 (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (mrr)]' derivation='Sum' name='[sum:doc2vec (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (mrr)]' derivation='Sum' name='[sum:hd2vINOUT (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (mrr)]' derivation='Sum' name='[sum:hd2vOUT (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (mrr)]' derivation='Sum' name='[sum:hybrid (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda (mrr)]' derivation='Sum' name='[sum:lda (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (mrr)]' derivation='Sum' name='[sum:paper2vec (mrr):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (mrr):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]'>
            <groupfilter from='1' function='range' level='[none:k (mrr):ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='MRR' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]</cols>
      </table>
      <simple-id uuid='{258031A8-E651-405E-B3D4-716C98C5D783}' />
    </worksheet>
    <worksheet name='NDCG'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='18'>NDCG@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Ndcg)' datatype='real' name='[bm25 (ndcg)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Ndcg)' datatype='real' name='[doc2vec (ndcg)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (ndcg)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (ndcg)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Ndcg)' datatype='real' name='[hybrid (ndcg)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Ndcg)' datatype='integer' name='[k (ndcg)]' role='dimension' type='ordinal' />
            <column caption='Lda (Ndcg)' datatype='real' name='[lda (ndcg)]' role='measure' type='quantitative' />
            <column-instance column='[k (ndcg)]' derivation='None' name='[none:k (ndcg):ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec (Ndcg)' datatype='real' name='[paper2vec (ndcg)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (ndcg)]' derivation='Sum' name='[sum:bm25 (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (ndcg)]' derivation='Sum' name='[sum:doc2vec (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (ndcg)]' derivation='Sum' name='[sum:hd2vINOUT (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (ndcg)]' derivation='Sum' name='[sum:hd2vOUT (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (ndcg)]' derivation='Sum' name='[sum:hybrid (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda (ndcg)]' derivation='Sum' name='[sum:lda (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (ndcg)]' derivation='Sum' name='[sum:paper2vec (ndcg):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (ndcg):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]'>
            <groupfilter from='1' function='range' level='[none:k (ndcg):ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='NDCG' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]</cols>
      </table>
      <simple-id uuid='{60BAAFFD-9277-44E5-A061-4A11AEC523B9}' />
    </worksheet>
    <worksheet name='Recall'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='18'>Recall@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Recall)' datatype='real' name='[bm25 (recall)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Recall)' datatype='real' name='[doc2vec (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (recall)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Recall)' datatype='real' name='[hybrid (recall)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Recall)' datatype='integer' name='[k (recall)]' role='dimension' type='ordinal' />
            <column caption='Lda (Recall)' datatype='real' name='[lda (recall)]' role='measure' type='quantitative' />
            <column-instance column='[k (recall)]' derivation='None' name='[none:k (recall):ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec (Recall)' datatype='real' name='[paper2vec (recall)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (recall)]' derivation='Sum' name='[sum:bm25 (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (recall)]' derivation='Sum' name='[sum:doc2vec (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (recall)]' derivation='Sum' name='[sum:hd2vINOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (recall)]' derivation='Sum' name='[sum:hd2vOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (recall)]' derivation='Sum' name='[sum:hybrid (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda (recall)]' derivation='Sum' name='[sum:lda (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (recall)]' derivation='Sum' name='[sum:paper2vec (recall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;</bucket>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;</bucket>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;</bucket>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;</bucket>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;</bucket>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;</bucket>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]'>
            <groupfilter from='1' function='range' level='[none:k (recall):ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='Recall' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='14' />
            <format attr='col-width' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' value='133' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</cols>
      </table>
      <simple-id uuid='{F00F0ED4-5094-41E9-9446-FA36A49AB6B4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='88605' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='88605' id='5' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='44303' id='3' name='Recall' w='49200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44303' id='9' name='MRR' w='49200' x='50000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44302' id='10' name='MAP' w='49200' x='800' y='45303'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44302' id='11' name='NDCG' w='49200' x='50000' y='45303'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='9395' id='12' type='layout-flow' w='98400' x='800' y='89605'>
            <zone h='4375' id='8' leg-item-layout='horz' name='Recall' pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' show-title='false' type='color' w='98400' x='800' y='89605'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='24' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='44303' id='3' is-fixed='true' name='Recall' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4375' id='8' leg-item-layout='horz' name='Recall' pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' show-title='false' type='color' w='98400' x='800' y='89605'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44303' id='9' is-fixed='true' name='MRR' w='49200' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44302' id='10' is-fixed='true' name='MAP' w='49200' x='800' y='45303'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44302' id='11' is-fixed='true' name='NDCG' w='49200' x='50000' y='45303'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0B046EC0-DDC6-4381-A0CC-2B06166E247D}' />
    </dashboard>
    <dashboard name='Dashboard 1 (2)'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='12' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5750' id='8' leg-item-layout='horz' name='Recall' pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='31500' id='3' name='Recall' w='38700' x='5100' y='12875' />
        <zone h='33000' id='9' name='MRR' w='41700' x='49300' y='12125' />
        <zone h='33625' id='10' name='MAP' w='43000' x='29000' y='48250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='24' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='264' h='33000' id='9' is-fixed='true' name='MRR' w='41700' x='49300' y='12125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='252' h='31500' id='3' is-fixed='true' name='Recall' w='38700' x='5100' y='12875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5750' id='8' leg-item-layout='horz' name='Recall' pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='269' h='33625' id='10' is-fixed='true' name='MAP' w='43000' x='29000' y='48250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{35B52F09-A046-4026-B757-251110E378CC}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='MAP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE1AD117-502F-4F45-B5C2-4CDCF5C5477C}' />
    </window>
    <window class='worksheet' name='High value MAP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{60BABB40-9960-4112-9321-97B28E7B44F8}' />
    </window>
    <window class='worksheet' name='MRR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AA50CC9-8D96-4EFF-91AD-EA35F198D8C1}' />
    </window>
    <window class='worksheet' name='Recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FDBFCA76-4A4E-43E7-BE4A-930952F7A6BF}' />
    </window>
    <window class='worksheet' name='High value Recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F1E2AE7-CB73-41DB-B8A1-8C1EC09B4440}' />
    </window>
    <window class='worksheet' name='NDCG'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{040FF1B5-8143-4244-8521-DD5825CFCB72}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='MAP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MRR'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='NDCG'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Recall'>
          <zoom type='entire-view' />
          <highlight field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{8AA6632A-4CA1-4462-8319-C99E3EE5A28E}' />
    </window>
    <window class='dashboard' name='Dashboard 1 (2)'>
      <viewpoints>
        <viewpoint name='MAP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MRR'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Recall'>
          <zoom type='entire-view' />
          <highlight field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CA4A706A-5313-4683-A4D5-48E83FF29302}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3hdV5mo/+7Tu3ovlmRJlmW519iO7XSnQEJJGYYWykCAELjDMMxvZrjM
      zL13hguXAYYhEEoCJCEFEtKcasdxl9ytLqv3rtN06t57/f44cresYskqPu/z7Gfts8/aa6+9
      v/Wt8q0mCSEEUaJcp2hmOgJRoswkUQWIcl0TVYAo1zVRBYhyXaOb6QhMJdXlx/GFVDQ6PUWL
      izEbrvx6st/DyapG0tPicAdgUV42CJXG07V4goLi4sWIgJvy+nZWL19yjd4iyrhQQxw/Xk5s
      cjq5WWn4XANU1zdjt9vxeDwAJKRkkpMex/Hj5aiA3miluHgROo0EQFdr4/wqAdydtfzhjf1o
      nY18/Z9+MKZ/ndnGT/7luziHWvnRr57D7+rhtR3vYU/KZElhDqX796AY7Xz/3//1GsQ+yoTQ
      GHB3VvH1b/0LsoCqw7v49v/5OfkF+fz8/3wbU2oBP/rHr3G4fpDa0rfZX9VN4+Ed/OCJFxCy
      nx2vv0ZIZ59fJYBOp8PV301lg44bb1hLf2sVv39tP1pgSZqWJqeWRSvXUPrmawz0NvE3//Rj
      JElCkiI5wr6Dx9m2cTm/f/55TpXu5d/+68c01XchSVBVtosGn50PbVs7sy8Z5SwpC9dSEvc6
      HxytIkZrRqvToZE06HRaqsuPEZNRQGZyDC06Hd3tTeiMQdZuLKZs3z42bN3Gc7/7/fwqAQBi
      4uM5XnoAW0wclcdL6ez3sGHDOvbs2sWKLfeweVkB2QsyQfYx5AlecK/BaOS1P/6W/OIlaOKy
      MfldOBLjQA7wzJ92sH7Vshl6qyijcf/99/PLn/2CvIK8C65LITe17U5irCYA4uPsHDhYRlx8
      PD5h4PT+17Cm588vBRhwDRNvMfKNf/weB9/8M8mFazHLQ6Az88CnHmbH80/S0tJCeW0ThUtW
      4R9sJzN/IQMDftKSYtFqNcQkpRMadlNcmEfnYICQs4OcvEXcfefN/O7pF1Bn+iWjRFBD1FRX
      kb1iKw/ct53erm4WZSdRW1dDUvYiErMW8+DNxfzxpVcZlnUYtSa+991v8+c/PoNGKIQMMShy
      CCnaE3wO2e/m4JFTWMxmkEDSmli+fAlaaaZjFmVKETKHDhxEZ7REFSDK9c28qgJFiTJRptwK
      pKoqGk1Ur+YzQghUVWU+VB6mXAHmw0eJEqGrpZ4Ol8yaZUVUHTlKzprVHNn5FotXbyEp1oKi
      KGi12pmO5lUxr/oBokwtA8NBTJqI3SvFbsOPH+egH0WZP7awaF1lHqIKlVfL/0yft/eqwjGI
      MAOeIC6Xk7qmOpqrm4hLjcc37J2imM48k7YC1VWVs2BRCQTcnKxrZd3KpQDzolicawTCfur7
      T3O6r4bTfbX4wz7cARefWfdFlqWvnLbnzgdZT64KFOrDK5uprKxmSX4GA01NeJaVYEGdN42j
      2YgiFJz+QYSA+oFaTvfV0jrYjE6jY2FCAQXJRdySfwcWg/XsPbIsnz2XJGnOJ9ipZnIKoDHS
      3lhNbn4ePQMugiEPwbCE3RT5uNGPPPV0ujp47vgfONZ2mBtyNlOYtIibCm4jK3YBWk30e0+W
      Ke8Imw/F4mxBVmWOtpXx/ul3segtbM2/hThLPNlxOTMdNWB+yDqqALOQgeF+dp1+h/LOE6zM
      XMO2/NuIs8TNdLQuYa7K2hP0oNfo0Gn1UQWYLQihUt51kp11byOrMjcX3M6KjNWzunoz12Q9
      5BvkWPth/lL+IqpQSXdkRhVgJgkrYer763jx+DO4Ai5WZ63jlsI7SLGnznTUxsVsl7UQgtah
      Fo61l1HRdRKLwcqqzLVkxGaRaE0i3pIQVYBriazINAycpqq7nNreKsKKTH5SITGmGAqSiihI
      WjTTUZwQs03WQggUVaG6p4Kj7Ydp7D9NVtwCVmWupSRtOUad8ZJ7ogowTahCpbq7Ar3WQHVP
      BTU9VQSVIAsTCihOLaEopRiz3jLT0bwqZousez09HGs/zPPHnyYzNpuStGWszlxHXmI+GunK
      fb1RBZgG/GE/fzrxLG9Wv8athdtZkbGaopTiC+zz84GZkrU74KKy6xQV3adod7aSZEuhJHUZ
      sipz48KbLpvTj0ZUAaaQkBzi3bo3KW3ez+1Fd7M4ZQkJ1sSZjta0cS1k7Q64GPQNMOQborL7
      JA399dgMNorTllKSuozM2Oyzc7onQ1QBpgBZlfmgfie7699jW/6tbM2/BZ1m/o8znG5Zh+QQ
      P3z/f9My2MT2xfdQkraMvISCKbWMRRXgKlCFyoGmPbxTs4P1OZu4rfBODDrDTEfrmjGdsm4e
      bOSp0ie4qeA2lmesItY8Pf0gUQWYBEIIjrSV8kblX1iWvpI7iz+MWW+e6Whdc6ZD1qpQeb3i
      Zap6KvjCDV8h0Zo0peFfTFQBJoAvNMyfTj7H8fbDrMu+gQ+VfBSb0T7T0ZoxplrWvd4efn3w
      5yxPX8WdxR8a04IzWVS/H0mnQ9JHe4LHxBv0cLStjMOthwjKQQqSCklzZHDjwptmOmozzlTJ
      WgjBnoZd7K5/j4fXf5nsuAVTELsIaiCA3NOL3NsTcXt68B89BpKELjkpqgCXIyQHOdl5nLKW
      A3iCblZnrWdN1nriLPEzHbVZxVTI2hNw89vSX5BoTeaBlX+NXqufcBhCVQk3t+B65RX06enI
      ff0ogwOgCiSTEV1yMrqUlBE3GREKo3U4ogpwPsfbj9Dn7aWmpxJnwMny9JWsy76BtJiMmY7a
      rOVqZC2E4GTnMV46+TwPrfo0xakl47tPVZE7Owk1NkWOtlZQVfTp6SguF7ZbbkafmYU2IR5p
      HIszRBUAqOg6xU/3/ICS1GU8tOrTJNtTZjpKV01Hn5uUeBs67eTr0e+/+wamuExuWFnEu7sO
      UZibxMny02z70L04dJOXtSpUvvri58iJz+PRLX97xQ5C/4kTBKuqEbJMqLUVZAV9ejqGvFwM
      ebnos7KQ9BMvNc5wXStAIOzn2aO/wxf28Zm1X8Bucsx0lCaNoqq0druobR+grnWAY0dq+NxD
      W9myImfSYR4/cRyhqqxatZrTtbXI4QB6NYytYDVJhsjsv8l0Qj1V9gQajYYPL/nYZc2bqs+H
      v+wwvtJSpGAIXXw89nvuQpuZCbqp7V+Z/701o1DZXc7zx/7APUs+wroFN8x0dCaEEDDg9lHX
      NkBd2wCNHYPIvb2khDzkSAG2SQHubTtFojcfyJn0c1Ji7ZgSMnENdNLR1UXh4mIGB5zkmyVg
      4rP/hBA8VfYESfZk7l368Qv+U4NB/MeO4ztwEOH3YV63juRHv4bWMb2Z0iRLAEHp3p3kLd2M
      Wbg5cryGG7ZtwaiZ/SVAIBzgj8d+jzfo4bPrvjgncn1ZUWnsHKLyaDUDpUfwaQ0YBvpIl72k
      61UykmMwpCSjz8hAn5GBLiMdxenEkJuLxjj+cTETZSKyFkLwZOkTJFgTuHfpxyPzxhWFQHk5
      w/sPovT3YV61CsvGG9AlXrvhI5MrAfwdWNPX0t1xmpLiJSTFWlGEQFFm96T4mt4qXjjxNHcW
      fYi12ZFc//xJ47MFfzBMX2Mb3oYWnKcb8TY2kShCrI2zIHncWO68A33GRvQZGWjjLt9DqktM
      RAXUWTApPpL4f0mCNTGS+GWZzkcfQ2O1Yl63lpiP3Is+Y2aMDZMrAUSQnW/tJGfRYoJeJ619
      TrZsuQmLfnaWAEE5wHPH/nB2qRCHKWamo3QWxevFveMthCITGnLibe1AC9gy0zBmZ6HPzkKf
      lYU2Pv6qBn1NB+OR9cWJXxkaYuC/H8ewMA/b7behS0i4RrE9R2VTL4oaSfbzuhEclIO8Xvky
      JzuOc3fxh1mfs2nG4iKEQO7pJdzSQmjk6G3vZVCWsFtNWAsXkrjtRmJystBOcUNvuhhL1hcn
      /mBtLUN/eIa4hz+DceHCaY9fKKzQ0e+mrddNW6+Ltl43Lm+A7sFhEmMtrC5Mm58KIITgVOdx
      Xq/8C13uDr59yz9f05UUhKIQamjA/drraOPiCLa109o1SKtsYNCRQEzhQuIXF7AwP5PctDg0
      mtmVs4+XK8n6gsRf8jE8b7+D/8QJEr7yyLQ0bNv73Dzzbjmp8Vba+zx4/SH0Og0ZiQ6yks8c
      McRYTahCRTOyNdaoCrDj5Wdx+iPn93zsEzjG2ZaaSQVQVJmDzfvYWfc2CxMLuXPxh6Z9PL4Q
      AqW3j2BDA6GGBkLNLcjhMNVBPcP9gxzJKMGYs4CivFSW5iWTnxGP9ips87OJ0WR9fuL/UOGH
      GPr1b9HGxhLz0ANIUzR0onvQS2VTHxVNvXQOeEiOtRIMK9y1oYD8jDjslvEl2LlR1o5BIBzg
      /fp3Odi0l9VZ6/nWzf+EdZpmXwUqKgi1tKL6fIQaGxE+H9rkZFwJqVRoEqnITMcbFizOTkQV
      gu/cVIzVNLuHSFccOcDxhl5y42HRxvtIuopPd37ivzt5C33//h/Y79yOZf36SYUXCisEQjIe
      X5CKkQTfM+QlLd7GktxkHrhpCWkJtkm3j0YtAYTs59k//AG/MHD/X3+WmFlYArj8Tt6ueYPK
      7lNszb+FG/NumtRYkiuhuFwEq2sIVFcTbmlBhEJo7A7M27dzWmPnRIeL2tYBEmLMrCpMY1VB
      GvGOuTU0es+e91hglTnkTOaBm1cx3rR0say7XB08VfYrFqcs4Q61ANdLL5Pwpb+ZtIWnpdvJ
      E68do75jkI0lWZTkJrEkN5mUONu44zgWo5YA3vaTpOUupKV1kGEFZo/dBA427eWDhl0oqszt
      RXfz8RV/ddVDZ4UQSESGygZraglUVxNqaERjtWAsKsK2dSvDCSk8s7OCmtZ+HIf7Kc6RuGFJ
      Jp/ZvhztHN4UxGHUc7jJiRY3rsAqYiepv0P+IYJhPzfWgbdtN8n/8B005okFFgorHKhoY+ex
      JuLtJj6ypYikGAsLUmMnF6kxGFUB7JlLKTSG0CrHSZ5Fixf0eXt4rfJllqav4KFVn0Li6rIC
      oSgEa2txPv0s6vAwurRUjIsWYV69itgH7qfHE2RXZTtH32/GqG9jUXYiK/JT2bwse4reaObx
      eLz0D7gxagMoV/E5Fzr1/M27YXQ36nB847EJVUs6+j28XVZPTUs/G0uy+LuHNuKwTl8n3hlG
      VQBfbz2nmo3Eh4fo80HaLFCCtqEWfnXwv/nq5m+SEZs16XAUj4fAiZP4jx9H7h/AuKgQ2x23
      YcjKxpCXS7/Lx76qdg4/vR+rycCGJZn8wyc3YzFObfVqttA30E2ifpBWkYPpKgoyjc2Kefly
      HPfdO67ELysqpVXtvHukEYtRzx3rFvLwnSuuaX/H6GZQNcSLTz9F4ZrbKCrKxTjODzNdbYC3
      ql+nrq+GRzY9NqF6vtzXB4D/2HH8J04gQmFMS0swr1oZGUkoSXj9IR5/5Qjdg15sJgNritJZ
      vziD5Lj5tYzJaOzc8ScaO4YAuP9TXyTWNL77JitrpzfAF/7vqyxekMQnbi2hKDtxxjr5Ri0B
      hrurULQ6Tp04TEJ2Lpm2axmtcwgh+NPJP+IOuPjajf9j3HV9ubcX7673cf/lFUwrV2K9YQMJ
      jzyC1hGZwhiSFQ5WtrPnZAu+QJj8jHhuWZXLqsK06XydWUn2gjxkXT9CVdFPc1Omrm2AX71+
      jG98fANritIxGWbWEDnq04OaeLx+leQ4FeMM9dOoQuWp0iewGe18bv2Xx8wlFLcb38FD+MoO
      o7VZsWzaSPJ3/xlj0SIkjQZVCMobe/ngRDNtvW7WFKXzubtWXjc5/Wh4vB5CwSAGsw3dNBnw
      hIC3y+o5WNnOP37yRmLt4yxmpplRFaDs+AlKsmI4PmQhcQbSh6yEeXz/T8lPinRojYbq9+M/
      cpThgwdBVbFs2EDS334TjSXSaOl3+ejudfPBiRYqmnpZvCCROzcUkJcWN2WmtLmOBggGgwSD
      QUIyGKdYCUJhhV+8egSb2cB3P7NlVnUEjqoARkmmrn0Agz6MJ8i4e4KngkA4wE/3/IAbcm/k
      xrxtl/wfbGwkWFVNqLERxenEsmYNCV/8Itq4c6ayYEjmzdJ6nnzzBBuXZLJ9fT6fun3ZnB12
      MJ2sWL+VFZPrpxqTnkEvP/5TKXdvKJiVlrNZNxbIE/Twkw/+L3cX38vKzDUX/Kf6/Xh3vY/3
      nXfRxDhIeOQR9GkXLiXeM+TlzUP1VLX0sXV5DlnJDkpyk6MJfxoYS9bH6rp4flcFX/3IOrJT
      ZlNP0jlmlQKUtRxkR9Ur/NXqT7MoufhcmE4nnjffIlBVje3mbVg3b75gHqgYqdvvOHQaRVG5
      c0MBKwtSZ93w4fnGaLJWheDF96to7nby6EfXYTHNXvPxrFGA1qEWvvPaY3xhw1e4ufB2AMId
      nbjfeAOltw/b9jswr151QaIOhGQ+ONHM+8ebyc+I564NBaQnXr8LVV1rLidr93CQn71cxqKs
      RD66pWjWZ0KzQgEqu07x4oln+fKmx0hxpBKqrcP9+g7QSDjuvhtjYcEF/g9UtLHnZAuDHj9b
      ly/g5lW5mOdpJ9VMcmZViLWFSby++wTJZhP9WhN33rwRPZfK+mBlG//xzH6++9mtrJ4j5uSr
      3ijbICl09wyQlhZZSmSiCrCvcTf7Gj/g0Rv/lsCvf4/c348+PQP7PXehT7vwI3p8IV7aU015
      Yw+LshP5wt0rZ30OM5c5sypESVYMNS4D/U31uAd62HTfQ8TrL10VwuMPUd7Yx8Ylc2ctpckp
      QKiPYzUuIMTi3Awa2rtYUrQIVZ3YUhmvVb1M+1ArX1j5eXzPPk+wo5OYB+/HWFR04ePCCjtK
      GyitaufezYVsKM6ccJSjTHxOcGdzPaaETLRqgI62dvLzcyivaWH1iiXA7Jj8dLVMTgFkN6++
      /gG5+Xkkxsexc9dO7r3/E9iN2nF9FEVVeLL0l9hNDu41rsL57HPEfOQ+zKtXXfgYReXdIw3s
      OtbM9nUL2bYyZ06PupxvXL8KcAXG+iiBsJ+f7f0RK1NWsOq4E6Wvn7jPP3zBNDlVCPadauX1
      A3VsXpbNnevz0U9XF2WUSRNVgMtwpY/i9A3x0z0/YLt9NdnvlGO75WZsN97ImS7ZfqePpu4h
      XtpTw7K8FO69cdG8HYE5H4gqwGUY7aO0O9t4Yt9P+FhPOmm9IeK/+IULFkDqGfTy1R/vYHVh
      Ol+5bw0xttkxViTK6EQV4DJc/FGCcpCylgO8t/9ZHqyykrnlDux3bj/bUBZC8O6RRnYda+Ij
      Ny5meX7KjI8QjDI+ogpwGS7+KKdO7aLqmcfZZFxE6t88gj7znIls0O3n8VeOkJ3i4KGbS6L1
      /DnGfFCAac9qC0giSc0j5R//+YJ1KveeauG1A3V8/q6VLMqev1uJRpndXHMrkNsX5IlXjxJj
      NfHpO5ZhjFZ35izREmCCHK7p4IX3q/jU7ctYtnDub0IRZe4z7SWAEIIhT4Bn3isHAZ+/e+Ws
      Hh0YZfxES4BxsL+8jR88d4B/+OvNbFgSHcIQZXYx7SXAsD9EVUsfa4vmzgCpKONjPpQAs2I4
      dJS5yXyQdXRk2RxCCEE4EBr1PyWsEPIF8buGaThQjd81fI1jOPeI2iCnCSEEzvYBYjMjO6Co
      iooSllFCMkpYGXFl5LBMf0M3erMBg8WIEopcO/t/SDl7n981jKfXRWxGAmdXhBScPdfqtGj1
      WrR6HQPNvdgS7JhjZuGSL0IQGtqH1rwANEZQQwg1DOIiVw2hBNpQQ/1orQUgFBAKQqiAAkId
      +a2AkAkNHUQfsxpJ0oBQEYiIHwSgRtZmQSXsqUOjM6MxpkUV4Ay+IS9avQ6D1YgqK4SDYeRA
      mHAghBwMIwfDhINhnO0DhIYDWBPsyCOJVAnJkfOQjKqqIEAJyzg7BojLSkKj06DRatEZIolT
      q9ehNejOJlaf04NZ2DA5LOjNxkv86UZcVZZxd3eRXJg/5vuooT4k/bXdfkjxtxLofROddSFC
      dqOG3RFXdiNkL6Ce8+trQmvNR2NIRJL0oDEgafQgRVxJMiDQ4exy4R8aJi5HQZFBVTSosgZV
      0aEoAlUGVRbIIYXOinySC+JA0qEqoCoCVRUIRZz7rQicXTFodRImh3FuKoAq+1GVADrjhRvE
      qYpKOBAi7A8iB0OEfCHaTzWTkJ2MEpYjiTp4XqIOhJFDQYTiw9PrQ6MJYbJ60GgVdAYJnQF0
      BgWdXkVn0KAzaJD8AfQI7LZYdHoNWr0mkpANGnR6DZKGSO6jhnC1HCZmwepI5EZyn0jupY7k
      TBFXjqtB0jnQGJMi/oQKQRE5hEoYQRgVIXvQBTpxVxcwFrKnCmve32JMvGmqP/+oqLIbxdeA
      zpKDxpiO1roISWsnHDIS8mkJeIMEPX4CXj+tR+uxJ8UgaTTIoTCqrF4SnqSRCPuzCQdSSfQk
      oNFp0eq051z9iGvWYrRpsGekELMgC61Bh0arQaPTRtyLzt09TgwWI/bkmGvQCBYCofqRtJbz
      LikI2YtQvGddVfbSW1OHLSkOJD3hoCAcEISDKvKIG/ktcPeECHhVrHFaIrmKFkljRKM3ojOI
      kQQr0BpgoKmD9OJUDGYJnV5Fe+Z/vUBnUNHoQJK0+J09aA1mjPYUkLQgaZFGXCRd5BwNaqgX
      ofjR2RYBEpEUrznrSpImch1B2HUUfewGJI3uAj9IGqQzvyUN8vBpNPo4NMa0yGrXkjTiTxoJ
      K3Iu5GEUXyP6mBVjykH2VqO15CFprt02qT21HZx89RCOlFjkYGR3SkkCg9WEyW7GaDNHXLuZ
      4X43cdlJWONsaI36SDiXmUh4JnlO19TXaVcAb+ch2g49hyPFQXA4RGg4TMgnCAWNhIMmQkET
      SA4kfSzuXpWYtHisiQ4MZgN6kxG92RCpH4+4erMxknuHQiTlpY8ZHyFEdN7wNHGxrP3OYTor
      W8heU4DeoL9sgp5tTLIKdG6jbLvGy74T9dyyZcNl39c9mEJj+VqyjYUYbSbMCWZibSaMVhNG
      mxmjzYR2ZBSoq6UGe1o2GsOV12IPe/qR/YGxYylUPPWHsC9cF8mFhSDSIDqXs4AAIQh016I1
      WNDHZYxcO/ff+W5osA0l6MOcWnDBf+ICv4ASwt1QiiN/faQUOe/ZF5/7OqvQW2PRO1LPe1bk
      +eK8Z6h+F77u09hyVp0XxkXPHfntaSzFvmQ72qtYRr765BEMcZkszEpg787dFC5bRnlN06iy
      Nlo1pCwQ6McxicnbcgJzSh7aCzYqP/cOYuTbyK4uwsNDmNOKzvk565wnQ1XBXX8Ix8J1oNFd
      5O+CE/wjsjbEZU6yBPC3U9FpRwRakSQN2SaVoZQSMk0qiqKgGZm3qygKrcc/YO9Lz5CU6EAa
      LfIjv/uGfNgtOowG/QURPj9BAAz7ZUKySpxNf8H9F36gSAOofxgSLAKt9srZkcsn0GrAZrqy
      P29AoKgQYxljoV5FMOCTSLSKMVelG/KBQSuwjrEKcSAs8AYlEsdaqVtAnxc23ftXLFx/6wU5
      tW4CW7BWVFWCqrIwVkunfSFH3nqdO9cWji3rmPMV4HylP/e736NgM0qY9BIXyPoihoOCkCIR
      N8b+FBFZSxOW9VVvlK2VBFU1jdyy/VaM0qXFohwMMNDVSkpO4ZjB9rU2EJucht505bf1eZwE
      h73EpV55aIUQgu7GWlJzC5HGmEzv7O1CbzRijYm/or9h1yDhYJDY5CuveyNUle7mOlJzF41Z
      BRvq7sBotWGxX3n5wHDQj7O3i6SsvCv6A+hpqSchLQudYfJtgLL9uzHGZ5KTqOfA4UrSMxbQ
      0dk1uqxDwYisF4zdSO9rbRyR9ZW3UPJ5XASHPdMm62hPcJRJMx9kHe0JjnJdM+X9AKp6qT33
      cpYYVVXP1h8n6m86whzNWnSx3/H6m444TkWYev3UDUWfD7KecgXQarWXfYmLkSRpSv3NlTBn
      Oo5TyXyQ9ZRXgS5+WG9nK3UNLWP6Qwmwf88HNLZ1X9kfUF91kv2HT4wdJoIdO14fhz84tGcn
      p5s7x/R77NBemtp7xvQ30NPGSy+8iDs81rNVdr/7JtUNrWPGsfrUUQ4cPjnGs8Ps23sIZ3cb
      O3a8xbB85TCvhvkg62lvAySnZyOpY9vs0RpJSIglIT5uTK8xsXbCwfCY/mqO7qGyvgWnb2y/
      Op0Ot9s1pr+u3h56+3rH9JeQkkV+0SIcY9Y4FPy+ED6ff8wwDUYDrS3NY/jSk5IaR+eAh1tW
      ZdPqVMYMd6qYi7KedgVoa6ilqb1vbI8hF42tfQyPIyH09w/hiBt7x5Gi1Vv51AMfJdYydr3X
      aDJis429t0DhwnxiHOPY7UQNkpI2ni2BtMQnxBIXN/ZO6GaTicVLiq/sSQnSVN+A2Wxgb/UQ
      hYnXzkozF2U95WbQKFHmElEzaJTrmqgCRLmuiSpAlOuaqAJEua7Rfu973/veTEdiKqk8tJN/
      /eEv2HTTLejDQ/zjd76DGpPNwsxkOmqPUNkVIislloqD7/Cj3/yJwfY6+oMGctITOFp6kI7u
      Xrq7uhgOqmiHO/j+r/7Cto2rZ/q1opzHyb1v8h///TQ3bN7EztdfRtVo+PH3/wW/ZGH37g8o
      KllK2N3Hs8//mbCssPdAGSWL83n5+WfpdfmoOVmGV1hITbDPvxIgIyWNGHOIV989SF1DJ97+
      ZhJSImsSHdyzi2deeAmAzNQEmrqcLM1L4Y8vvcHene+QvXg5YZ+H5tYeFE8/erOJqrpG6k6V
      caSyYSZfK8p5LMhcQE6akb//3o/IWVxM0aIi+lpryV26AZ3zNE+++DY/+rfvkFGymbVrVrNy
      2WL2vPI0ZS1+tm7awG233YJBI7F35zvzTwEAPvbA/bz84ouEgTNW8LC3l8Wb76Xj6Ht0uIIA
      +D1DtDgF//w/vkRIY+DAy78maDTz3gdlpMeacAUhODxEaUUrq4oXztj7RLmUh778bdLD9fzy
      ubcvuJ6YkEBPTze1dbUkJiUBsKhwEY1NTSQkJOD3DPHnP/+F7v4BQhrD/FOAUHeXXmQAACAA
      SURBVChIYv46Fuj7ic1YiCzLyLJM6ZFTBHxeNq9bzLMvvo4sy+hMNu646x4ykmLQ6fTsPVBO
      e2UpxatXcnogQCx+dEYr3TWllFU2zfSrRRkhGPQTCAm+86/fxxB0RhYWkBWUUIDD5ae5Z/ut
      PPDAg+x8+20UOUxlVQ13fPijtFQfQ9ZZqT+5l5DGgk6nn38dYc311cg6O/EOC1oRor65A7PZ
      jN/vJ79oKd3N1XgDMlarheFhH9l5hSTF2Tl15AAhrY2iglwam9vQqSFiEpPp7uohISEGj19l
      6eKxlyOJMv2ckXF+TiY+3zBhv4f65g5AIrdgEfGOyFpI3e1NdA0Ms6SkGINWQ9DnpqrmNDFJ
      6eRmpVF+5MD8U4CroaG2EqcnAJLEoiVLsUVXsZ73RBUgynXNvGsDRIkyEaZsQowQAlVVUVU1
      ug7PLEWSpCmdwzsf5gRPmQKc/3Hn+keJcv0QrQLNU2RFHttTlLm5OO71iKyEaRlqprqnkryE
      fAKyn0A4QCDsJyBf7Po50lrGlzc9yroFG2c66rOaqALMIIqqMBzycrz9CAadEQlw+ocY8g/h
      9A3h9A8RVsKAQKfVY9Aa6PP2EAj7MelNmHRmTHozDnPMyLkJ88i1lZlrWZy69KriV7Z/N8a4
      TJYXpLPnQBlWi53uviFuvTOyMNZ8IKoAU4wqVHo9PTQNNvBuzQ4KkovwhYbxBj0Mh7wo6rk5
      uhpJi9VgpdfbTaojnaLkJcRbEslLKCDWEkesOQ6D1jCpeNxg3XzV72KJSwLVD3oTSfGxOENw
      Y1EK3T5Bpili8JjrVvSoAkyQsBJGUWV0Wj3d7i46XG10uNrpcLYx6BtAkiSSbSmkOdJJj8lk
      RcZqHKYYbAYbVqMNnWbufHJt2I8hPpOhrgYaOwcpKcylrK2HW/IkJOaHwSO6NOIoCAS+kI9u
      dyd93l76h3vpH+6jsusUroCL7LgcUu1pZMRkkhGbRUZMFvGWhOvKBDwfZB1VAGDIN8gzR58k
      EA4gEPhDPgAsBiupjnSSbMkkWpNIsiUDkT6PBfG5MxnlWcFclPXFzJ3yeAoRQtA82MCx9iNU
      dpdjM9hIj8kkOy6HFRmrsBhm4cZyUaaF66YECMpBKrpOcrz9CK1DzeQk5LEqcy3FqUsn3dC8
      3pmtsp4I81YBBIL2oVaeP/4HBBLBsJ8lactYlbmW7Lic66quPl3MFllfDfOqCuT0D1HZdYrK
      7lN0uNpJsadi0Bp5YOUnSXVceUOLKNcP79W+hSvgxB1wzc0SQIzsyRUI+6nuqaCi6xTNg43Y
      jTEsSVtKSeoy0mMyo7n8NDOXSgAhBNU9lbxd8zp93j4Wpyxh68Kb56YC/K7sV+xv2kNeQj6L
      U0ooSVtGbvzCKV/9OMqVmQsKEFbCHGzey/un32NBfC7bi+4m1XFud9E5pQD+sI/fl/0aAWzM
      vZFl6Sun5TmzFcXlIlhfj7GgABEKI8IhROjMEY64I9d8ZYdx3PthjAunbzL/bFYAl9/Je3Vv
      cbLjGOsXbOKmglsva92bM22Amp4qnj36FPctvZ9VWWtnOjpjogYC+A4ewri4CBEMIvwB1EAA
      EfCj+s93A/hPnkJjtaKx2yJ+Q6HLbpyo+v3IPT2Yli5FMhiQDPoR14Ck16M5c37mmKWJc7oI
      ygG63V28Vf0aA75+binczn1L70erGf07zPoSQFZk/nTyj3S6Ovj8DY8QYxrH0uRTiFBVVK8X
      xeVCdbkIVFWjDA2hS0hA9flQvcOow8Ooft95W4ECSITq6zGvX4fGZkNjMiGZTGjM5hHXhGQy
      ozGbCHd2oktIRJ+dhWQ0RhLvZdovQghEOIzGMDvMtrOlBBgOetnbuJunj/yWVZlruW/Z/eQl
      jG8Bg1mtAO3ONn576HE2L9zGTfm3TXmjVsgycn8/ck8vvv37IwlYr0d1uVB9kd5gJAmNzYY2
      JhZtbEykmqEKzMuXRnLtkUMymy/ZnlOo6phbds5lZlIBgnKAY22HOdi8j4DsZ232DdiNdtZk
      rUenHf9iBrNSAYQQvF3zBkfbSvn8DV8h1T45E6aQZYb37UefkY7c14/c24vc04vS14eQZdBp
      0SUmoktORoRC6JISMS4uRhsbg8ZshuvcitTZXI8xPoMEh4nOzm5SEmzsPVjOpm0b0XPtFUBW
      ZU51nuBg0x4GhvtZlbWWDTmbSbQmTTrMWdcGGPQN8OuDP6cgaRHfufV7V6y/XYzidhNqbCLU
      1ESosQnF6STU3Ixt21b0WVkYcnKwrFuHLikRaQp3S5yv9Dg9iMEqEpaX0NHRg9rXjmx3oBMC
      Rb02w6E7XG00DJymcaCelsEmSlKX8+ElHyPNkXHWjyxPfvbbhBXg7CSJRVnsO3SKotwkSk/U
      X/UkCSEE/7Xnh/QP9/GZdV9kYeLou43LfX3I3T0IWY4k9qYmVLcbjd2BIS8XQ24utptvQhsT
      g1CU664xOFU4+zoxx2fhcg5QW1OOfe1a/DUn6C8pIck4/cOhQ3KIJ8t+SUD286WNXycnPm/K
      q8ETrgJVVFWCqlJSspTTtbUEFZlsk8pQSsnZSRKTieTB5n28Uf0XHl73JRYmXD7xKwMD+A4e
      wrdzFygKtltvQbtgAYbcHDQOx4Sfeb0xl1aF8ATc/HTPD7m18A7WLdg4bZ2aEy4BzkyScA10
      Ut/QQNGiQsra+69qksTBpr2UtR3g3+76AfqLGjCK243vUCn+ssNIZjOWjRuI+f6/g0aDxmSa
      aPTnJKoq8AfDdA14qWntpyAzHn9IJhCSCQTl887DZ8/3l7fx9Y+tY31x5kxHf8J0u7t4fP+P
      +cTqz7IoefG0PmvGG8EHm/exv/EDHtv67bOJX/X78R8+gu/QIYSiYtmwHsu6tWisc2eYshCC
      tj43WUkxCCEYDoTw+s8dHt+58yM1nZiNeiwmPb5AGFlRiQzni6CRJMxGPUIIOvo8bFiSidmg
      w2TUYTLoMBt1mAz6yLWR6zUt/awpSifWNn2ZxHSUAKf7avjD4Sd5ZPNjpJ3XYzsVCFkm3NaG
      5623UQNBCIdmVgEONe9nX+NuHtv6bXQaHYOP/xLVN4zq92NZswbLDRvQxo69fei1ZMDtJxCS
      ibUacXoDI0fw7LlrOIDTE2DQ4+d0+yCFWQkY9VosJj12sxGbxYDNHDnsI27PkJfkOCt56XFY
      jHr0urnRZplqBShrOcg7tTv4+pZv4bjK/h4RChFqbSXU1EyoqQm5qws0WvRZmUgGA/r0dCxr
      18ycApS27GdPw/t8Y+u30Uk6XH/6M4ETJ4j9q4cwLb261QwmQ1hW0Gg0aDUSYVllwO2jz+mj
      e8BDr3OYPqePAbef9j43sqywKDuRWJvp0sMecS0mPU2dQ+Slx83bQXlTpQACwZtVr1HXW8NX
      Nj+GQWec2P1CEGpqwvXH59DGxSH39iLp9eizszHk5mLIzUGXlnbZPpkZUYDSlgPsqd/FY9u+
      jS4QZuDnj2NcvBj73Xdds8QiyyqdAx7a+9y09bp5/3gTqhAkxljQaTUkOiwkxlpIS7CRHGsl
      KdZKvMNMWFYIyyoO68SENB+ZCgVQhcofDv8GjaThr9c8jEYaX8eh4nQSKK8gUF5OuKsLfUYm
      qAr2u++O9KiPMx1dcwUoaznI7vr3+MbWv4fObgZ/9WtiH3wQU8mSqYxGJC6qyoGKdlLirHT2
      e2jrc9Pe68I1HESn1ZCeaCczyUFWsgMhICnWQlbytR1qMZe5WgUIykF+vu8/WZxSwvbF94zu
      UQjUYJBgdQ2B8nJCDQ1o7A5MS0swLS1Bn5Y26U7La6oAh1sP8f7pd/nG1m8TLjuK992dJHz1
      EXSJiVP2fK8/RFVzHxVNvdS09nO6bZBb1+SxMCOOrCQHmckOYqzXh/VourkaBTjRcZTXKl5m
      ++J7WJu94bJ+1GCIod/9jsDxE+gy0jEVFWFathTDwoWT7tsRQvDO4Qa8/hCu4eAVFEAIFFWg
      1U5sLMtoH+Vw6yF2nX6Hb9z4d/ie/zPq8DDxn3sY6SoHdrmGA1Q19VHR1Edj1xAWo47inCSW
      5CaTnxGPoqoY9bOuw3tWceDQfgKDrRw+eprP/t13SRln/jBZBfCHfXzhj3/Np9d9gTuK7r7k
      f3lgAO877xKoqsa8ehX6zEwsaya3U6eiqDR2DVHV3EdVcz9ObwBJgpzUWG5amTN6P8COl5+h
      pWOIB//mUeKvoroblAN8UL+L4+1H+PqqR3D9v59gXrMG+623TKrYEkLw8t4ajtR2oqoCu8XI
      kpwktq1cwOfuXoH2ooaOboIKfD3i7e8hLr2IjDQPhmn+XEIIfnngZzy29dsX5vxCEKyvx/Pm
      W6g+P/bbbyPmwQcmNJjQ6Q1gMuioaxugqrmPmtZ+QmGF3PQ4ihck8eV7FxBnN19wz6glwCsv
      /Jb+3l785mw+/clP4BinElycK+xv/IBfHPgvfrr6uwSf+RNxn/4kxsLCcb/UGTy+ILuONbG/
      oo0FyTFkJDn48KZFaDTz08JyLenoaKO7rQ29OYZFS5dgHGeam0wJ8NKp59FIWu5b+nEgYpv3
      lZbi3fk++rRU7Nu3o8+aWOdd94CXXcebeH5XJUXZiSxbmMziBUkUZSdiGWObq1EVQChh9n/w
      HhW1zTz08CPETrJYDA8M0P7SH7H2uEn42lcmZNcXQlDbOsBbZfX0u3zcvCqXzUuzMejnhp18
      rvDuOzu4+ba7qNz7Bomr7yZ9nP2NE1WAo21l7G/8gEe3fAvfvn3IPb34T5zEvGY1tltuRmu3
      jzusjj43ByraOH66m3iHmRtKsjAZdKzIT7mkFnAlRq0CPfXz/yDgKKJ46eJxJ/7LIbe0YjhR
      S+KPfojGOL5ixBcI88GJZj442cKC1Fju3VxEbtrs6hCbT6xbuZQnf/VLMhetZNk0dbZ3uNp5
      vfJl/v6W/4nc1cXAfz9OzP0fJ+Vf/ue4GrRCQFuviwMVbZyo7yYlzsrGkizu3Vx0VRniFa1A
      fR3N7NpXyj0feRDrONuqk20YCSF48s0TSIBGI5GeYGfzsmzMxuiw5emmquIkg4NDKKqODVs2
      n60CHT98AHNcBkX52VScqiQxOZbWuiYWb7wRu278su50tfPcsaf55JqHsdd3Mbx3LzEPPoA+
      JeWK96mq4LUDtZxuHyQxxoLRoKMgI57l+SlT1ls+agnwyx/8f+yt7GPjhrWE1Sl51qgEQzI/
      /8sRQrLCgzcvISc1mttfS2oqj2CLy8LddpiWZZspjB/5Q2/G5+4HFmA06hnqHyA+1sxwWGCR
      xjcfwBca5vF9P+Wrm7+J6XgdnkOlxD/6NdDrRh3HLwTsK29lx6F6SvJS2FSSxdqi8ydFiaua
      A3A+oyrAl771v7mhbDfPvvQO05n+uwe9/OTFUj60qZCNJVnT+KQoo5GckERFfSNgJ8ly7npK
      rB1TQmTkb0dXF4WLixkccJJvlmAcI39VofLEoZ/x4KpPYj9Vj6+sjKRvPjbqZCRVCA6Ut/Ha
      gTpWFqTyvc9tw2qa3vnPo1aBfvvT/0V3yE5hTgZ3fOjj2CdpBboSR2s7eeH9Sr720XXRHtgZ
      RA6HOLT3fboGPNx138exjrPWOZasnzv2BxymGLb0xuA/dozErz+KpLs0z1WF4GBFG68eqGP5
      whQ+vGkRNvO1mfg/I2OBhBC88H4Vzd1OHv3oujFNVVGml6d/8X2GpCTSEhxTltkdbN7Hifaj
      fCq0jMCpUyR87auXJH4hBAcr23l1fy1L85L58KYi7JZru+LFNVeA4UCIn/6plILMBD62dfG8
      HSl5PTCarFsGm/j94V/zVbEZta6ehK9+5QJLjxCCH79YSteAh2ULU7h38yLslpkZXHhNxwi0
      9Lj475fL+MQtS1lRkHotHx3lGuEJuPnNocf5XGAFamfjJYkfYO+pVhq7hnjk3jUU50x+RYep
      4JopwL5Trew4dJpvPbiR5Li5M7MryvhpGmjgZ3v/Hw8M5WH3u4j/yiOXDGXYfbyZAxVt/Oir
      t8+KiT8THvlRffIIDa3dIMLsfe9ders6eHvXAcKj+G/pdvIvT33A0bouvvfwtmjin8coTifr
      DvSTH7QT/+UvXZL4dx5t5FBVO3/3VxtnReKHSZQAit6M392Hv2OQ9LVbKN/5BiIuGVURKFxq
      G/b4gggh+PKHV6GRps5+G2XiTPWqEBeT7gSTKyEyyveixP/O4QZO1HfzrYc2zqoBihNuBJft
      340xPpOcRD0HDleSs3ARXc2nWX3TdmIMs2e9yCjTz2VlLcQlo3zfLK2nsqmXb96/YcLD66eb
      GV8VIsrcZTyyfv1gHafbBvn6x9dNaJDatSI6UyTKtPHKvlqau5089vH1s3bYelQBokwLL+2p
      prPfw6MfW4dmFvf1RBUgypTz4u4q+p3DfPUja2d9R+fsq5RFmTVM1OTd5xzmxy8eYsjj58v3
      rpn1iR+iJUCUKzBRk3dz1xDVLf385NHbURRlBmM+fqIKEGVUfEN9GOMzCRn11O3fSc6S5XQ1
      nyagSMQYLh0OvXZxJmsXz63FeKNm0CiTZj7IOtoGiHJdE1WAKNc1UQWIcl0TVYAo1zVRBYhy
      XRNVgCjXNXOyH0ANuxCKF60p45L/IlZdBYSCUMOEnYfQx6wmoutqZLjuiCuI7MWFUJGHTyNp
      zWiNqSPXxMguXWLknsihBDoQyjA6y8IzT4z8hThvVy8BQibsPIw+dh0gnbt+0T0AsrcWSR+L
      1nj+9EBx1vuZcIXsIeBsxZxYfPFbX3Lq7qwlNmcbOmv2uL7p9cq09wMIoSLCQ2gMCYBAKAFU
      2Y0YOdTwiCu7CQ28j9a8AEljRIgwqCGEGoaLViZSgz0IZRitJe9yrwSSBknSIgT0N7aTmJeN
      pDUgVFAVMXKAUASqGvk91OFHq5cwOyL+hArqxa4iGHZqkUNabHEBhCpGjojiCVVFCAmhSqiq
      lsHudOKSuyLfAQkhJBCaEVc6e80zmIDOEMRo9sPItYjOSef5BTlkxD9swx7nAkkDaEaGG2hG
      xuCfc509elZ9dC1Zqy5WlqnjWvQDCMWHUHxoDKPsISEEAgXUEL7eI5gTSiLfRqiAgjgjTKFE
      erBlwWCrE41ejznGNv0lQGjwA4YbfojOHtkBRtKYkPQONDoH0sihMSSgMefQUT5AbO5atIZk
      lLCEokjIYQklpCCHwsghGTkYxtXVj9/pxZGWhCorKGEZVTlPSQQggaqoDLX2EdeaiEanRaPV
      jBwj57pz5+4hJwazAdUci6TRoNFJEVerQafVIGk1aDQasA2jhGTishKRNNLIEUmIZ881EgiB
      tb6L1KJMNNrItbN+JA2c99vZ3o/JbsGaYI/o71l/keOM33AghLtriMS8sRcUcHUNYkuaPWst
      CTWMGh5EhAdRQ4ME+99Ba8oGjR7UIEINItQAQgmihFTCQRU5BK6eMH4P2OIkFFlCCRM5ZCJp
      QwZV1iGH9Qz1puFIOI5GZwCNEUljQNIYkTRG0BjQajVo9Bq8fS4MFgOO1LjpLwECLicdxz4g
      buFGAh4/QY+fgNd39lwORqZIShJ4el3EZSdhjbehNejRGXTojHp0Bj06ow6dQY/WqCPsDxH2
      h0jMS0Wr06LRRxLx5QZf+V0+zDGWS65HuXoulrXsrcHf+Txac3YksYcGESIEQDgo8Hv0BLxG
      /B49HXUJmO1BQAWNLZIhas2gMaAzGtCbIocSChMOhEnKT0Nn0J1NF1qD7pyr16HV6+hv6iZl
      USTDuRJCiLNpZdpLgKFOD3UHAmQHWzHZzZjsFuwpsSPnZnQG/dkq8vkRmyqiif/aMTwUouGQ
      giMzDr83Bb9HT8inIAQYzAYs8Xas8TaScu3Yc3wk5CRjTXCMmWDHS1rx+No756exazIWaDoS
      dpSZ52JZ9zV0UfX2MfJuKBpJ7HaMNtOslv2ES4D3330DU1wmawuTeH33CWxWKz63k20fuhfH
      ZUIbbKqgcvdfyCwo5kLrx3nnIzrYWV9FfHoWJrOVCy0bEf9i5Nw71I/f4yIpK/eMh/Occ5YW
      oaq0VZ8gc9EyNFrtRf4uOKG/vRmDyYQjIeWS/863yLj7uwkFAiRmLrjkv/PvUxSZ9ppyshYv
      u8zWn+KCW/paGjDbHdjiLm7oXZg3BYe9DHS0kF5wpYZt5J72mnJK7vkiCUU3XMHvlZmorLU6
      J1p7FUoA3J0Cd8dFVrTz3M76KhLSszCekbU4J7fzzz0jsk4ekbUYxd85WS+NyPqitHC+zM+X
      9YQVIDYpHaHKqEEfecUlVB87xuqiTHxhgVVSURTlbCQVRSGkahhWjHgV00hNRzpnFTzDSA4x
      LMVgkmJRNLYLrl/MsE6DX2/EarhyY1CoKj5jPz5TBhrtlV/VZ1aRTWZ0liuvWe/zWwhp/fis
      OVf0pyoyfrsfv61gzH2u/A4twhaD1nHl3TKDWi9+rwV/zOIr+kOAP1YhqItFluULcmrdZRan
      HY0Jy1pW8QbAExQjItacJ+sLZTksrBhVKzKXkfV5p8MagV+rY1h35RXkhKriM/TiM6ZPSNYT
      rgJ1NtdjSshEqwboaGtn0eJCqmubKSmO7Ps1H4bIRolwPcg6Oh8gyqSZD7KeciuQql66ncbl
      GsFXc206whzvc2ZbfCZ6bSJVoLGYD7KecgXQaDTjyhXGm3tMJJeZC2HOdBynkvkg6ykfDHfx
      w4I+NwND3jH9gaDy5FF8IXUMf9DWWEtzZ984woSurs5x+WuoLed089h++7taaenqH9PfQE8b
      u3fvxhe+sj+A01UncV3k8XL+nH2dNLX3jvnsrs5OUGUqKqrGDPNqmA+ynvbRoP6gykB/x9ge
      lRA2RxztbZe+xKWoNDU3j+kr5B3k/f2l4wgPaqtqcMSMvU/t3n17LzFiXY6ElCxSEhIwjFnG
      qpyuPU19Y+OYYVZUVXLo0MExfIVpb++mvroKhzZAk+varc4wF2U97QrgGezh2KmasT0qft57
      fx82h21Mr17vMF7PpTnNxbR3dOBz9eO8OBu+DFkLsqgsrxzTX2JCAnWn68b0hxokLBnQjakt
      YcKywO8LjBlkXk4O8fHxV/akqDTUVTLo9lJR14JtvNu+TwFzUdZTbgWKEmUuEZ0QE+W6JqoA
      Ua5rogoQ5brmEhuF3NeH3HfO7GQqntyMoqsJJ+wP4eoaPPs7Ji0e/SQ2Tr7acLoazjXobHGJ
      2OOvPFZnOsJpHmzCFxoGwGKwkhOfO8YdUx+O6upAdZ+z2Oiy1k4qDlcTjip7UXznLGVaSx4a
      3diN6LHCuUABXnzqZwQPNLHF3XX2WvZzzwLwxhtvYLVaUVUVSZKwWq2sW7eO//zP/+Tzn/88
      paWleL1etmzZwq5du0g9Xc+CU+WXhLP7zVfB7EDRmrAJL7I9jU0rl/CLn/2cT3/uExwqPUGo
      q49gpf/svZs+fzuJeamcOHGCnJwcYmNj+c1vfkNaWhrLly8nPT2dxx9/nEceeeSCXj9X1yD7
      f/POJeG0ndgDeVvIcsAzv/8NqWkZLFyynpx0B7/99e/4zBc+hxbY8cv/OHvvytvuY9Vt9xEO
      h3nyySdJTU1l69atxMRcOuvq0KFDuN1u0tPTGR4epvxPP6ehs4/8jOSz4YCbpx5/ibScJFZt
      vpWky+xOferoIX5f/zSdwXYAFqcUc3vsfaxfv47du3ezbds2Dh06xIYNG87e88Ybb3D33Xdf
      EE5vby9/OP4bKrvK6ans4+Zbb+af7/hfABzYs4eNW7Zw9Fgpq1etP3vPe2/u5NY7bwEgXPUK
      oUM/P/uf/ZuH2fleKYHgMBaLBYPBwKZNmy6J/8WEq16h5vUf0zYUwqCVMH78KbZu3cpTzzxD
      TkYGWouDG9etuuy9iq8RT83fn/3tMX2exsFE9h8sY9MN67hp2zZKS0tZv349b7zxBsnJyTid
      TrKysigqKgLA6XTSVvcOu175N+69JYW65uELFaDNpbLJ3Afuc9ce+7t/IG/RcrzNh3n93b3c
      /9nP8tITT7D5Iw/x/juvojPb+c2vX+Vrjz7Ic889R1dXFyaTCWmUXseBvn7iMm34w0FCfh8a
      0Y+v5zQeYUeyxLLtxg28/fQLl73X6XQSCkVmGDkcDu666y5effVVXC4XK1asoLKykpKSkjEF
      4XP2c2aNb3NsErfctp2333oTkzuJpSuWcLSqk3XF6Ze9V1VVUlJSuOeee9ixYwderxe9Xk9x
      cTEnT55k6dKlbNiwgbKyMlRVpbu7m54hNw6LibLqJjqUdzFnLqKu7gg6s4M7tt/Ojnf3og73
      o9NqWFC8glMnqlhcsoRlqzcQ0/8KnT2RZ/c3VKHf/ne8+vLzvPDnt/G6enjjnf2cOFHOww9/
      ml27dtHW1sYLL7zA2rVrefbZZ/nkJz9JRUUFXdU99Pb1I5QLO5+q///2zq2nrSsLwJ9t7GMI
      +IKPCTgY32pzcXExlxhjxzhcQkpDUVUNmpE6D1WlPvRX5F9E6mMemlajIo2iaZoGRZMMVUOm
      hFbgmODWBAzG1DaYGttgwJkHJklTRc1D3oq/ty2dtc7ROmvtc1lr7f3D9xRLJR5vbJDcTDM8
      3M+t2w9Irz/mqy8/5w1fH/Nf3OSC6bnMv+9Ms3ckJ5/Pc/HiRSYnJ1lYWCASieB2u5mcnEQU
      Rc6ePUsoFEIul1MoFDi1Ps85nRylXMJCfI9iNkuxWGT22x+oH9Nwd2qKrdVFvr19E8fg3yH1
      I9oaPR0eD0vh7/DUPb8Gg9lBjV7FjW9uMzt9l3hyk59+fMjUN19TKh0wNvEhM//8ks03e1hZ
      WUEqleJ0Oslms9SckvHf+Qyl0ku+AVr6hl4Yuzx+RLWSQi7DJx+8w8L8Cv6hARZmpklsJnE4
      7Ozu73Pt2jUmJiZobm5mbGyMNYX8pQ6kqNZwPhjgaDcLQKNG4Ku5OF2tBp4Us3z+j+s4vUMv
      lf09T3ecDIfDFItFQqFX/8d/GU+O9jksVTAXeUxut0D00ewrZXK5HAqFVPDJWAAAA7VJREFU
      ApVKRTAY5P79+3R3d+N0Orlx4wY6nQ6Xy0VVVRWJrR30mhp2cnk0Wi2Li4sMDARQq2o5KPyK
      VC4g1GgZDHbx6N49bJ1BXC02pqf+RTKVeXbOvOjAbVURX1/HaqxFIlHTMzDM2NgoV65coa+v
      D6PRiM/nI5FI4PF4MJmOPbf0pERdq4jkd91XdY1mgsEgjXUa/G4bn376GW/1eTl9xsx5fzsb
      6xmqVC+WIgf7/ShlxzaYnp5mdHSUcDgMQDKZpLm5mY6ODubm5hAEAaVSSXV1NcPedhYT+0RT
      RS601uDxeLh69SqOJjU3b92m19fPUiRGnajhjKUF8xtt+FxW5mbDlBQvPiGXww+Yi6a5MBDg
      44/+wt3rX6O1u7BZDMiFaqZuXcfe4eODv77/rGbpaR2URCKhXq9kI7mH7PLly5d/q9jobOWX
      Jju422m49A7fff8fRFMrFoOOhytbjA4FONjP4R+dQFRCdH0Lu93GVmqDrUSM2PYhy5EQRrMZ
      89sXOdUf4FR/gAr9sRGLuxnCkWXEM0YMp/XY2trIb+1gbGyg4ihHIrPPzvY27sEukgdJbP09
      GCz1yOTHKe2nM0oqlWJtbY3BwUEEQaCrq4uKigpE8fn7tVypoM5uoKnTRlOnDXVD7TM9C6EQ
      UkUlu8kYq/EU/uB5BKGSzk43gkyKTqejwdqCvduPvdtPg7UFofK4vXJxcZHt7W0GBgbI5XJE
      o1HGx8cJhULkcjkymQyFQgGlUonVakXQ6AmMvoe5rYMqdS1DF0aYmZkls51kK3/E+XM+jvI7
      zP+cZnjsEvGH99jOl/g1naQaLedaR7n05hBWpR1Lg4kqoQKJUMPgyDCJSBhtvZHN+Bper5d4
      PE46naa3txeZTIZWqwWg1eREU9BxyTNOsH0ITaX2mZ3E/9+b00YHS4/C9HV3kNpcZTl1xLne
      NmRqE2LPOFlDP0LzCDOPktSdMWGo19PT04NCoSCfzwNgsVi4c+cOoigyMjJCLBajtrYWg8GA
      3tJOTGrhidhC0TyM1eUjmUzS5fHi7fNSyGVpOC2yJ61BpZSwsjSHVGfn7SEf8eU4MjGAQhtA
      bXyX+KaE4sER2b1DnK5uZFUK/F1vkf4lQbW6Fq1KTelwj939EiajAb1ej0ajQajUoq3vxO39
      GzuH9nIi7M/A6uoqAE1Nr7cG0GbsJ3ISFdbGulcf/AcsLS3hcDheSwdANBrBarW/tp4/ohwA
      ZU405TxAmRNNOQDKnGjKAVDmRFMOgDInmv8BXSyq3CKvX/YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1 (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29d3xd12Hn+b3lFbyOh95IECTYiyhRNE1JVLUsyZJlO5YsW5Gd2M4kjjO7
      m2Q/meQz2clOW69nJzv+7IwzjuMU23Hc5CLLkqxOURTFBjaQIED0Xt97eL3ccvYPgBBB8UEA
      ARAk3/1+Pg/nHpxzzzm3/E67p0hCCIGFRYEir3QCLCxWEksAFgWNJQCLgmaWAFqbDjAUzfHG
      /v3zDqDl2EHGJkZoH44tddosLJYd6dJG8OuvPoeazXF8XKUs203x6m2cfvctdu+7B1dxFYEi
      QXa8nfZsFZNnX2X9nZ9ERLuxJ0MM2NZw7sxJHvjQFsZCExQH/Jw4eIiG7btxBSv42L0fWsnr
      tLC4IuqlluJgJWMjIe7YXkl0WKLcD5NrG/CWVNHZ2U3QqeN1GGzctImBVB/r6qqYUJLYnDIX
      BqM0rKunyF/C2oAPSUuwbsttbNnUwMFjZwFLABbXH5LVDWpRyMwqAXI9PUS+9/0Ze/Hnn8Fe
      X7/siQgN9XH4V/8yY9/z8c9RUr1q2ePtCXfz/WN/P2N/5vYvUR9cs+zxRofDNL9wbMa+7WO3
      468KLnu8xlgr2be+PmN33P1vUMo3Lnu8erKTVN/fzthdq34f1b122ePtGorw9y+cnLF/6WM7
      aagunuVnlgDMVIpsy/lZ9uajhznSfg45Y8NeEeTEmy/xO8/8Lm8fP4XHobL7Q3eyaf26RSU0
      l04x0tU6y9589DCnBgdZU1WLZJps2rCWgZFRejsucPb8eT715Gfo6uwnWBxgVVUpSU2wrn71
      guJN5ZKcHz07y3722DHKtm/nhR/+kKee/C2ee+EFtm3diddlp6e/n82N63j+1df44m9//qqv
      V0vnCHWPzrJfjDfZ38PRc63UBYu59UN7KbKrc4S0MEQ2jjFwbJa9+ehhTvZ1UOavpra6CkXo
      uPxBohPDlFXVEYtP0N7SSmdvNw88/Dj9XV0EioOsXVVNJJllw9qGD47XSKLHm2fZj797gElD
      YefGdfz0xVfYsa6e8+3tfPITn6bj9FHaI0lU1Y4x0UXccBMo9iNLCkGvwuF3j/PJJ5/+wPcu
      mdE42z02y355vPPqBi1y+5EkQSYdweb0YpiCB++7n9rKCg4eOjSfIBaMJCns2buHl5//Kcl0
      mK9/8zvUr6rDROFP//c/4x//7ttkEiOcOXWSF98+SFVZ6ZLEK4TBoQMHMIXB//1fv4EnEODM
      2VMcOHyMyYkxDhw6SE1l+ZLEdSVOnj2DXc7QdOIQ7xw5sWzxXIqiukmlY/zixRfpHh3j4MGX
      +OULL/PTH/8QyenFROGrX/1jfvTdb5PNxTlz+jQ/ffk1aisrrjpOIQRGKsVP3niNupoqdD3L
      w488zg+//y0mUxqKbMMu5ZgIR2jYsA2hZ9G0DPFkjq1bt1x1pnt5vLOyF9nlwrF50yx7fW01
      oVSWLXfei2HmEHc/SCI8zujoOLU1tWzYeutV34SL2ItcVDZsnGVfvaGSU2da+Kt//39x5GgT
      /+arX6a7uwe/P8DwyARf+cofUVVeyuFjp1jbUMfw+ATr3O4Fxeuyu9lUsXWWvWzjKjZ4PIz0
      9XC2o4dtjfUksoLKilIMLYeWTTMaXlyXr63ITsmailn21RsaaTpyjG0bNyM73VSX1bF+49JW
      TySHF6X29ln2ho3VbNi1m8nRIVbVNTA81Mu9936crRt68RaXUVtRyrA/wNDwKP/q9/+I6opy
      Dh1pYt3aegZGRudVAkiKG9W7bZZ949bVCCS2JKKMjkeQjQyjw8M8+omnKCsuJp7OEQi4Gdl+
      O5MTw+z8yMOERgZw+Utx2ub3+crttLF1Tfkse/3WW2bFazWCLQoa60uwRUFjCcCioLEEYFHQ
      WAKwKGgsAVgUNJYALAoaSwAWBY0lAIuCxhKARUFjCcCioLEEYFHQWAKwKGgsAVgUNJYALG4K
      hDC40NJMV98QAKOjox9wxhTWcGiL65KOo2/xSmeEP/zsJ/jxt76Gd8tDHH31OW7f1oBv/Z20
      /ua71O25n6GhEL/76Y+y/+AxVq2qIRaL4/aXcPLou3zmqc98YDw3VQlw+vB+Xn/rIMdOtczp
      r+Xo6wxG4ux/+yhGLsmRI0doamriRHMLudgw+4+cnfN8i+XH46nAaUYYGh7EdASob9xEqd/N
      aDhObUWQ6upqBvsHqF+zhvMt51m/ppz+cI6BwUGcKiiSwf7XX2N4IjpnPDeVAGxGEntxLQfe
      eBWhp2k6coiO/nFazjRxovk855tPcqTpNOl4hJxkIzQ2TtPx01SWBYiFhgEYDccJTYR4682D
      mCt8PYWMYeZ48MH7+f5Pf8Oa6mIMw0B1etm6rpbOngEMU7Bnz+20t17AUBy0n2slaI8xGtHI
      GhJaLkPfwBB+v3fOeG4qAQAc2/9r1u28k/amQ4zlVPrOvElHSKEi6CMSiXCiqWmWf6fPx+mz
      bShCorLcj7PIwYm332Tdzl033825gTBcDkytiH/95c9SXLsJW7yP2/fczoY9D1Hj1li143a8
      rgCP3beLgNdNUeVaNm65nUfv3YlpamzevIO9d+xlYjw0Zzw3VRvg3Vd+Rty7AX24mao16zl9
      5jz77r2Hd19/mc0fuofB9tPkTJlSl4mjcj3t5zvZvnkNmWQMu7MIu8OJyMY41xcmNjrK01/8
      IkVLtyiDxTJiaFlaWlooqV5Nddn8l5i5qQRwNaTjYVrae0CA3eVh66b1SCudKItrRsELwGL+
      CCGQpJsre7AKeIsZUpPjDMcM1q6qZHxoiEB1NWeOvE3d+lsp8TkxTdMSwNVimiaybDUrr2fa
      egYwTRNWVRLr70euLqa9bYgtt92Bokw9O0VRVjiVS8s1eyOtmtb1j6SlGIskiUYnGRzsof18
      N9WrSmhp7V7ppC0b16wNYBjGTZd7LCdCmIzGRzjWd5j28Tb+5N6/WOkk3ZTPcMmrQGeaDtMX
      SvHog/fR3HSIsaTC/fusvQHyEU6GkGWZaHqS3nA33eEuBib70E2dCm8l5Z4K6ooXtuivxfsR
      CPojvVT6qhlPjDEaG2YkPrT0AjAVJ5WlNgAcDjceaar+b5qmVQ26hEQ2wdG+Q/yi+Seoio1b
      a3dRH2zgroZ7qPbVosqzH42u6zPHiqLcdI3RxTIUHUSRFVRZJZwKEUmFGU+OEU5OEEmFCadC
      XBhvZV3pBlYVr6bCW0Wlr2rpq0CZeJiBUIayoJvh3g781Y1UlfhuyuJzoWS0NE39R3m35x00
      I8fu1R+msWwDxUVBvE7fSifvA7nenmE8E6NlpJlzI82823MQl93F+rKNFLtKCLqClLrLKXGX
      UuwK4nP6GZjsoy6welbmYbUBlpnmoVNk9AyHew4ymY5wW91u9tTfSdBVstJJWzAr9QyFEAgE
      GS1D6+g5zo000xXqwG13s6lyK1sqt1PqLkWVbThtzgWFbQlgiYmkwnRMXKBj4gJdE+20jJzl
      gQ0P8fCmx6j0Va908hbFtX6GU/eyjTcuvEJ3uIv6YAMbyzezpWo7DSXrUOTFp8USwCIYT4zy
      dtdb2BUbHePtTKbDFLuCrC1dz7rSRtaUrCWrZ/E6fDdFnX05nqEQAsM0QILecDft4210jLcx
      kRwnUFRMY9kGyr2VOG1FbKvasaRxgyWAqyKjZTjQ+QZvdb6Opud4YufTrCtdT7Fr+ff5WkmW
      +hkKBL84/RN+fe4XrClZy+rgGhpLN9BYtpESTynSNRiVZQlgAYSSE7zS+iKtYy3sW3svdzXc
      g111rHSyrhlL+QyHooP84Pg/UuatYFvVDm6r270k4S4USwDzoCvUwUstvyKRTfDRjR9jR82t
      N0WVZqEsxTNMa2l+ceYn9EV6eHrX71IXWJrdQIWugywjTQ+3EUJgxuOYsRhGPI4xGSV54G0c
      6xsRuRxmKoVIpa3BcPkIp0L84vRPuDB+noaSdTy29VOsKq5f6WTdsAghONR9gJdbX+CRzR/n
      s7d+ft6ZiBACTBNJUaZe7FgcIzSBHgpPmRMh0k0nwDRQgheroRKy14Pi8yF7fcheD3KRE1t1
      FbLfj+xyIRcVWSXARUxh0hPu4lD323ROXMDnDFAbqKPGX8veNftWOnnXBVf7DHvD3fyg6Z9Y
      W9rI49s+jVP94K5KIxpFGxhA6x8gdfgI+ugoamUFICH7vKglJSglJVNmaQlmOo3i92NftbAS
      paAFcLT3XYZigwxM9jGeGKU+uJa9a+5iXen6Jeliu9F489UXcBbX8uGdG3n1jcOsX1PG6eZ2
      7nnscXzqwp9hX6SHbx/6H/iLAjyz60tU+qre50cbHCR94iRSURFa/wD60CAipyH7fNjqarHV
      1SK7PUiqivOSHUyXioKsAummzmttv+Gl879iU8VWnrjlc1R4K1c6We8jndU43jZEa+8Ev/fY
      bcseX6CsGmHqoDioX1VJKpNh89oaUprALS1sOEssE+WfjnybVcX1fH7Xl1Bl28xwDmMySubU
      KdInTyIiEdANfI89ivuefSiVlWCzXTHMS4eDLBUFJQCB4NRAE79s/il76u/krz/xN+8bc3Ot
      iSYz2BSFRDpH98gkfcMRJvuHSfQPYoyN0ZAaZw8puAYCqAh4cZbUEg0NMTg8zPpNmwmHJllX
      JAFTOf98SoD+SC9/9+43+cLu32NtaSNCCLTubtInTpI514LsduG85RZKv/hF1JKV7Tpe8irQ
      paNBz506SiglsW/v7SteBeqf7OOHTd+l3FvJb+14Cq9j7uUylgtTCEbGY0z2DRLr6SN78CDJ
      eApZmJS7bFSUeHGWl6JWVKBWVCB7PJjJJO4771iR9F7KfJ7h6cET/LL5p3z1rj/B0x8i/Dff
      Qvb5sDesoWjnTpxbNiPZ7dcoxaDpBpF4holoileOddJYGySV0YilcsRS2eUdDWqzO7ll/cYV
      HQ0az8Z49tQPiWYn+eytX6DKOzUcYTmK08sxIpNEn38egqXkxsdJ9w+SmoxRWuyloqqCmspK
      uOtWlIoKnDtvAUf+bwo3wmjQV1pfpHn4FH92/7/DOHSMyddfx33P3fge/zjSMmR+QgiiySzD
      oThvnepFN0xURSYcS5NI5wBQFZlibxFBn5NwPI1NVVhb48XnduBzOZZ3NGh32znsgWo2N9Zf
      8xIgmp7kv731dQzT4NM7nmJHza1LHoeZzZLr7kYJBNAHh9CGBtEGh0gPjTAyEUPx+7Elovjv
      3kdgy0YcNdXYfStT8iwF+Z6hYRr88/F/QJIkPtvwCSb/4bvYaqrxf/rTSPYr1+cXQnPXKD0j
      URw2heFQguFQnGgyC0DA46Ay6MUwTEr8Lm5prKDE68JdZJtXJrEoAbSdPsqR060EKuv5+INz
      dxVeCwGYwuTs8Bn2d7xKMpek2lfDRzY8QrW/ZvGBC4ERjZLr60Pr60Pr7SfV0YE2PMJxTy3p
      4hJ8DfUEGlZT0rCKtXUluJ3Xrqi/OgS5nIZ9nlWSKz3DtJbim2//N3bU3MreETfx11+n+PPP
      4Fi37qpSlM5qdA5FaB8I0z4QIhxLY5gCp13lvlvrqQp6qSzx4Hc7lqQUXFQVqLi0Ar+ri2Qy
      veiELIZQMsSBztc5OXB8ulfnaaoWMfJSmCb68DCJV19DHxtD6Dp6Oktv2qRTuOiR3YiqGorv
      2IktneSxh3dTVeK5LqslVybFv/z9sySySR596gtUBxcuVCEEp4dO8Fzzs3y89iPUPn8Srbqa
      ir/8twuq45/pHOXNkz1IEgxNxHHaVdZWF9NYW8K+7asI+lws521dlADKa1aT6v0x0TrPUqVn
      3kwkx3n5/K8ZiQ0jENy97n4e2/qpBfXqiFwOJGmqKtPZRa6zk+z5VoSWQ6qo5PhgnFHTRu/q
      HeQkhYbqYrasKeOx1WX4PQsbd359IeH1ebHjQs9lAdeCQxhPjvH/vPYf+SPHfVQdegvfM8/g
      aJxfrj+ZyPBOcz+HWwawKTLuIhtP3beV6lLvNc9EFt0I3vvJJ8lmtaVIy7zJaBm+e/TvGE+M
      8cf3/PnC+vCFQB8bJ9PSQvyFFzEScRwNa7GvbSBZXk1TcB1n+idJpLKUbHVRVeLlz+7aiMu5
      +Lrs9YMgHouTyCZR7Vc3mC+YUfnaaz48+1wU/+UffGCun0jnePdcP4fODiBLEndsq+PPn75j
      xauJixbA+TNNSMFK1m9qXIr0fCBN/Uc52nuI+9c/xC0f0LDN9fYi2R1kL1zAGB9HaDpIAklR
      obiY45vvIKI4kauqMIVAzcrUlHr56q5GAjd0Dv9BGHS2tpLAYDKWojq48BJAKQ4Q/J3fwXXH
      3rwvf/dwhBfebcfttGFTFcoCbv74iT343NfPCNpFC6Dv5DmU7cv/shimzr80fY+UluRLe/4Q
      u3rlmy50nez5VtJNTcRffgXH5s24PrwH1969aMESTlwY4WjrIGOdSUr9ZaytLuaxvRtQ1UJa
      tMvBnn13oKsCb9HV5cCSouC5/74rugkh2H+yh5eOdrCzsYon7tmMqlyf93dRAhjuvUDNnXcS
      9C5v195kOsL/PPgNdq/ey33rH3zfRAkjHidz8hTpEycxIhEcmzbi2ruX+G0fxqyo4K3OUZpe
      uYBpCm5dX8lT92+luuTG7Y5cPDrHDx9CK/Kw5balHegXiqX52+eOU13q5T996T7stut7TNWi
      ukFf+cXP6Glvw7V1H7/9yJ1z+r3abtC2sfP84Pg/znxWv0i2o4Posz9D6DqSaqPolh0U3XYr
      alkZ4Via/ad6+P7LZ9iypowHbmvgtg1VeF3XT9F7IzLXMxRC8ObJHl4+2skXP7aTDXU3xqT/
      63Y06Gh8hEPdB7gw3spX7vhf8Tn9CF0nfeIkybfeQpgC2eMm+DtfQHa7yeR0DrcMcOB0LxIS
      +3asprrUQ31lAJt6fedCNwr5nmEomuJbvzpOXZmfpx7Yiv0Gut/XpQDSWor//Mq/QwjBf3zk
      v2CMjJJ4cz/Z860U7bwF9z13IweDjIaTjEUSvHmyh9FIkj2ba9m3YxXF3qJlvprC5PJnaJgm
      b57s4dXjXXz5kZ003iC5/qUsy1CI/lCaxvoawiNDuMuqcSjzF0B3qJN/PPJtHlQ20ThpR+ro
      QfZ4cd97D86tW5BkmUQqxw9ea+bFw+18/I4NPLCrgdUV/qW8jILk4nyA29eX8ev9pygvcjKh
      OHn4vr3YmP0MxyeT/MFfv8ADuxr48sd23rCl7JIPhmvt7EM3DaivITveT8pfTbVjfoPhXu94
      mWO9h/lX7vuQfvYSorKS4j/8Q2Tv1Ie2kXCCX7/bTudgmI/sauBrv3cv66dznWsxuO16YbkG
      w12cD2BmUzRs3spEdwfmWC+TmQ8TtM1+hn63na88vou9W2qQEDfs/V9yAchGhtFQmmgsytBg
      P1FRSu32tQgh8pYAyVyS77z7TUri8OWzbhxVo/i/9p+R3W4A2vomeO6dNjTd5ON71/PlRwtz
      Uvpyc3E+QNrMoGYGuPOu3TS39lLmvPJ8gAd2NaxQSpeOFW8DdE60890D/52PdDjYYJZS/PTT
      2Opq6RqKcL53nCMtg5QXu3n8zg3UlVvVnJVkped0LAcrNh1qMh3hUNcBOn/9Iz4fqqL6t57A
      tft2kCRaesb5xk8P4/c4+be/fRcB7838VdZiJVmxEuDn/+GLVI3rbL77cXwffwzJbmcimuK7
      vzmNLEk889HtBH1FyFZV57rBKgGWkLt8O3A/cgeuXbvIajq/fOMsZzpHeebBHWxcXbpSybIo
      MFa0DSCE4NDZfn55sI2P7l7LfbeusXL865ibsQRYMQH86I2znOseZ211MU/eu+UmG258c3Iz
      CmDFqkAdA2Ee2r2WO7YtzdqQFhZXw4p3g1rMjaEbZBMZXAH3SiflpnyGBbUw1kIR5lTeIMlX
      bpdoGY1I/zgl9eUYmoGhG5iaPnNsaAZD53oJ1pWBBKZmTLtN+TF1g1DPKLKqUuQrmjnH1KfO
      R0AmnkbP5njoL568lpdeMNzUApgcnMBbHkBWFYycjp7T0LNTppHTCfWMIYSgyOdCn3HX0HM6
      Rk4nMjCBoem4Ah6EMEEIECZgIoSBns6QCGcI1rlRVBnZJqEo06YqIysSofYOFOpweLwoqoxi
      k7EVySheGVmVUYxuHG4vgdUbps5R5RkTBLnEOInR9pW+lVeFMDX0+Dlsvh0IYYDQEEIDU58y
      hYaZncBIdaJ6tzJ1X00QBmCCmLKbmUFMPYrqbpy+/wIQU34RU9Nckx1Ish3FWT3jPuVn+lgY
      xIda8FStR5IuvvZi5QRgZMeQbQEk2T51IWYGYaQQRhJhpIiNjJBLZnCVFKNnBXpOoOfM6WPI
      xLOMtg1SsqYaPWdi5Ex0TcLQBcKYCisypOP2Z7A5ciiqmPrZBKoqUGwm6ZiBYhNI5aDYBHbV
      xOUSKD4TRTUJ+hMgmRRXO6eHXshwiSmMDNnJbopKt4MkAxfd5KlJO5JMbV0TqldHUoqm3Kf9
      TYUnUVTfh6S4UKQcGBIYEkZOwkCaCkOP4nKNrtRjyoupx0l2/TWqZ+P0/U4g9MSUaeam/WSI
      DYcI1FWDpCJMBUOXpn9g6hKpqE5sHIqrz2EaYBoCUxdTpgGmAcmoHS1jwx3oRggZYcqYpowQ
      EsKUME2JeNiDLGdxuk5hXsynkEFSkZARqETHq/CWhlBsMtL0c1pyAVw6GnSopwNHsIYS3/uH
      Jx///vewOTIgBLmMgZ61o+tOJNWLrPrIJBWEkChZ7UF12rE5bKhOFZvDjs1jx+GTMPFRs20V
      ql1CtSuodhXFbkeSVZBUEsPtuMtXIatXHh5t5sIgKci2Kw+xEEYGhImk5pkzKwQiF0dy5N/i
      VGSiU+55undFNg6KDSnPkuHC0BCZybzhrxSmLug6lqakUcbQy8llq9EyKlpWJZcW5FJZcuks
      seEIwdXlSLKErMgodhXVpqLYVBS7iqkbpLUYPkcNsiJjUxVkVUZW3jN98TRaNkdwVTmyIiMp
      MrIsv3esSMTHoqh2G96KALIsIcnyrKqrEIJI3zjFdWWz/r+so0FHJ+OIcAvFt+xEiKkRgxcb
      Ul29A9hsLrx+LzaXC3uxnSKnDQkDCJNhFC2TRpdWo2cFmQwQvdheF+jZDMNdbSSj22b+N1XU
      TR8LwUD7Ocrr1mB3Ot/7/9TdACA8OoQsy/hLyy8J4z336PgopmlSXF4xE+aMPyHIZdKMD49Q
      U1//3rkzaZg67u/uobK6EpvdPuv8i30P4fEJbDYFr993SdzvXUc6lSSZ0nj4L74DTDVEHXMs
      oXit0HMqo0O7sZWuocjvxlXqwOF2Ync7cbgd2F0OkCSSEzE8Zcs/hsvpnXtivyRJBFeXv+//
      yzoadHJ8iKJgHbIsz4wGVdWpKLfedx++0kqKPJfnnhJIEAuNoWUylNRcuZtUz2VxljdQt2Hr
      1DlXwF62lrK6NdiLrnxzAiMDyLKCv/zSdevfC2tybBhhGhRX1r7/ZElCy6Tw9nZSs35bviRg
      az1NVcPGvMuPBAZ7sTmK8JW+/+EAZBIxYhNjM/ftorkcXD4fwON2k4pNzuwPcCmqXVC2YZLS
      eh1FSQJJMARaTKBFp0Ss5zIMdbRQt+mWqdtzaQYybU8nY0SG+6let3nmf7P9QCw8SjaZoLSu
      4X1uF49Dgz2odgf+skuWyLkkIxLCpP/8aWrWb0W5eA+F1Q1qcQknT51EmCZb6/y0Ru2cP3GC
      2zbW4mm8jTK7iWEYyNN7cKUiY7z4t1+nZsN2FNuVV5bQc1mG289Rt3ln3ipgJhEjPNxPdeOW
      vOmKh8bIpi4VwPsJDfa+XwCXIEyT/taLAnjvo+s1E4Cu67PG8AshFmS/mnOuJo654rsWaZhP
      nDC/dfoXylBPB86SWhQzw2D/ABs2red8Ww9bN68Hbs5M7JoJwDTNmdzjatyXIoz5xPFBLHca
      luI+LBeapq1IvMvJNbua2TdOo+n46Tnc4dypY7R29OX1Mz7Uy/5Dx+YMo+98ExOp/O5nmg7T
      3jOUN83tLafoHpjdBXlpGJ1tzby2/5287npqkjfffJNoxsibhtPHD9MzOHZF97GhPvqHxmg7
      e4IL3YN5w7hWyLKMoigzv8vtwCz7Uvm53H2+fuYTzwrJ2YbPP/ckl+qa2jlXawsE/ExGInnd
      hZZkuL+T0BwLV0+Gw5imkde9tbWNVCqV133thq1UlOTv4chOhommYkzG86+dGo/HaG9vu6Jb
      efUqMskImuQkmwrnDeNacbnwLq+WXUmYS+HnStXU+fiZTzwrIwAjS8uZs/SPhvJ6OX7sKDkt
      /0TriYkQdtVGvtc3l8kSyxgkJsfzhlFcEiSZTOZ1r6urI5XOr6DJkX6qGzbmddckFZ/bhWTk
      F0AwWExV1RV6mYD+zjZa2nvJxibQxcrvNXDpC5SKhjl4+Fhed4B4ZIznf/osk3p+P/1dbfzs
      uZfmDKfr/Gn2v3t0Tj+v/+b5OUvzoa5WXn/7yKz3RZKka9cGsLj5aG9vo7FxQ173aGiU0ViW
      9Wvyj/gdG+zhRGsfD92fb4lGk+d//ixZm4dPP/ZI3nCOHnyTuOnk/n0fvqJ766kjtHd0sePB
      J1nle68hf1OPBbJYPuKhUQYHh6lctQ6vI89yiabBUG8XtbWrcOWZ7mGaBqvr6+eISeaxTz1J
      IhGfMz1l5eXUl63O675x+21kJBd1vtlptUoAi4Lm5urTsrBYIJYALAoaSwAWBY0lAIuCxhKA
      RUFjCcCioLEEYFHQWAKwKGgsAdyE9J07xvP7jwDw1gs/4lBzNwD79+8H4ELTfr73k+f4+a9e
      Qk9HefvgOzQ1NXH82FHC0QQ//smzK5X0a44lgJsQu+Slu7OZbDZOV3c/gbIqIkOddLaep3Uo
      SnnQSyiapKe3h1Nn26gr8xCNjDEUg3g0jCqbvPHqyyRz5kpfyrJjCeCmRPDQPTv579/5FRs3
      rgHg1Lk2tm3fzMu/fh6AuoYN/Mm//gpFriJOnGvHbWSoqS3F4Qow0N6MUlyL23q6EGgAAA/A
      SURBVH7zvx43/xUWIDEtjmSv44lH70S2eYgNtEBRKbv3fJjVQQcdoxkC03P0i1SZzVt20Ljr
      TlxmlvBoH4277kOf6CYSn2MyxU2CNRjOgs62c0wmMniKS9nQkH9E5c2IJQCLgsaqAlkUNNaE
      mGXEMAxM07S2dL1GSJK04GVbLAEsI5euXmBxfWIJwOK6Qjd0Loy3MpEcp8ZfS1bPktOzZI0s
      WT1DVs+S1bOEkhN0TLTx7x/+OrJ09TV5SwAWS8ZIbJigK4hddaAZGqlckrSWIqWlSOVSpLUU
      Z4dPIyHhtDmJZWLEMlHSWmpmGU9VVsnpOXJGli2V23GoDuyqA8f0z+PwUOIqpdxTgc/pW3T1
      0hKAxYLRDI3xxCij8RHG4iOMJkYYjY9wdvg0Ja4yAq5ibLINl91Fkc31nmlzo8gqfmeATRVb
      8Dl9eJ1+XDbXVb7IV14BYiFY3aDLzI2wnqZu6qjyVF4ohCCRjTORHCecChFJhQmnJnj9wivU
      BOpACFTFRpmnnApvJRXeSso9U+ZkepISdwmOPHsdXI9YAlhmrlcBCCEYig3SMtLMD5u+S42/
      DptqRwI8Di+l7nKCriDFriCBoiB9kR7uWLMPrzP/ZiA3IpYAlpnrRQBCCIZjg7SMnOX86Fkm
      khNU+2vYXLEVSZK5peZWPA7vSifzmmMJYJlZKQGYpkFnqIPnmp/FoTqmXnhfDZsqt7K5Yiul
      nrJrnqbrEasRfJMQTU/SMXGBjvE2ukId5AyN2kAdqmLjUzueosZ/5fVHCx2rBFhmlqsE6Ji4
      wAvnnkORFSYSY/icftaVrWdd6QYaStbhtN04DdGVxCoBbjCEEBzofJPXLrxEhaeSz+x8mlJ3
      +Q0z3MKIRpFUFdntnvmfME2EpiFyOUQuh9Y/gBGJYFtVh9A00PQpd12bMjUdIxwm19VF6Z/+
      yaKu3RLADUTHxAV+1PQ9NlVu5f948D9hV6/RbpFCkGk5j6NxHULTMdMpzHQakU5jptOYqanj
      1LFjqJWVyDYbZjaLmP5dPMYUaP39SDYbauUle3lJEpLdhmS3I9nsmLEoZjKFY/MmJJsNSVWn
      TJsNpk3Z60UJBhd9aVYVaJlZiirQZDrCj0/8M1k9w+du+wKlnivvKLlQhKahh8MkXn0d26pa
      RE7DjMcxEwmMaBQzFp/KgU2TbFsb9nVrUQIBpKIi5OnfzLGriFxPL/Y19ajlFUgOB5LTgexw
      TB07HEiyjD42hmS3owQCS3INi8USwDKzGAHops7L51/gWP9hnrjlc2yp3PbBJ116fihE/KXf
      YF+9GiMcRg+HMUIhzGRyaotQm4oSDKINDVN0yw7UioqpnNXrQfb7UXy+qVwXMCKRqZf2Bqlq
      zRdLAItkuLeDwajOru0baTneRP2uWzj15htsuP1uSjz2qxLARGKc5uHT7O94lb1r9vHA+odQ
      5MvCEAKh6Uh2G0Y8jjYwgDYwiDYwgD40hNA0ZLcbfXwCz333opaXo5SUoJQEUdzum+5Fvlqs
      NsAiCSWzOOWp1RMqvB7S4U58G+9iuOcCgU2bME2TheQxpjD49qH/wVhilL/66NfwOrwIU6Cb
      7+0zpPX0knrzTVJvH8S2Zg2y14NSXY2tpoaifftQq6tmcu7LEYBu5N8X7UZC0w1s6nsZgzUf
      YAWwC43huE40OsmF7gvYRQMT3W+waefeBc8HSOaSfPPt/5fdqz/MnQ33zHRlmuk0mbNnSZ88
      hdbfj331aop2bKdoxw5cu29frktbFkbDCew2hYDHiaabpHMamaxOOqeTyelksjrdI5OEoinq
      yn1kNYNsTp8yNZ1sbsocj6boGZ7kn//yU8jy1ZdmVhVomZlvFWg0PsLfHPwGT9zyOTYqleT6
      +tHHxsicPoMwdJzbtlK0cye2uroV6fK8PLcVQpDMaMRTWWLJHPF0lrfP9FFR7EZVZFIZjWRG
      I5XRSGU1spoOAvrGothVhcoSD3ZVwWlXKXLYpky7itOhEk/lSGU1tjdU4LArOGwqDpsy61g3
      TPrGYnxoU82irssSwDIzHwG0jp7jhye+x+/v/V+owMP4f/mvGLEogaeewrljO4rHs6xpjMTT
      BDxTpU08lSMSTzMeTRGOpQnH04Siad482c3a6iCKIk01oCUJt9OG1+XA67LjdTnoH4vSWBuk
      ptSHy2mb+bkdNuw2BUmSmExksKkybufK73oJlgCWnQ8SwIGONzjUc4A/uutPkY43E//NywQ+
      +xT2tWuRHUv7kgghiMQzjIQT7/1CCQ4291Fb5sPjsuMtchD0OSn1uynxFVHsdVLsLaJ7OMLu
      TTUUOfLsdneDYglgmcknAFOY/OTkD4hlonxh41PE/un7qKVl+D/zBLJjcR+4TCEYmohzrnuM
      nx9opbbMRyqrIUlQ7C2iMuiZ/rmpDHoYjSRprAnisBdek9ASwAIIjQ6QkVzUlM//C+SVBJDV
      M/zPd/4/1pU2cm+4jPirr1L89NM4NqxfUHpMUyBJMD6Zon0gRMdgmK6hCDndpLrEy7qaYiYT
      GR7e0zhTxbGYjSWABfD8s8+SzMGjn/gYHlfRvM65XAD7O17j9Qsv81jtA6x59RxqRSWBJz+N
      ZJ9/dSeayPDcO228eLid+soA5QE362qDNNYGaagqLsic/GqxBLAAOs4309raghxYwyP37p7X
      OZcL4EcvfwOltYu7QkGKn3kaR2PjvMKJp3Icbunn0NkBJAk+tKkWh13h7h311jetRWBlFQvg
      xDtvcPT4CH/+N09edRj3ncgitDLK//LPkexzNyhTGY0j5wd4p7kf3TDZs7mW/+2JPfjd12gQ
      XAFglQAL4OCrL9Hd30uwYRcfu2fXvM65vAQwE0lQZOSiK1ehTFPwnRdOcKE/xO0ba9i4qoS6
      Cj9B7/yqXBYLwyoBFkDD+kZGQxHKgv6rDkP2uPO6DYzH+NZzx9mxtoKvfvJ21lQVX3U8FvPD
      EsACOPDKi6ScZWwsWtoqiGGaPPd2Gyc7hvmDx3dRW3ZzrbxwPWNVgZaZD/oQ1jca5W9/dZwP
      ba7l0Q+vX9S4FouFY5UAK4RumPz8wHnOdY/zR5/aTVVJ4S1Jcj1glQDLzOUlgKYb9I5E+YcX
      T3LHtlU8vGcdstWPuWJYJcAiOXXsHYajBg8/sI/Xf/MrvBWrGGg7z10PPU5ZwPU+/1//l3cY
      mojzV797NxXFyzvIzeKDsQSwSITNRXlwakJMSWUtZjaGx++nf2CYoLf+fRNinrpvCzZVocTr
      RNf1fMFaXAVXMyHGqgItktTkOCNxkxKfg1hoDG/Fanpam9m041YcqnzdLI1ocWUsASwzlgCu
      b6xN8iwKGksAFgWNJQCLgsYSgEVBYwnAoqCxBGBR0FgCsChoLAFYFDTWUIjrFSHmXMBWmBpm
      dgSlqG6OIAy06Als/tuQJHlqQV0EIECYUyYCbfIYqmcTklJ0mZ9pExMtcgTVfwuSdHHyvnif
      qcVOoxStQlID73ef/t6qJzuRFCeKs/qy899DT49hZOM4/A15/AgMLUk6PIS//v681z8frC/B
      y8zlX4L1RCtCGMiqH2EkEEYCU09OHesJhJFET7ZjZkdRXA0gNISpgZg9bsjIJoiPxwjUVs/8
      zzTE1E83MQ0DPasx3uckWBlHCIFpGAgThCkhhIIpFIQpExquwBeMICsCIaRp9ynTnD4ODVcT
      KB1FkgSCqf8hpv1NH0fGK3F5o9jsuWntSAje84eARLQYWTFwupJTr/VFN6SZc7IZF4Zmx+VL
      TGcCMiBNLwk5Zc9lFTIJO4/+n88gXb5y9gKwSoBrTKLv55jZIRyBRpDdaDkbWkZFy079cpkS
      JodsJCPr8FfXYegSpg6GLmHoxlRmKEEumSExESO4anqzDAlkRUZWFGRVRlEVkCQm+ofBU4di
      U5EVGckmT/mTZSRFRlEk5PgIjuoK7C4HkixNu02bsowkS6jtQ5Q3VqHYbUiShCRL7zNDPaN4
      K4pxeoumXlbpohsz9thIBNVhw1Pqn/V/afqHBOloklwyS6CmJO991HM6ifHool5+sEqAZefy
      EuDd775GbDiCu8SHJEvYixzY3Q7sbieOaVMYJlpGo2xdFYpNRbUpKHYVWVVmFsY1DZN0NIk7
      aE2kWQxWCbBILt0g4+yJI7grVjN8oXlmg4zL2XRvI4rNjreqKm+YZjaBkUlg8+effC+hoxrj
      QH4BCCHIjZzHUblpzvZEdqQVe1kDkpJ/ca7s0FnslRuR5PyvTHa0DVugBtmRf56DFu5DtjlR
      vPm3eTISExiZGPbShrx+RC5JbrwLR83Cds25HEsAi+TSDTIkp5tkxyF8Gx+Z2SBDCEE2m50p
      Bd594XvExgbw+qZfXHFpgxNAkEqmyGY1iou90+2/i34uHkMul2MynqU8eOkqE+I9bwiEYTAW
      1Sj325Bkeba/mUPBeDRHwK1csvz5ZZUCYTIaNSn1SCiKfIUwpv6EEgYeh4TDlt9PNC1QZPA4
      8gsylRXkDJiZTzQTzHvh5XRBPKfw2f/wd0iyMlPSqurCXmlLAIvk0g0yYhOjeMs2MHjqvQ0y
      DMPAcclit7c/9jSyrOIvr84bZiIyQTo+SdmqdXn95DIpxvs6qVmfPwcUpkF/6xnqNu64TACz
      GWg7Q0V9IzZHvrWHBP3nT1PduBlFzV9KDHeep7iyBqc7/6oWoaFebHYHvtLKvH4SkXEyiTil
      dflLgGw6SWhwKixgwS/+Raw2wDJjzQe4vrFKgGVGCIFxyZ5cQoj37fAyn/9dSz8rHf9i0mhV
      ga4zZHmqy3EuTNO8rvxcj2mar5+FYg2FWGYuf2jtp5uIaXP76Ww9w8lzF+b009/VxpGm5jn9
      AJw40fSBfg68/hvGJ1N5/enpSfa/fYTL95a81I+RjbN//xu09wzPGV/ziSO0dQ3M6efC2ZO0
      dvbl9ZOKhjl/oYvRgS6Onjo357V9EJYArjG1JR5iH7AYREVVLU7b3O2GgD9AZDIyp5/IaD8D
      E3P7gTST4TSGkT/3bDnXCkaarJ6/uag4vKytrqCssmLO2CYmJoiEw3P6icXitF3oyOvu8gdR
      JY3xaIYi28Jz/UuxBHCNaW3vpLezc04/J5uOksrOrZKJ0DiqOrdIcppGKjLOZErL70kTFFcG
      SSUTeb2sWlULepZkbu6XTVOLCDjnfqXsDjvKB4g7WBKkpjp/L1E8NMqZM2cxtBwTkVRef/PB
      6gWyKGisEsCioLEEYFHQWAKwKGgsAVgUNJYALAoaSwAWBY0lAIuCxhKARUFjCcCioLEEYFHQ
      WAKwKGgsAVgUNJYALAoaSwAWBY0lAIuCxhKARUFjCcCioLEEYFHQWAKwKGgsAVgUNJYALAoa
      SwAWBY0lAIuCxhKARUFjCcCioLEEYFHQWAKwKGgsAVgUNP8/VFlhGaCK0BoAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='High value MAP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='High value Recall' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='MAP' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='MRR' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='NDCG' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Recall' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
