<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0515.1630                               -->
<workbook original-version='18.1' source-build='2019.2.0 (20192.19.0515.1630)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='map+ (acl_metrics)' inline='true' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mag_owncontexts_metrics' name='excel-direct.0xjwcom0qx40in19x3qmk117tu9c'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Coursework/Thesis/OfflineEval/MAG/mag_owncontexts_metrics.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='mag50_metrics' name='excel-direct.0vvnxmq0f7k1hg12c2wfn0vjke0i'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Coursework/Thesis/OfflineEval/MAG50/mag50_metrics.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[map].[k]' />
              <expression op='[recall].[k]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[map].[k]' />
                <expression op='[ndcg].[k]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[map].[k]' />
                  <expression op='[mrr].[k]' />
                </expression>
              </clause>
              <relation connection='excel-direct.0xjwcom0qx40in19x3qmk117tu9c' name='map' table='[map$]' type='table'>
                <columns gridOrigin='A1:H19:no:A1:H19:0' header='yes' outcome='6'>
                  <column datatype='integer' name='k' ordinal='0' />
                  <column datatype='real' name='hd2vINOUT' ordinal='1' />
                  <column datatype='real' name='hd2vOUT' ordinal='2' />
                  <column datatype='real' name='bm25' ordinal='3' />
                  <column datatype='real' name='hybrid' ordinal='4' />
                  <column datatype='real' name='lda' ordinal='5' />
                  <column datatype='real' name='paper2vec' ordinal='6' />
                  <column datatype='real' name='doc2vec' ordinal='7' />
                </columns>
              </relation>
              <relation connection='excel-direct.0xjwcom0qx40in19x3qmk117tu9c' name='mrr' table='[mrr$]' type='table'>
                <columns gridOrigin='A1:H19:no:A1:H19:0' header='yes' outcome='6'>
                  <column datatype='integer' name='k' ordinal='0' />
                  <column datatype='real' name='hd2vINOUT' ordinal='1' />
                  <column datatype='real' name='hd2vOUT' ordinal='2' />
                  <column datatype='real' name='bm25' ordinal='3' />
                  <column datatype='real' name='hybrid' ordinal='4' />
                  <column datatype='real' name='lda' ordinal='5' />
                  <column datatype='real' name='paper2vec' ordinal='6' />
                  <column datatype='real' name='doc2vec' ordinal='7' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.0xjwcom0qx40in19x3qmk117tu9c' name='ndcg' table='[ndcg$]' type='table'>
              <columns gridOrigin='A1:H19:no:A1:H19:0' header='yes' outcome='6'>
                <column datatype='integer' name='k' ordinal='0' />
                <column datatype='real' name='hd2vINOUT' ordinal='1' />
                <column datatype='real' name='hd2vOUT' ordinal='2' />
                <column datatype='real' name='bm25' ordinal='3' />
                <column datatype='real' name='hybrid' ordinal='4' />
                <column datatype='real' name='lda' ordinal='5' />
                <column datatype='real' name='paper2vec' ordinal='6' />
                <column datatype='real' name='doc2vec' ordinal='7' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0xjwcom0qx40in19x3qmk117tu9c' name='recall' table='[recall$]' type='table'>
            <columns gridOrigin='A1:H19:no:A1:H19:0' header='yes' outcome='6'>
              <column datatype='integer' name='k' ordinal='0' />
              <column datatype='real' name='hd2vINOUT' ordinal='1' />
              <column datatype='real' name='hd2vOUT' ordinal='2' />
              <column datatype='real' name='bm25' ordinal='3' />
              <column datatype='real' name='hybrid' ordinal='4' />
              <column datatype='real' name='lda' ordinal='5' />
              <column datatype='real' name='paper2vec' ordinal='6' />
              <column datatype='real' name='doc2vec' ordinal='7' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[bm25 (mrr)]' value='[mrr].[bm25]' />
          <map key='[bm25 (ndcg)]' value='[ndcg].[bm25]' />
          <map key='[bm25 (recall)]' value='[recall].[bm25]' />
          <map key='[bm25]' value='[map].[bm25]' />
          <map key='[doc2vec (mrr)]' value='[mrr].[doc2vec]' />
          <map key='[doc2vec (ndcg)]' value='[ndcg].[doc2vec]' />
          <map key='[doc2vec (recall)]' value='[recall].[doc2vec]' />
          <map key='[doc2vec]' value='[map].[doc2vec]' />
          <map key='[hd2vINOUT (mrr)]' value='[mrr].[hd2vINOUT]' />
          <map key='[hd2vINOUT (ndcg)]' value='[ndcg].[hd2vINOUT]' />
          <map key='[hd2vINOUT (recall)]' value='[recall].[hd2vINOUT]' />
          <map key='[hd2vINOUT]' value='[map].[hd2vINOUT]' />
          <map key='[hd2vOUT (mrr)]' value='[mrr].[hd2vOUT]' />
          <map key='[hd2vOUT (ndcg)]' value='[ndcg].[hd2vOUT]' />
          <map key='[hd2vOUT (recall)]' value='[recall].[hd2vOUT]' />
          <map key='[hd2vOUT]' value='[map].[hd2vOUT]' />
          <map key='[hybrid (mrr)]' value='[mrr].[hybrid]' />
          <map key='[hybrid (ndcg)]' value='[ndcg].[hybrid]' />
          <map key='[hybrid (recall)]' value='[recall].[hybrid]' />
          <map key='[hybrid]' value='[map].[hybrid]' />
          <map key='[k (mrr)]' value='[mrr].[k]' />
          <map key='[k (ndcg)]' value='[ndcg].[k]' />
          <map key='[k (recall)]' value='[recall].[k]' />
          <map key='[k]' value='[map].[k]' />
          <map key='[lda (mrr)]' value='[mrr].[lda]' />
          <map key='[lda (ndcg)]' value='[ndcg].[lda]' />
          <map key='[lda (recall)]' value='[recall].[lda]' />
          <map key='[lda]' value='[map].[lda]' />
          <map key='[paper2vec (mrr)]' value='[mrr].[paper2vec]' />
          <map key='[paper2vec (ndcg)]' value='[ndcg].[paper2vec]' />
          <map key='[paper2vec (recall)]' value='[recall].[paper2vec]' />
          <map key='[paper2vec]' value='[map].[paper2vec]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lda</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lda]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>lda</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[map]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H19:no:A1:H19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25 (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lda</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lda (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>lda</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mrr]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H19:no:A1:H19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25 (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lda</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lda (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>lda</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ndcg]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H19:no:A1:H19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25 (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lda</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lda (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>lda</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[recall]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H19:no:A1:H19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;' value='BM25' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;' value='Doc2Vec' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;' value='hd2vINOUT' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;' value='hd2vOUT' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;' value='Hybrid' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;' value='Lda' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (recall):qk]&quot;' value='Ldamallet' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;' value='Paper2Vec' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Bm25 (Mrr)' datatype='real' name='[bm25 (mrr)]' role='measure' type='quantitative' />
      <column caption='Bm25 (Ndcg)' datatype='real' name='[bm25 (ndcg)]' role='measure' type='quantitative' />
      <column caption='Bm25 (Recall)' datatype='real' name='[bm25 (recall)]' role='measure' type='quantitative' />
      <column caption='Bm25' datatype='real' name='[bm25]' role='measure' type='quantitative' />
      <column caption='Doc2Vec (Mrr)' datatype='real' name='[doc2vec (mrr)]' role='measure' type='quantitative' />
      <column caption='Doc2Vec (Ndcg)' datatype='real' name='[doc2vec (ndcg)]' role='measure' type='quantitative' />
      <column caption='Doc2Vec (Recall)' datatype='real' name='[doc2vec (recall)]' role='measure' type='quantitative' />
      <column caption='Doc2Vec' datatype='real' name='[doc2vec]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT (mrr)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT (ndcg)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT (recall)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT (mrr)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT (ndcg)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT (recall)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT]' role='measure' type='quantitative' />
      <column caption='Hybrid (Mrr)' datatype='real' name='[hybrid (mrr)]' role='measure' type='quantitative' />
      <column caption='Hybrid (Ndcg)' datatype='real' name='[hybrid (ndcg)]' role='measure' type='quantitative' />
      <column caption='Hybrid (Recall)' datatype='real' name='[hybrid (recall)]' role='measure' type='quantitative' />
      <column caption='Hybrid' datatype='real' name='[hybrid]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='K (Mrr)' datatype='integer' name='[k (mrr)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='K (Ndcg)' datatype='integer' name='[k (ndcg)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='K (Recall)' datatype='integer' name='[k (recall)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal' />
      <column caption='Lda (Mrr)' datatype='real' name='[lda (mrr)]' role='measure' type='quantitative' />
      <column caption='Lda (Ndcg)' datatype='real' name='[lda (ndcg)]' role='measure' type='quantitative' />
      <column caption='Lda (Recall)' datatype='real' name='[lda (recall)]' role='measure' type='quantitative' />
      <column caption='Lda' datatype='real' name='[lda]' role='measure' type='quantitative' />
      <column caption='Paper2Vec (Mrr)' datatype='real' name='[paper2vec (mrr)]' role='measure' type='quantitative' />
      <column caption='Paper2Vec (Ndcg)' datatype='real' name='[paper2vec (ndcg)]' role='measure' type='quantitative' />
      <column caption='Paper2Vec (Recall)' datatype='real' name='[paper2vec (recall)]' role='measure' type='quantitative' />
      <column caption='Paper2Vec' datatype='real' name='[paper2vec]' role='measure' type='quantitative' />
      <column-instance column='[bm25 (mrr)]' derivation='Sum' name='[sum:bm25 (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[bm25 (ndcg)]' derivation='Sum' name='[sum:bm25 (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[bm25 (recall)]' derivation='Sum' name='[sum:bm25 (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[bm25]' derivation='Sum' name='[sum:bm25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec (mrr)]' derivation='Sum' name='[sum:doc2vec (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec (ndcg)]' derivation='Sum' name='[sum:doc2vec (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec (recall)]' derivation='Sum' name='[sum:doc2vec (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec]' derivation='Sum' name='[sum:doc2vec:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT (mrr)]' derivation='Sum' name='[sum:hd2vINOUT (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT (ndcg)]' derivation='Sum' name='[sum:hd2vINOUT (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT (recall)]' derivation='Sum' name='[sum:hd2vINOUT (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT]' derivation='Sum' name='[sum:hd2vINOUT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT (mrr)]' derivation='Sum' name='[sum:hd2vOUT (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT (ndcg)]' derivation='Sum' name='[sum:hd2vOUT (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT (recall)]' derivation='Sum' name='[sum:hd2vOUT (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT]' derivation='Sum' name='[sum:hd2vOUT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid (mrr)]' derivation='Sum' name='[sum:hybrid (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid (ndcg)]' derivation='Sum' name='[sum:hybrid (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid (recall)]' derivation='Sum' name='[sum:hybrid (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid]' derivation='Sum' name='[sum:hybrid:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lda (mrr)]' derivation='Sum' name='[sum:lda (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[lda (ndcg)]' derivation='Sum' name='[sum:lda (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[lda (recall)]' derivation='Sum' name='[sum:lda (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[lda]' derivation='Sum' name='[sum:lda:qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec (mrr)]' derivation='Sum' name='[sum:paper2vec (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec (ndcg)]' derivation='Sum' name='[sum:paper2vec (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec (recall)]' derivation='Sum' name='[sum:paper2vec (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec]' derivation='Sum' name='[sum:paper2vec:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.53527' measure-ordering='alphabetic' measure-percentage='0.46473' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (mrr):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (mrr):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (mrr):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (recall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (mrr):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (mrr):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (mrr):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (mrr):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (mrr):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='High value MAP'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25' datatype='real' name='[bm25]' role='measure' type='quantitative' />
            <column caption='Doc2Vec' datatype='real' name='[doc2vec]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT]' role='measure' type='quantitative' />
            <column caption='Hybrid' datatype='real' name='[hybrid]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal' />
            <column caption='Lda' datatype='real' name='[lda]' role='measure' type='quantitative' />
            <column-instance column='[k]' derivation='None' name='[none:k:ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec' datatype='real' name='[paper2vec]' role='measure' type='quantitative' />
            <column-instance column='[bm25]' derivation='Sum' name='[sum:bm25:qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec]' derivation='Sum' name='[sum:doc2vec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT]' derivation='Sum' name='[sum:hd2vINOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT]' derivation='Sum' name='[sum:hd2vOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid]' derivation='Sum' name='[sum:hybrid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda]' derivation='Sum' name='[sum:lda:qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec]' derivation='Sum' name='[sum:paper2vec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:k:ok]' member='10' />
              <groupfilter function='member' level='[none:k:ok]' member='20' />
              <groupfilter function='member' level='[none:k:ok]' member='30' />
              <groupfilter function='member' level='[none:k:ok]' member='40' />
              <groupfilter function='member' level='[none:k:ok]' member='50' />
              <groupfilter function='member' level='[none:k:ok]' member='100' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='MAP' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</cols>
      </table>
      <simple-id uuid='{5655C8B9-CEC9-4A52-B75D-AF44EF23F03E}' />
    </worksheet>
    <worksheet name='High value Recall'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Recall@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Recall)' datatype='real' name='[bm25 (recall)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Recall)' datatype='real' name='[doc2vec (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (recall)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Recall)' datatype='real' name='[hybrid (recall)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Recall)' datatype='integer' name='[k (recall)]' role='dimension' type='ordinal' />
            <column caption='Lda (Recall)' datatype='real' name='[lda (recall)]' role='measure' type='quantitative' />
            <column-instance column='[k (recall)]' derivation='None' name='[none:k (recall):ok]' pivot='key' type='ordinal' />
            <column-instance column='[k (recall)]' derivation='None' name='[none:k (recall):qk]' pivot='key' type='quantitative' />
            <column caption='Paper2Vec (Recall)' datatype='real' name='[paper2vec (recall)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (recall)]' derivation='Sum' name='[sum:bm25 (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (recall)]' derivation='Sum' name='[sum:doc2vec (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (recall)]' derivation='Sum' name='[sum:hd2vINOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (recall)]' derivation='Sum' name='[sum:hd2vOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (recall)]' derivation='Sum' name='[sum:hybrid (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda (recall)]' derivation='Sum' name='[sum:lda (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (recall)]' derivation='Sum' name='[sum:paper2vec (recall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:k (recall):ok]' member='10' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='20' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='30' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='40' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='50' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='100' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='Recall' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):qk]</cols>
      </table>
      <simple-id uuid='{728FE13B-C33C-43B1-B399-EF81DAB52CF7}' />
    </worksheet>
    <worksheet name='MAP'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman'>MAP@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25' datatype='real' name='[bm25]' role='measure' type='quantitative' />
            <column caption='Doc2Vec' datatype='real' name='[doc2vec]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT]' role='measure' type='quantitative' />
            <column caption='Hybrid' datatype='real' name='[hybrid]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal' />
            <column caption='Lda' datatype='real' name='[lda]' role='measure' type='quantitative' />
            <column-instance column='[k]' derivation='None' name='[none:k:ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec' datatype='real' name='[paper2vec]' role='measure' type='quantitative' />
            <column-instance column='[bm25]' derivation='Sum' name='[sum:bm25:qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec]' derivation='Sum' name='[sum:doc2vec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT]' derivation='Sum' name='[sum:hd2vINOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT]' derivation='Sum' name='[sum:hd2vOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid]' derivation='Sum' name='[sum:hybrid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda]' derivation='Sum' name='[sum:lda:qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec]' derivation='Sum' name='[sum:paper2vec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]'>
            <groupfilter from='1' function='range' level='[none:k:ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='MAP' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</cols>
      </table>
      <simple-id uuid='{41C82915-1299-4B14-998C-E916B4EBCFC8}' />
    </worksheet>
    <worksheet name='MRR'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman'>MRR@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Mrr)' datatype='real' name='[bm25 (mrr)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Mrr)' datatype='real' name='[doc2vec (mrr)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (mrr)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (mrr)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Mrr)' datatype='real' name='[hybrid (mrr)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Mrr)' datatype='integer' name='[k (mrr)]' role='dimension' type='ordinal' />
            <column caption='Lda (Mrr)' datatype='real' name='[lda (mrr)]' role='measure' type='quantitative' />
            <column-instance column='[k (mrr)]' derivation='None' name='[none:k (mrr):ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec (Mrr)' datatype='real' name='[paper2vec (mrr)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (mrr)]' derivation='Sum' name='[sum:bm25 (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (mrr)]' derivation='Sum' name='[sum:doc2vec (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (mrr)]' derivation='Sum' name='[sum:hd2vINOUT (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (mrr)]' derivation='Sum' name='[sum:hd2vOUT (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (mrr)]' derivation='Sum' name='[sum:hybrid (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda (mrr)]' derivation='Sum' name='[sum:lda (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (mrr)]' derivation='Sum' name='[sum:paper2vec (mrr):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (mrr):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]'>
            <groupfilter from='1' function='range' level='[none:k (mrr):ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='MRR' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]</cols>
      </table>
      <simple-id uuid='{258031A8-E651-405E-B3D4-716C98C5D783}' />
    </worksheet>
    <worksheet name='NDCG'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman'>NDCG@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Ndcg)' datatype='real' name='[bm25 (ndcg)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Ndcg)' datatype='real' name='[doc2vec (ndcg)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (ndcg)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (ndcg)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Ndcg)' datatype='real' name='[hybrid (ndcg)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Ndcg)' datatype='integer' name='[k (ndcg)]' role='dimension' type='ordinal' />
            <column caption='Lda (Ndcg)' datatype='real' name='[lda (ndcg)]' role='measure' type='quantitative' />
            <column-instance column='[k (ndcg)]' derivation='None' name='[none:k (ndcg):ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec (Ndcg)' datatype='real' name='[paper2vec (ndcg)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (ndcg)]' derivation='Sum' name='[sum:bm25 (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (ndcg)]' derivation='Sum' name='[sum:doc2vec (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (ndcg)]' derivation='Sum' name='[sum:hd2vINOUT (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (ndcg)]' derivation='Sum' name='[sum:hd2vOUT (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (ndcg)]' derivation='Sum' name='[sum:hybrid (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda (ndcg)]' derivation='Sum' name='[sum:lda (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (ndcg)]' derivation='Sum' name='[sum:paper2vec (ndcg):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (ndcg):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]'>
            <groupfilter from='1' function='range' level='[none:k (ndcg):ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='NDCG' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]</cols>
      </table>
      <simple-id uuid='{60BAAFFD-9277-44E5-A061-4A11AEC523B9}' />
    </worksheet>
    <worksheet name='Recall'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman'>Recall@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Recall)' datatype='real' name='[bm25 (recall)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Recall)' datatype='real' name='[doc2vec (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (recall)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Recall)' datatype='real' name='[hybrid (recall)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Recall)' datatype='integer' name='[k (recall)]' role='dimension' type='ordinal' />
            <column caption='Lda (Recall)' datatype='real' name='[lda (recall)]' role='measure' type='quantitative' />
            <column-instance column='[k (recall)]' derivation='None' name='[none:k (recall):ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec (Recall)' datatype='real' name='[paper2vec (recall)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (recall)]' derivation='Sum' name='[sum:bm25 (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (recall)]' derivation='Sum' name='[sum:doc2vec (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (recall)]' derivation='Sum' name='[sum:hd2vINOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (recall)]' derivation='Sum' name='[sum:hd2vOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (recall)]' derivation='Sum' name='[sum:hybrid (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda (recall)]' derivation='Sum' name='[sum:lda (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (recall)]' derivation='Sum' name='[sum:paper2vec (recall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]'>
            <groupfilter from='1' function='range' level='[none:k (recall):ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='Recall' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</cols>
      </table>
      <simple-id uuid='{F00F0ED4-5094-41E9-9446-FA36A49AB6B4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='88605' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='88605' id='5' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='44303' id='3' name='Recall' w='49200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44303' id='9' name='MRR' w='49200' x='50000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44302' id='10' name='MAP' w='49200' x='800' y='45303'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44302' id='11' name='NDCG' w='49200' x='50000' y='45303'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='9395' id='12' type='layout-flow' w='98400' x='800' y='89605'>
            <zone h='5750' id='8' leg-item-layout='horz' name='Recall' pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' w='98400' x='800' y='89605'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='20' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='44303' id='3' is-fixed='true' name='Recall' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5750' id='8' leg-item-layout='horz' name='Recall' pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' w='98400' x='800' y='89605'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44303' id='9' is-fixed='true' name='MRR' w='49200' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44302' id='10' is-fixed='true' name='MAP' w='49200' x='800' y='45303'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44302' id='11' is-fixed='true' name='NDCG' w='49200' x='50000' y='45303'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0B046EC0-DDC6-4381-A0CC-2B06166E247D}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='MAP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE1AD117-502F-4F45-B5C2-4CDCF5C5477C}' />
    </window>
    <window class='worksheet' name='MRR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AA50CC9-8D96-4EFF-91AD-EA35F198D8C1}' />
    </window>
    <window class='worksheet' maximized='true' name='High value MAP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{60BABB40-9960-4112-9321-97B28E7B44F8}' />
    </window>
    <window class='worksheet' name='Recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FDBFCA76-4A4E-43E7-BE4A-930952F7A6BF}' />
    </window>
    <window class='worksheet' name='High value Recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F1E2AE7-CB73-41DB-B8A1-8C1EC09B4440}' />
    </window>
    <window class='worksheet' name='NDCG'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{040FF1B5-8143-4244-8521-DD5825CFCB72}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='MAP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MRR'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='NDCG'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Recall'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8AA6632A-4CA1-4462-8319-C99E3EE5A28E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='High value MAP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='High value Recall' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='MAP' width='192'>
      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
      KAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='MRR' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='NDCG' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Recall' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eXQd1Z3v+6mqc+pMmufRtgZrlizb8ggegIYQCBgIkEuHJMAjCd28291Z
      Wenu9d66w3v97ut700Nupr50dyDdkDmEMARIgBBP4NkaLVuWZA3WPI9nqmHfP44k22BsyZKs
      4dRnraOqU1Vn167S77v3b8+SEEJgYRGmyEsdAQuLpcQSgEVYc9MFIITAMIybfVsLi6uyJDmA
      VeywWC5YLpBFWGMJwCKssQRgEdZYArAIaywBWIQ1lgAswhpLABZhjSUAi7DGEoBFWGMJwCKs
      sc3r18KkseYEbX1jrN+4k7UJHsb62qisbwU1itLsGE7XNROVnMWWkhwkaWEibWGxUMxLAEL3
      47XHcdueMuqb2iEhn6j4VNZm+BkY1+kemuDWPbfTeq6WgCmwYwJgmia6ri/IA1hYzIf55QBI
      CGEihAmEkneBhCcyitGxHoKGgkAw3fdNmsoCJEma2bewWErmJQDJ7iRamuTAB8co2rST7u4u
      bPoE9Re6sTljKF4Ty5FDB4hLz8WhSEhICCGQJAlFURbqGSwsbhjpZg+JnB4PYLPNM/OxsFgA
      rFogi7DGEoBFWGMJwCKssQRgEdZYArAIaywBWIQ1lgAswhpLABZhjSUAi7DGEoBFWGMJwCKs
      sQRgEdZYArAIaywBWIQtAjHfATEWFisDIQSj/hFcdjdBPUDLUDP1PbWWACxWP0IIGvrO8r1D
      /4BNtqObGgHdz5rYLEsAFqsbw9Sp7a7mxyf/jSHvIIkRSTxe8RQlqWVEOCKtEWEWqxMhBN1j
      Xfy88iVqu6rZk3s7JakbSI1KJzU6DWlqDLslAItVx5B3kLfr3+D9xt9RmFzMoxsfZ03suqte
      awnAYtWgGRoHm9/n9dpf4bA7eaT8j9mYvhmbYv/E31hWaLHi0Q2d+t5afnrqRcYDY9xbtI/b
      8+5CVRzXnX5n3gLwjvTR1DFMYVE+dhlMPUBTQwNqXAaZMQo1Z5twRSWTl5thNTpYLDgdIxf5
      ZdVPqOuuYnfO7dxTtI8ET+Ks552anwtkBjl9uoa0lBj6vE7K8jKYGO5lTFfpv9BEXFwEgZhk
      0iI8uFwOJCwXyGL+CCEY84/ymzO/5mDz++Qk5PFw+WOsi8tGluaWzM5vakRDR42KIyk5nYGm
      FgAiYhKZvHgBd+oaVGOIxroaxpPXUla4DnNqOkTDMDBNcz63tghTgkaAwy0HeOvs67hVN1/Y
      /DQVmduQJRldm/t0m/ObGU6xERwbpr8fTDkCXdcZ729nWHexJjUa/yRs2pzK+foGdDMLh90+
      MzOclQNYzAXDNKjvqeMXVT9icHKAe4r2cfv6u3CprpkqzRth3rVA3pFeGjtGKCrKZ2SwDwdB
      Glq7sTkiyMtOo7GxmeQ160mNjwQsF8hibggh6Bhp51fVP6Ouu5qd2Xt4oOSzxHkSFiR8qxrU
      YlkihMCrTfJqzcscaP49WXE5PFL+x2Qn5M7Zz78WlgAslh1+zc/hC/t5tfYXRDqiebDsUSrW
      bFtQw5/GskKLZYEpTAKan+bBRl6u+indY13cW/wAd+R9Co/qWbT7WjmAxZLjDU7y/NHnON72
      IXZFZWfWLh4uf4xoZ8yiryNhWaHFkiCEoH24lePtRzjZfoyOkXYEgodKHmRf6cOL4u5cDUsA
      FjcNwzQY8g5yov0oR1oP0TvWTXJUGntz76AwuYRh3zAlqWU3zfjBcoEsFpnpkVi1XVUcaT1M
      Q189iRHJbMrYwtY1O8iMXYsiL91qQZYALBYF3dBoG27l7bNvUN9TgywpbM7cxo51t7IuLhuH
      7fod1W4GlgAsFgwhBD3j3dR0nuZo2wd0jnZQmlrOjnW3UpxahsvuWuoofgxLABbzQgiBT/Nx
      quM4R1oO0TzQiFt1s2PdLnasu5X0mMyb6tPPFUsAFnNGCMFkcJLG/nN82HKIqs5TeFQPpWnl
      7MzaTV5iwZL69XPBEoDFrBiaHKRrrBPVpnK05TCVnScZ9Y1SnrGZHetupSCpKDTIfBn49XPB
      EoDFdfFpPv7f3/5ftA234LS7yE3I45as3WzO3IZH9aw4o78cywotrolf8/GTU//GxZF2VMXB
      l3c8y7a1O5e1Xz8XrBzA4qoIIWgZauaFo88R0P08se2rrIvNwr3CU/yPYlmhxccwTIODze/z
      s9MvUpxSxhe3Pk2MK3apo7UoWAKwuIIx/ygvnXiB6q5TPFr+OHty78B+jWlFVjqWC2QBhP4v
      5/rq+eHR57DbVJ7a9gw5CeuXOlqLjmWFFuiGzm/P/YbXal9m65odPLb5i0Q4Ipc6WjcFSwBh
      Tt9ELy8ef54Lg418aeuX2Zm1a9XU8MwGywUKU4QQ1PVU8/yR/0W0M4and/wpGbFr5jXDwkrE
      ssIwxK/5+XXtL3iv4bfcmX83D5V9DtXmWOpoLQnzFICg9WwVzV3DFG7eSVqMk4nBDirPNCM7
      YinNjeNU9Xli03PZkL8mzNKW5UnPWBc/PPbPdI528Mwtf8bmzK1h5fJ8lHm5QEL3Ud3QTklu
      BmebOyktysM0DUxd4/y5JnSbyfrcIlrPnSG7uAy7FLqVYRgoysroLLVaMEyDUx3H+Pfj/8qa
      2Cy+vONZ4txxEObJ0vxyACGQZBlJkoEp4w76uHChjfTcfLpbz02dD52d1poQwpoa8Sbi07z8
      vPLHHGk7xP0lD3Fn3j2oioppCqb/b+HK/ArBwuR89QnaB8fJK9uBXR/FHOuiqnWM2Ng4ctOj
      qDnXQnTSOipKckJCsArBNw0hBG3DLfzgyD/h1/w8uf2rFCWXrKquDPPFqgVapRimwf6m9/hF
      5Y8pSd3AF7Y8tWq7M8wHywpXIaP+UX5y8odUdZ7isxse47b1d67q7gzzwcoBVhHTy4H+4Mj3
      cdic/B87/oTs+NyljtayxrLCVYBu6tR0VdLY38C7DW+zfe2tPLrx80Q5o5Y6asseSwArHMM0
      eK/ht7x04nlsio0nt36VPbl3WAXdWWIJYIUihKB5oJE3zrxCTVcVNtlGaepGdmbvtoz/KgjD
      IHD2LEpCApLNTrClhWBri1UGWGkYpsGFwSbeqHuFMz21lKZt4MHSR0mLzkCRZOQVMhvDzUAY
      Bub4OHpvH5MffsjEu++BJCGpKrLHgy0pyRLASmF6iOIbdb+mpquS0tQN3Fv8ADkJ68O6K8Pl
      CCEwBgcJtrQSbGwk0NSE1tWN8PmwpaWh9fSgZmVhe/CzNPoVarvHLQEsdwzT4OJIG6/Vvkxd
      dw0FycXsK/0sWXE5K2buncVAmCbC58cYGSZwvjH0aWjAHBtDUlVs6ek48vNw5uch0jKoujjC
      //rVEWS7HUO2YbPJZKfGWAJYrky34v6m7tdUdp6kOKWMe4ruJy+pMCxTfCEE5vg4WkcHwaZm
      Ao2NaO0XMYaGsCUnY1+TiSM/HzUrC3tGOrrdQXPXEKcauqlq6qG1ewTNMEmO8/D0vZsoXJtA
      pNthCWC5YQqTrtEOXq19mZrOSnIT87i/5CFyE/Oxyav7nU2vICqEAE3DnJwk0NxM8Hwj/oYG
      9N4+0HWUxAQceXkhg8/ORomJBlXFF9Rp6hjiaH0HlY09TPiCpCdEsbUwnYqCVCa8QRKi3STF
      RjBdT2AJYJkwvWDE22ff4ET7EQqSirmn6H6KUkpXfa2OEALv0WP4K6tQc7IJtrYRvNCM3tWN
      HBONPS0NR14eam4O6tp1KNFRMCWUoTEf9W39nDzXTXVzD6YpyMuMZ0tBGhtyU0iOvfY0LpYA
      lhghBD1jXbx+5hVOtR9nbVwW+0ofpiCpCJuyOt+REAJME2N0lMCZenw1NfhOnET4/cjR0TiL
      i3AUFODIzUFJSESO8CDJcsgNEjAy7uNkQzfH6ju40D2MYQrKc1PYUZxBfmY8sZEuZHl2iYYl
      gCVCCMHFkXbeOfcmH7YeYn1CPveVPEhxStmqTPGFaWIMDaFd7MBfU4P/7Dm0zk5s8fGoOdnY
      EhPRuruJ+dznsKelXvHboGZwsX+M6qYejp/t5ELXMIkxHjbkJlORn0ZJVhKq/cYqBCwB3GSE
      EPRN9PLmmVc50nqYjJg1PFD6CEUpJauuw5rQdYIXLuCvPYO//gxaRwciEMRRUBBK5YuKsKck
      I7ndHxO9YZg0dYb8+aqmHjr7x0mNjwz58/mpZCZF43bO/31dUwDDXQ28/uZBglPfy3Z+mm3F
      GfO6YTgKQDc0JoOTTAQnePfcWxy68AfWxmXxYOnnKE4tRUJaFam+MAyM4WGCrW34a2vx19Rg
      TkxiS0nBWVyEs6wUNScHSVVD49CmnlkIwYWuYc62DZAU6+FUQzfHz3aiGQbrUmKoyE9jW1E6
      yVOF14V8V9e0Qlmx4XK7Zy6y32A2E84YpsFPTr/IibYjBPQAadHpPLvr65SmlmFX1KWO3rwx
      /f5QKl93hsDZc2gXL4Ik4cjPI+ree3GWlqIkJiDJV6+69Qd1qpp6eOHNSnqHJ3E7bJTmJPP4
      XaUUrk0kJT4CeRETh2vmAKah4/cHGB8dwhvQiY5PIS5qfsvchFsOMDg5wH9+6y8Z9g1xf8ln
      +eyG/7AiXR3T58P0epGdTvSBQfz19fhr6wg2NoIsY09NwVFcjKusFPuaNUgOx1WNXgjw+oNc
      6B7mYHU7J891ARAf7WLSF+SZfRWUZifPuhA7X65bBjC0Qb7/N98hMjOZtI338amKzHndMJwE
      MOYf4zsHvolf93NXwT1sWbNjWa6TdT30oWGGnnuOQMN5lJgYjOFh7OlpqPn5OEuKUdetwxYf
      P+PSXDUMw6ShfYBjZzs5ca6L0Qk/pdlJ7CjOpCw3mdgIJ4YpsCk3t5FvFlaokJGTxag+jn90
      YvFjtEoY84/y3YP/gF/387W9f028J2GpozRrhGFgTkzgr6nFe+IEgXMNiGAAYRi4d2wn4rbb
      kGNjkOz2a/rjumHS0TfG4dp2jp7pYHTSz9qUGB7aXcDG9anERjpRLsslbMrNLwddNwcQZoCe
      njEiXDpjQQ/pyfMbZBEOOcBEYJz/eeCb+IJevnbbX5PgSVzqKF0XIQRG/wD++np8J07gP3sO
      JSICR1Eh7i1bsKUkY05MoObmIl1jShshBKOTAWqbe9lf1UZdSx856bFsL8pga2H6dRumbjbX
      FYAe7OXVV+u45/ZkfntC8NCnS+d1w9UugInAON879I+M+kf42t6/JjEiaXlONyhEqG5+dBT/
      6Uq8x48TbG1Dsim4Nm3GtaUCNScb2XN9gxVC4A/qnGnt50BVG2da+jBMwS2lmXx6Wy4pcRHY
      bcuzAuX6OYAw2f/GLxkzVUp33UN2/OVT6Al6Ws7RcHGI0oqtxLntBL2j1Fc3kr1tE46RLg7X
      NBGbkEl5SQ4yq1cAQgjO9NTyi8ofsS4+hwdLHyHWHbfU0boCMxBEa2/DX12D1tuLOTGJ8Ptx
      lhRjS0xESYjHsX49kv3ahfTpVP5sWz+nz/fgDWgMjnpZkxRNwdoEotwOSrKTcKrL/3983Ria
      +jBnKpvZ8sBe6o42kH1v2aWTeoDuMZNtmwppbLtIXGE2kqKSGOEiIATegQlKt+0kybXyq/uu
      hRCC+t46vnfoH9idczuPlP/xsqnpEaZJsKUV37Fj+Kqq0Xt6sGdm4N6+HWdZGfa01OsaPEBH
      /xgXuoZxOewcqbtIdXMvvoDG1sJ09pavpWBNAhEudVm5N7PhugKQZBcxcXaOvvcBm+998opz
      QpjYHA5UhxtEHwB2hwunasME3DFuqo5/yFk1mp3bysHQgdDUiKtpZrj6njq+/+E/sjf3Dh4u
      fQxhCIJG8Po/XCRMrxetvR3fiZMET1eC34d97To8e3ajbt6EHHcpZ9KEgOAnx1WfapH9zq9O
      0D/qI8KlUpaTzFP3lLMhO/GKLgiapi3qcy0G1xaA0DlXVcX63fdzT4qTtoEJ4FJthmRzII33
      cujDi6TlltPX14tb0amsr0ee8JIbH4ldVdFDzX7Y7faZLq+rwQUSQnC29wz/cuy77Mm9g0c3
      Pr4kKb85Ocn4279F9njQenrx19RgDA3hyM8jet/9IRcnJeUTG6OuxoQvyAd1FzlY3UZTxxDR
      HgcxEU7+/OFtbFyfsuJS+k/immWAnrNHOdalEONr4Hijjye+8iSJnisN1zQNdN3EbrdjmgYS
      Ak03QJKw22zomoZss8/U766WMoBAcLbnDN85+HfckrWbz29+EnkOBrYgcdA0tK5uxl57De+H
      R0BRcBYX496xHVd5OXJ01KyNXggI6jot3SP8/uQFjp7txO2ws60wnTu3ZJMSF4EQYLfJq8b4
      4To5gN/np6uphb7gIJISTVf3AIm5KVdcI8sKqhrKBqdnfHZc1o1Xday+eecFgobeer5/6B/Z
      mbWb/7DpizfV+I2xMXynTjN5+DDBpmbUdWtxFBXhyFtP9CMPX7Oa8qMIIRga93GkroMD1W20
      945Skp3EV+7bxMb1qUSs8vLbNXMAQw8yMeGdmT/Y4fLgcswvi1/pOUDI+M/y3YN/z5a1O3i8
      4smbMlLLDATQ2tqY2H8A3+lKJEXBvW0rnl27sGekh1phZXnWKb4/qNPYMcS7J5qpaurB47Sz
      a8Na9pSvIyXWg3KTW2SXCqs79BwQCM73neM7B/6OLWt28PmKJxbV5xdCYPT14z11Cu+hw2g9
      PTgKC/DceguuDRuQPZ45h9c9NMHRMx3sr2plYMRLeW4Ke8rXUZ6bjGMFVFsuNOH3xPOgsb+B
      7x78ezZnbuXzFV9aFOMXQiCCQQL1Z5k8cBD/mTPIbjee3buI37EdW3LynF2coGZQ29LH709e
      oK6ln0i3yh9VZLOzOJOkWM9N63i2HLFygFnS1H+ef9z/t2zO3MaXtjy94MMVhWmidXTgPXoM
      74dHMCcncZaU4Nm7B2dR4azq6i/HNAUX+0f5oDZUk+P1a5SvT+GOzdkUr0u86Z3OlisrywqX
      ACEELYNNfPvgN9mYURHy+RfI+KdTe9+Jk0wePEigqRlbYiIRn7oLd0UFSnzcrHz6y9MwzTA5
      cbaT359u4VzbAIkxHj6zI49tRenER7sXtW/9SsTKAa5Dy2Az3/z937ApcwtPbXtmQSajEsEg
      wfZ2Jg8ewnv0KJJdxbWxHM/ePaERU3M00p7BCZ57/SSqTeF8xyCyJLE5P5U/2pxNXmb8qqq2
      XGgsAVyDlsFmvrX/f1CcWsYTW5/GYXPeUDhC1zEnJkCW8R49xuShQ2ht7Tjy8nDvuhXXhjKU
      6Ohr9qe/arhC0HBxkJd+V0NdSx9uh53H7ypjR3EGsZFOy/BngSWAT6B18AJ//4f/RklqGV/e
      8SzKDVZ1Ck1j4Hv/hO/UKSSbDSUmGvf27Xh275pz6+w0AU3nTEs/vz54luauYTbkJJMUF0F+
      Zjw7ijMsw58DlgCuQuvQBf7n/v9BQXIxT2z9Ck773FN+IQTB5guMvfEGvhMnwTSJemAfUfff
      h+x231C8gprB0foO3jraSFvvKLeUZHL31lxy0mMto79BLAF8hLahFv7hD39LfnIhX9nx7JwH
      rgvDQGtrY/TV1wicqcdRWEjkp+4CRcGRtx5pjs8thMDr1zhc285vjjQy7g1wa+ka7t2xnuTY
      iLCuwlwILAFcRttQC9/a/9/JSyrkqW3PzCnlF6ZJsLWV8dffwFddg7O0hMh7Po0jL++G3ByA
      0Qk/vz/dwrsnLqDpBrdvzuLOihwSY24sB7H4OJYAuDRL27f2/y3Z8ev5ys5nZ13gFYaB1tHB
      6CuvEqirw1GQT9T994Vqc27gGaf75rx9rIn9la3YZJm7t+Vy26Z1RLkdlquzwIS9AMb8o/zs
      9EvUdFVSkFTEl2dp/NMDTcbffBPf6cpLKX5BwQ0ZqRCCi31j/O5EMweqWkmK9fCpLbnsKV+7
      IkZWrVTC/s1Wd1ayv+k93KqHh8sfu67xCyHQLnYw9tpr+KqqcaxfT+JffuOG/HsAUwjae0d5
      7XADJ851khofyZ/sq2BTXuq8Ox5aXJ+wFYBA0DLQzM8qXyInYT3b195KcmTqJ19vCoKtLYy/
      9Ta+k6dwFBWS9I2v48jPn3P9PYRGWp1t6+fNI41UNvZQtC6Rr39uJxtyk63W2ptIWLpAQoiZ
      jm0laRv40pYvf2KBVwiB1tHB+Ou/wXvqJI7c9UTtux9Hft4Np/inG7r5zZHznG0bYFNeCvft
      zCcvM97qn7MEhJ0AQsMY6/j2gW+yfd2tfHHL01ft3iBME62tnfG338Z7/ERoeOFDD6KuXx/y
      8eeQSg+OernYP8bYZIDXDp+jd3iSrYXpPLS7kPSESKtgu4SElQCEEFR3VfLcB99mV85tPFL+
      x6gfqeef9vHH33orZPg5OUQ9cD+O/PwbSvEDms7/828HONPSj8dl545N2dy9LYe0eMvwlwNh
      IwAhBKc6jvMvH3yXO/Lv5pENj82sqSsMAwCtsytUq3PyFGp2NlEPPnDjhVtT0NQ5xIu/q6Gp
      cxCbIvOV+zazq2yNZfjLiLAQgBCCo60f8MKx57i3eB+fKX5wZhijPjTE8PMvYPr8BFtbceTm
      EnnfvTiLiuY08ORyBka9vLy/ngPVbVTkp/LgrkIiXCqJMR9fCMJiaZm3FRp6EH9Ax+V2I0tT
      fWACAewOBxICn9eH3eHCbluaAp4QJocvHODFEz9gX+nD3FO4b2YAuzAMJt//A75Tp5GcTuKf
      /VNc5RvmPPhkmkBQ53cnmnntcAMxEU7+6rFbKMlOsgq3y5j5CUDo1FeeZDygE7+2hPzMOHyj
      fVQdqSf3rt2Ii+dp7BpGVqPZvrmYm91txRQmf2h8l5+efpFHN36eP8q7e2aNXWNigtFf/BLv
      Bx/i2XUrztJSXBWbbyiFNk3BqfNd/Oz3ZxiZ8PPgrgLu2pJzw+tWWdw85iUAoQchMpnt5emc
      aWwF4nDHJJOfPYIJDPsMtmzdQeu5agKGwCZu3sxwAsH7Te/wcvVP+dyGx9mz7g50ber+PT2M
      /vO/oo+PE/0Xf44jbz1I0g3NbNY9NMnP36+nqqmHncXpPLxnW2gREWEQDBoL/VgWC8y8BCDJ
      MprfR8A/iZA+3mtSMnV8AT8BDRRZwi7fnJnhDFPnrfrXeb3uVzy57avckrU7tACzaeL94AOG
      X/wRzpJiEr/xdZSYmBu6x+iEn98cOc+bRxrJy4zn/3v6drJSYywff4UxPytUHGTEqZysaaRs
      UwXd3V1E2HSq29pQhsfYUJBDfeVJkrMKsd8kN1ggeLX2Zd6uf52ndzzLtrU7kSQJMxBg9Oe/
      YGL/fqLuv5+oe++5IV/fNAUHa9r4xftnMEzBnz64ha0F6Za7s0JZVbVAmqHxq+qf8ofG93jm
      lj+jPD3k02sdHQw+9y+YExPEPfOVUJ3+HFNqUwjOtQ3wo3dq6BwY457t69l3awEOu2Kl+iuY
      VSMAwzT48ckfcrjlAP9x19cpSd0AQuA7cZLhf/931HVZxD75BLbEuS1VJAQMjnn55R/OcLC6
      nS0FaTx6ezHpCVE30gXIYpmxKgQQ0AP86OQPOd1xgmdv/RqFycUIf4DRl19m8g/7ibzvM0R9
      5t45uTxCCLwBjfdPtfDL/fUkx0Xwpbs3ULQ20RqFtYpY8QII6gFeOPbP1HZV8Rd7/4r1iflo
      3d0M/eAF9P5+4p56EueGsjm5KdPVmj95t5bRyQCfu73E6pe/SlnRAvBpPp4/+k809Z/nz3Z/
      g6y4bPxVVQz96/PYMzOJ+8rT112+86Nxu9g3xo/eqeFMaz93bMrigV0FxEa6LHdnlbJiBTAZ
      nOBfPvgeF0fa+NrevybdncLYr15h/N33iLr3HiLv+wzyLKZmn17vyh/QeedkM7873kTh2kQe
      u6OEnPTltcaXxcKzIgUwGZzg+4e+Rd94L1/b+1ckB50MPf88WkcnsU8+gWvTxlkPRG/pHua/
      vXQIX0An2uPgC58qoyI/bdmuamixsKw4p3bEN8z3D32LicA4f3n7/01kUw+9P3geW1oqyf/1
      v8yplmfcG+Tn75+hf8RLQrSbv3n6NuKjrBkXwokVkwMIBOP+cb61/7/j13187dZv4HjvCGNv
      vUXknXcS9cA+ZJdr1nFo6xnle78+ji+g8/DeQrLTYlmbfGOtwhYrlxUjgP6JXr594O9QFZU/
      LXoC80evoHV0EPvUE7grKmYdjm6Y7K9q5YU3K9mcn8Yz+zbjca7uZYAsPpllL4CA7qd5oJEX
      TzyP2+7mq3GfxvjxKyixMcR9+WlsaWmzruL0+jWef7OSI2cu8oW7yvijimzL1w9zlrUATGHy
      T4e+xZG2D8iOXMMzgQrM3+0n4ra9RD/6yKxqeabv2dQ5zPd/fRyAZx/cQm56nNWFwWL5F4I9
      QYmCHthTNYqY+IC4Lz+Ne9vWWdfymKbgvZMXeOmdGjblpfDUPRuJjrixac4tVh/LWgCSgE9X
      GgROOVAzEkj4T3+OLT191in36KSff3+7mhMNXXz+zlLu2Jy9ZCPTLJYny1oASBJqQiKaw0nk
      fZ/BnpExq59d4fII+E9f3E1eZvwiR9ZiJbKsywAQWk7ImJhEiYmeldtjmCbvnrzAT96tZVNe
      Kk9+upwojzWprMXVWfYCmAsjE35e+l01x8528vk7S/nUllyr56bFNVkVAhBC0NI9wrdfPoZh
      mvzFw9utVVMsZsXyLgPMAt0weedEMz9+t4YdxZk88elyIlxWw5bF7FjRAhj3BnnhrUqOn+3k
      8bs2cFdFNoo1B4/FHFiRLtD08qDfe+U4qk3hP352K+tSrBkZLObOissBDMPknZPN/OTdOrYW
      pvHFuzcQ7bEatixujHkKQDDY1cK51gHKKjYTqSrogQlqKquJyshnTaTBh1XniIrPoLwkh/k6
      J6OTfn7wm0qqm3r44t1l3L4xy3J5LObF/FwgI8Dpmgbys1No6ppkQ2EW3c216DE5DDXXExvj
      Qc3MIeWyQumNukBn2wZ47rWT2BSJP9m3xarlsVgQ5jc1omlgd3twuaORxRAApj5m6kgAAAt3
      SURBVCkREeHCcNsxXQ4ajn1AsyeRbZuLEcbcp0Y8VNPOOydbuNg/xrbCdL5wZwkRLvWGpjG0
      sPgo85saUVExx/qprh3AFZfNyMgwLreD8zXVaIZJXrxCYlISI+N+TCRU+9ymRjRMk9+fbuNc
      +yB7ytfyfz60FeUG19y1sLga864F0gJeRsYDxMfHEvB7cTocjAwP4YiIxakYDA6N4o6KmRl0
      MhcXSAhBdXMvH9Ze5IFdBaQlRM4nqhYWH2NFVoNaWCwUlj9hEdZYArAIaywBWIQ1lgAswhpL
      ABZhjSUAi7DGEoBFWGMJwCKssQRgERaYukF/czcTA2MIITANEz2grbzxABarE0M3CE76cV5v
      dm4BuqZjBDT0oI4e1NAD01sNI6ijT5+b/h7U8I95GWjpxe5UcUa5MQ0TYZqWACwWB2EKTMPA
      0AxMw8DUzZmtHtTR/EF0v4YWCKL5g3TXtTPcOUhKfjqyTUEPahgB/TIjDxm1oelIkoSsKMiK
      jKTIyJd9JEVGsSnYVBs2hx1FtWNz2HDFRuDoH8MTF0l66drQcVWxBGBxbYRpogU0OqpaGGrr
      I2NjNrIsoQWmjNKvofm1kEEHgmj+qWMBDVPT0TUDUw99DM3A0A1kRcKm2rE57dhUO3anHf+4
      F4RACIEzyj1jwDbVNmPENjX0XbYpyDY5JIKrbCVJ+thYESEE/nEfdocdm+PSYolWZ7hVgGma
      TPSPorqdOCKcCMPENExMM7Sd/m5oeshYfcGpFDg4Y7wzH5922bkgelBHksDQDIQpsLtUbKoN
      SQ6luDanHbtDDW2dKnZnyMDsDht2lx27S8XutGF32EIG77Ch2GRAAGJq7TWBf7CO0fZjJJU+
      gmyPmDkfsk4x9ZnaF5d/N0PfhYnAmDpnhL4Lc+q8iamP4u9+BcW9DjVm+1Q4piWAm4IQCKEj
      yXNbmV4IgaEZoZT2Ix8tcMmQJwfH6axtweFx4YmPxND0UGob1EP+sqZjBHUQJopNn/poyIqG
      YtOw2XRsqoTNqWB3SKF9FWwOE5vdRLGZjHaPMj7kZE2piSvag2IDWWHK6C59hAgZX8jwjJAR
      XmaIYE5dc8lQwcTURkFoILtC70mYXBLB1L4QzBg8U/sASIAMkhzan9pKkjx1XArFxZgEFGQ1
      FlBAkiwXKGScQUBBkj/5dYiZl3/5P1Nc9g8XoZdsBhFmAFMPIPQgph6g73wj/c09rNmci2xz
      oQUk9KCMHpDRghKa35xKfQNTKbKBHjDRAiEXJBS+wSWDMZBkA7tdR1E1JEkgEY1kjuBxVmKL
      1LHZdWyqhs2uhfbtGrLNRJJC9iDJYmqrIMkykmQDKWTVM/uSbWpfISKyFzM4jD1qA5LdiSQp
      IClIUx+mrpMk+bJ95bJwQtfPHEcB2RZ675KCNl6LPlaNM+UBZDUpZMRTBixdth/aKiEXR1II
      Gf+0uyNN7V7u/kztmwECg++juNZgjyydORdWOYAQAswgwvQhDC/C8GFqg/i7fo5kj8MevRlM
      P8L0I4zQlql90wiiB02MoEAPmuhBgaGFjFQLgOaX0AISWsCGrqkYmh1dt2NodgI+N0IoSBIo
      qoJNnS6c2VFUW6gwpprYVYHNAXaHgt2pTLkTCoodbKqEYpew2SUUlVCBb8rQhKkx0nIEZ0wK
      7uTNM8cvGeGUwUnylYY4nTrOAlMbxgz0o3hypgx4dbDsBSDMIEIbRVLjAOkq2amO0CcQ+jim
      PobQx6f2xxHG+NT3sdB3fQJhaAjTxDQNhGHgHXfSUleK6vIRkzCAFrShB1V0TUULOtCDoa2h
      2xGEDEmIS1ubw47qcmB3O1BdDlS3A7tbRXU7UV0qqtvBeN8Ig6195O0txRMXiaSEajGm/WhJ
      /nih7Ubeq/Sx1M/ieixrAQhhMtnybYID74RSZ0lB6JMIYxLTmEDok2AGQFaRZCcCRyjlDUro
      moyuu9GCkQR9DgJeiYDXRAt60DUPQb+KFpCQZBlTN5EUmcikaGyqHdWlhgz6cqN2qaFC3vR2
      qsAnW0ssrWiWfRlgchh6m/NJL5SRHakE/DaCPhsBn42gz07QK+Of1AlM6mh+MA0bpiFhaCG/
      XPU4cUa6cEa68aS7pvZDH0ekC8Wm0Hu+E1eUh5TCDGSbYk23EkYs7xzANPnwh+8xcKEHANmm
      XFEfbHc7ZozbEenCGeHCERkyeEeEC9VtrQtgcW2Wdw4gSSTmpuIdniBvbymxGQmhxpGpBhJZ
      USyX12JezC8HEAb1p4/SNTRJVul2clKiGOtv40RVI7aoJErSXVSea8Mdn8H28gJkaa6FYEFw
      bIDxrkZisspRVNfMcXHpkuk/l22ZqivmyuPiI9cgEIbOWPMx7J443GkFl64XH/ntJ4U5i+P+
      via8HXVEF9+BrHquE6+5HzODk4xUvY4zMQv3uq1cyUfiJj7p3LWfw3vhCL7OOmIqHkV2RV12
      vbgUr5n6+cv2p8MUVzt+6be+1mNMtpwgtuIRZE/8pWs+8XfTbQTXOH/ZvukbYeTkz3Ek5uDJ
      2zvzjPMSgNC81DZ1UZybTn1jG6VFBXQ21uLMLGH0fDWDskJZQTGt52pYU7ABO8bMb3U9NEuc
      JEkoijIjjGkURUFCcOiH/z8tTRfISE/C7fHMvDRxeevgzCNc9s/42Pern9M1jYvdwzhsEmmp
      l714+MTwxRzCB8HgiI8Rn0R6jITTab/MUD4a9tX3xeXXXdEKGrpO0wUdEw48ik5ShP7xcGf+
      Ydd4rpnNx+MvgIGAmwndSZpzBFXWWWiGgh5GdRdpzlEc8sLP+qeZCp2BGDxykETH+Mzx+blA
      koShaxh6MNTgASAJNE0nqAtsDhNN19ENCVkGRQoZummaqKp6WTAhP0ZRlCuOCWGCIwpJtqGp
      ceiehV/oTg/4Ef31mA4nemzewpcZhMA02pC0AYyE9ZiR0QsbPmD6vEjNZzEjohBrc2ddtz9r
      hEBcvABjI4g1e8ATsfDhd7UhDQ1gZtwCi/COxMw7SobL3tE8C8GCjsY6mrpGKN60DX1igLhI
      B6dO1eJJzSY/SeV49TkS1uRTmJWKBHNfKd47wUjPRRLXrkdWFr7IIoTJcHcHqstNRGzCgocP
      4J8cZ2ywj4T0daFyywIjTJPB7ou4I6NwR8UuePgAvvFRJkaGiE9fi7wI01OG3lE/CelrF+Ud
      mabJUHc77sgY3FExM8eXdS2QhcViY40IswhrLAFYhDWWACzCGksAFmGNJQCLsGZJqmJM05xp
      CLOwWEqWRACyLF/R6HU9TNOcU92zrutzqmadXrZpLtebprmsnmGu4U+v0TbX3yynZ1iI8Jes
      Mn4uBjcXQ7uR8Ofa+jstmOX0DHMNP9TSPjfhL7dnWIjwl6QhDOZudHO9x2KHD9YzzOYeyz38
      my6AuSCEycXmM4yJeErWpy3KPcYHOqk524wzPoPNRdkLHr6pB6k9fZzRgEzZlm3EOBdnBFln
      82mGyaQkJ3HhAxcBTn5wDK+ksmHTFqJdC/wMwqS1oZaLg17Kt+wgUr3+T+Z4A9rO1dDaO4Jh
      j2Tvzk0ztT/LvBZIIjE9FVk3rn/pDeKIiGPL9u1IwYlFCV9SbBSUbWZtvJ2R8cVZ21ibHGIg
      oBMY9i1K+CLgQ4lLZ/vWCqIWQcCab5wBn8yWik14bIuRHkusLdjArq1FJMQnX2H0y1oAkiTh
      crkWdcyLJOk0n2skJ79wkcKXGe5to98r4VyMEpcwqa+pQZJkBocH0We3/vjcbqE4sQUGOfLh
      YbqHFl5kpqkz1t/NyeNHaOocXvDwQwjOn+9k/fr0K44uawEI06D62IfU1JziQtfivJi2ulNc
      6Omjvr6RxchntMAora19jI8N4/UvRg4gkZmbT2yEIzSGYhFSC0MP4vP60Y3QtIYLjeqMJCbK
      iaab2Bepk6Q+OYTuisP1EYv/3wHKeZmo3I1XAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
