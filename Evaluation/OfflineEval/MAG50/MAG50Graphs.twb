<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook original-version='18.1' source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='map+ (acl_metrics)' inline='true' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mag50_metrics' name='excel-direct.0db8dcy16pht3217cdcbu1tqrivk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Coursework/Thesis/OfflineEval/MAG50/mag50_metrics.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[map].[k]' />
              <expression op='[recall].[k]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[map].[k]' />
                <expression op='[ndcg].[k]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[map].[k]' />
                  <expression op='[mrr].[k]' />
                </expression>
              </clause>
              <relation connection='excel-direct.0db8dcy16pht3217cdcbu1tqrivk' name='map' table='[map$]' type='table'>
                <columns gridOrigin='A1:H19:no:A1:H19:0' header='yes' outcome='6'>
                  <column datatype='integer' name='k' ordinal='0' />
                  <column datatype='real' name='bm25' ordinal='1' />
                  <column datatype='real' name='hd2vOUT' ordinal='2' />
                  <column datatype='real' name='hybrid' ordinal='3' />
                  <column datatype='real' name='hd2vINOUT' ordinal='4' />
                  <column datatype='real' name='lda' ordinal='5' />
                  <column datatype='real' name='paper2vec' ordinal='6' />
                  <column datatype='real' name='doc2vec' ordinal='7' />
                </columns>
              </relation>
              <relation connection='excel-direct.0db8dcy16pht3217cdcbu1tqrivk' name='mrr' table='[mrr$]' type='table'>
                <columns gridOrigin='A1:H19:no:A1:H19:0' header='yes' outcome='6'>
                  <column datatype='integer' name='k' ordinal='0' />
                  <column datatype='real' name='bm25' ordinal='1' />
                  <column datatype='real' name='hd2vOUT' ordinal='2' />
                  <column datatype='real' name='hybrid' ordinal='3' />
                  <column datatype='real' name='hd2vINOUT' ordinal='4' />
                  <column datatype='real' name='lda' ordinal='5' />
                  <column datatype='real' name='paper2vec' ordinal='6' />
                  <column datatype='real' name='doc2vec' ordinal='7' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.0db8dcy16pht3217cdcbu1tqrivk' name='ndcg' table='[ndcg$]' type='table'>
              <columns gridOrigin='A1:H19:no:A1:H19:0' header='yes' outcome='6'>
                <column datatype='integer' name='k' ordinal='0' />
                <column datatype='real' name='bm25' ordinal='1' />
                <column datatype='real' name='hd2vOUT' ordinal='2' />
                <column datatype='real' name='hybrid' ordinal='3' />
                <column datatype='real' name='hd2vINOUT' ordinal='4' />
                <column datatype='real' name='lda' ordinal='5' />
                <column datatype='real' name='paper2vec' ordinal='6' />
                <column datatype='real' name='doc2vec' ordinal='7' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0db8dcy16pht3217cdcbu1tqrivk' name='recall' table='[recall$]' type='table'>
            <columns gridOrigin='A1:H19:no:A1:H19:0' header='yes' outcome='6'>
              <column datatype='integer' name='k' ordinal='0' />
              <column datatype='real' name='bm25' ordinal='1' />
              <column datatype='real' name='hd2vOUT' ordinal='2' />
              <column datatype='real' name='hybrid' ordinal='3' />
              <column datatype='real' name='hd2vINOUT' ordinal='4' />
              <column datatype='real' name='lda' ordinal='5' />
              <column datatype='real' name='paper2vec' ordinal='6' />
              <column datatype='real' name='doc2vec' ordinal='7' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[bm25 (mrr)]' value='[mrr].[bm25]' />
          <map key='[bm25 (ndcg)]' value='[ndcg].[bm25]' />
          <map key='[bm25 (recall)]' value='[recall].[bm25]' />
          <map key='[bm25]' value='[map].[bm25]' />
          <map key='[doc2vec (mrr)]' value='[mrr].[doc2vec]' />
          <map key='[doc2vec (ndcg)]' value='[ndcg].[doc2vec]' />
          <map key='[doc2vec (recall)]' value='[recall].[doc2vec]' />
          <map key='[doc2vec]' value='[map].[doc2vec]' />
          <map key='[hd2vINOUT (mrr)]' value='[mrr].[hd2vINOUT]' />
          <map key='[hd2vINOUT (ndcg)]' value='[ndcg].[hd2vINOUT]' />
          <map key='[hd2vINOUT (recall)]' value='[recall].[hd2vINOUT]' />
          <map key='[hd2vINOUT]' value='[map].[hd2vINOUT]' />
          <map key='[hd2vOUT (mrr)]' value='[mrr].[hd2vOUT]' />
          <map key='[hd2vOUT (ndcg)]' value='[ndcg].[hd2vOUT]' />
          <map key='[hd2vOUT (recall)]' value='[recall].[hd2vOUT]' />
          <map key='[hd2vOUT]' value='[map].[hd2vOUT]' />
          <map key='[hybrid (mrr)]' value='[mrr].[hybrid]' />
          <map key='[hybrid (ndcg)]' value='[ndcg].[hybrid]' />
          <map key='[hybrid (recall)]' value='[recall].[hybrid]' />
          <map key='[hybrid]' value='[map].[hybrid]' />
          <map key='[k (mrr)]' value='[mrr].[k]' />
          <map key='[k (ndcg)]' value='[ndcg].[k]' />
          <map key='[k (recall)]' value='[recall].[k]' />
          <map key='[k]' value='[map].[k]' />
          <map key='[lda (mrr)]' value='[mrr].[lda]' />
          <map key='[lda (ndcg)]' value='[ndcg].[lda]' />
          <map key='[lda (recall)]' value='[recall].[lda]' />
          <map key='[lda]' value='[map].[lda]' />
          <map key='[paper2vec (mrr)]' value='[mrr].[paper2vec]' />
          <map key='[paper2vec (ndcg)]' value='[ndcg].[paper2vec]' />
          <map key='[paper2vec (recall)]' value='[recall].[paper2vec]' />
          <map key='[paper2vec]' value='[map].[paper2vec]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lda</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lda]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>lda</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[map]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H19:no:A1:H19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25 (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lda</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lda (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>lda</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mrr]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H19:no:A1:H19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25 (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lda</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lda (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>lda</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ndcg]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H19:no:A1:H19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25 (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lda</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lda (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>lda</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[recall]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H19:no:A1:H19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;' value='BM25' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;' value='Doc2Vec' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;' value='hd2vINOUT' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;' value='hd2vOUT' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;' value='Hybrid' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;' value='LDA' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (recall):qk]&quot;' value='Ldamallet' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;' value='Paper2Vec' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Bm25 (Mrr)' datatype='real' name='[bm25 (mrr)]' role='measure' type='quantitative' />
      <column caption='Bm25 (Ndcg)' datatype='real' name='[bm25 (ndcg)]' role='measure' type='quantitative' />
      <column caption='Bm25 (Recall)' datatype='real' name='[bm25 (recall)]' role='measure' type='quantitative' />
      <column caption='Bm25' datatype='real' name='[bm25]' role='measure' type='quantitative' />
      <column caption='Doc2Vec (Mrr)' datatype='real' name='[doc2vec (mrr)]' role='measure' type='quantitative' />
      <column caption='Doc2Vec (Ndcg)' datatype='real' name='[doc2vec (ndcg)]' role='measure' type='quantitative' />
      <column caption='Doc2Vec (Recall)' datatype='real' name='[doc2vec (recall)]' role='measure' type='quantitative' />
      <column caption='Doc2Vec' datatype='real' name='[doc2vec]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT (mrr)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT (ndcg)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT (recall)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT (mrr)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT (ndcg)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT (recall)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT]' role='measure' type='quantitative' />
      <column caption='Hybrid (Mrr)' datatype='real' name='[hybrid (mrr)]' role='measure' type='quantitative' />
      <column caption='Hybrid (Ndcg)' datatype='real' name='[hybrid (ndcg)]' role='measure' type='quantitative' />
      <column caption='Hybrid (Recall)' datatype='real' name='[hybrid (recall)]' role='measure' type='quantitative' />
      <column caption='Hybrid' datatype='real' name='[hybrid]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='K (Mrr)' datatype='integer' name='[k (mrr)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='K (Ndcg)' datatype='integer' name='[k (ndcg)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='K (Recall)' datatype='integer' name='[k (recall)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal' />
      <column caption='Lda (Mrr)' datatype='real' name='[lda (mrr)]' role='measure' type='quantitative' />
      <column caption='Lda (Ndcg)' datatype='real' name='[lda (ndcg)]' role='measure' type='quantitative' />
      <column caption='Lda (Recall)' datatype='real' name='[lda (recall)]' role='measure' type='quantitative' />
      <column caption='Lda' datatype='real' name='[lda]' role='measure' type='quantitative' />
      <column caption='Paper2Vec (Mrr)' datatype='real' name='[paper2vec (mrr)]' role='measure' type='quantitative' />
      <column caption='Paper2Vec (Ndcg)' datatype='real' name='[paper2vec (ndcg)]' role='measure' type='quantitative' />
      <column caption='Paper2Vec (Recall)' datatype='real' name='[paper2vec (recall)]' role='measure' type='quantitative' />
      <column caption='Paper2Vec' datatype='real' name='[paper2vec]' role='measure' type='quantitative' />
      <column-instance column='[bm25 (mrr)]' derivation='Sum' name='[sum:bm25 (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[bm25 (ndcg)]' derivation='Sum' name='[sum:bm25 (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[bm25 (recall)]' derivation='Sum' name='[sum:bm25 (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[bm25]' derivation='Sum' name='[sum:bm25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec (mrr)]' derivation='Sum' name='[sum:doc2vec (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec (ndcg)]' derivation='Sum' name='[sum:doc2vec (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec (recall)]' derivation='Sum' name='[sum:doc2vec (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec]' derivation='Sum' name='[sum:doc2vec:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT (mrr)]' derivation='Sum' name='[sum:hd2vINOUT (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT (ndcg)]' derivation='Sum' name='[sum:hd2vINOUT (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT (recall)]' derivation='Sum' name='[sum:hd2vINOUT (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT]' derivation='Sum' name='[sum:hd2vINOUT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT (mrr)]' derivation='Sum' name='[sum:hd2vOUT (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT (ndcg)]' derivation='Sum' name='[sum:hd2vOUT (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT (recall)]' derivation='Sum' name='[sum:hd2vOUT (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT]' derivation='Sum' name='[sum:hd2vOUT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid (mrr)]' derivation='Sum' name='[sum:hybrid (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid (ndcg)]' derivation='Sum' name='[sum:hybrid (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid (recall)]' derivation='Sum' name='[sum:hybrid (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid]' derivation='Sum' name='[sum:hybrid:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lda (mrr)]' derivation='Sum' name='[sum:lda (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[lda (ndcg)]' derivation='Sum' name='[sum:lda (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[lda (recall)]' derivation='Sum' name='[sum:lda (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[lda]' derivation='Sum' name='[sum:lda:qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec (mrr)]' derivation='Sum' name='[sum:paper2vec (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec (ndcg)]' derivation='Sum' name='[sum:paper2vec (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec (recall)]' derivation='Sum' name='[sum:paper2vec (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec]' derivation='Sum' name='[sum:paper2vec:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.592068' measure-ordering='alphabetic' measure-percentage='0.407932' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (mrr):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (mrr):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (mrr):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (recall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (mrr):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (mrr):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (mrr):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (mrr):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (mrr):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='High value MAP'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25' datatype='real' name='[bm25]' role='measure' type='quantitative' />
            <column caption='Doc2Vec' datatype='real' name='[doc2vec]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT]' role='measure' type='quantitative' />
            <column caption='Hybrid' datatype='real' name='[hybrid]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal' />
            <column caption='Lda' datatype='real' name='[lda]' role='measure' type='quantitative' />
            <column-instance column='[k]' derivation='None' name='[none:k:ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec' datatype='real' name='[paper2vec]' role='measure' type='quantitative' />
            <column-instance column='[bm25]' derivation='Sum' name='[sum:bm25:qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec]' derivation='Sum' name='[sum:doc2vec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT]' derivation='Sum' name='[sum:hd2vINOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT]' derivation='Sum' name='[sum:hd2vOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid]' derivation='Sum' name='[sum:hybrid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda]' derivation='Sum' name='[sum:lda:qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec]' derivation='Sum' name='[sum:paper2vec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:k:ok]' member='10' />
              <groupfilter function='member' level='[none:k:ok]' member='20' />
              <groupfilter function='member' level='[none:k:ok]' member='30' />
              <groupfilter function='member' level='[none:k:ok]' member='40' />
              <groupfilter function='member' level='[none:k:ok]' member='50' />
              <groupfilter function='member' level='[none:k:ok]' member='100' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='MAP' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</cols>
      </table>
      <simple-id uuid='{5655C8B9-CEC9-4A52-B75D-AF44EF23F03E}' />
    </worksheet>
    <worksheet name='High value Recall'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Recall@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Recall)' datatype='real' name='[bm25 (recall)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Recall)' datatype='real' name='[doc2vec (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (recall)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Recall)' datatype='real' name='[hybrid (recall)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Recall)' datatype='integer' name='[k (recall)]' role='dimension' type='ordinal' />
            <column caption='Lda (Recall)' datatype='real' name='[lda (recall)]' role='measure' type='quantitative' />
            <column-instance column='[k (recall)]' derivation='None' name='[none:k (recall):ok]' pivot='key' type='ordinal' />
            <column-instance column='[k (recall)]' derivation='None' name='[none:k (recall):qk]' pivot='key' type='quantitative' />
            <column caption='Paper2Vec (Recall)' datatype='real' name='[paper2vec (recall)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (recall)]' derivation='Sum' name='[sum:bm25 (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (recall)]' derivation='Sum' name='[sum:doc2vec (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (recall)]' derivation='Sum' name='[sum:hd2vINOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (recall)]' derivation='Sum' name='[sum:hd2vOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (recall)]' derivation='Sum' name='[sum:hybrid (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda (recall)]' derivation='Sum' name='[sum:lda (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (recall)]' derivation='Sum' name='[sum:paper2vec (recall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:k (recall):ok]' member='10' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='20' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='30' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='40' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='50' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='100' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='Recall' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):qk]</cols>
      </table>
      <simple-id uuid='{728FE13B-C33C-43B1-B399-EF81DAB52CF7}' />
    </worksheet>
    <worksheet name='MAP'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='18'>MAP@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25' datatype='real' name='[bm25]' role='measure' type='quantitative' />
            <column caption='Doc2Vec' datatype='real' name='[doc2vec]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT]' role='measure' type='quantitative' />
            <column caption='Hybrid' datatype='real' name='[hybrid]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal' />
            <column caption='Lda' datatype='real' name='[lda]' role='measure' type='quantitative' />
            <column-instance column='[k]' derivation='None' name='[none:k:ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec' datatype='real' name='[paper2vec]' role='measure' type='quantitative' />
            <column-instance column='[bm25]' derivation='Sum' name='[sum:bm25:qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec]' derivation='Sum' name='[sum:doc2vec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT]' derivation='Sum' name='[sum:hd2vINOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT]' derivation='Sum' name='[sum:hd2vOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid]' derivation='Sum' name='[sum:hybrid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda]' derivation='Sum' name='[sum:lda:qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec]' derivation='Sum' name='[sum:paper2vec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]'>
            <groupfilter from='1' function='range' level='[none:k:ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='MAP' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</cols>
      </table>
      <simple-id uuid='{41C82915-1299-4B14-998C-E916B4EBCFC8}' />
    </worksheet>
    <worksheet name='MRR'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='18'>MRR@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Mrr)' datatype='real' name='[bm25 (mrr)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Mrr)' datatype='real' name='[doc2vec (mrr)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (mrr)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (mrr)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Mrr)' datatype='real' name='[hybrid (mrr)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Mrr)' datatype='integer' name='[k (mrr)]' role='dimension' type='ordinal' />
            <column caption='Lda (Mrr)' datatype='real' name='[lda (mrr)]' role='measure' type='quantitative' />
            <column-instance column='[k (mrr)]' derivation='None' name='[none:k (mrr):ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec (Mrr)' datatype='real' name='[paper2vec (mrr)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (mrr)]' derivation='Sum' name='[sum:bm25 (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (mrr)]' derivation='Sum' name='[sum:doc2vec (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (mrr)]' derivation='Sum' name='[sum:hd2vINOUT (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (mrr)]' derivation='Sum' name='[sum:hd2vOUT (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (mrr)]' derivation='Sum' name='[sum:hybrid (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda (mrr)]' derivation='Sum' name='[sum:lda (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (mrr)]' derivation='Sum' name='[sum:paper2vec (mrr):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (mrr):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]'>
            <groupfilter from='1' function='range' level='[none:k (mrr):ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='MRR' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]</cols>
      </table>
      <simple-id uuid='{258031A8-E651-405E-B3D4-716C98C5D783}' />
    </worksheet>
    <worksheet name='NDCG'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='18'>NDCG@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Ndcg)' datatype='real' name='[bm25 (ndcg)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Ndcg)' datatype='real' name='[doc2vec (ndcg)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (ndcg)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (ndcg)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Ndcg)' datatype='real' name='[hybrid (ndcg)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Ndcg)' datatype='integer' name='[k (ndcg)]' role='dimension' type='ordinal' />
            <column caption='Lda (Ndcg)' datatype='real' name='[lda (ndcg)]' role='measure' type='quantitative' />
            <column-instance column='[k (ndcg)]' derivation='None' name='[none:k (ndcg):ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec (Ndcg)' datatype='real' name='[paper2vec (ndcg)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (ndcg)]' derivation='Sum' name='[sum:bm25 (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (ndcg)]' derivation='Sum' name='[sum:doc2vec (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (ndcg)]' derivation='Sum' name='[sum:hd2vINOUT (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (ndcg)]' derivation='Sum' name='[sum:hd2vOUT (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (ndcg)]' derivation='Sum' name='[sum:hybrid (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda (ndcg)]' derivation='Sum' name='[sum:lda (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (ndcg)]' derivation='Sum' name='[sum:paper2vec (ndcg):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (ndcg):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]'>
            <groupfilter from='1' function='range' level='[none:k (ndcg):ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='NDCG' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]</cols>
      </table>
      <simple-id uuid='{60BAAFFD-9277-44E5-A061-4A11AEC523B9}' />
    </worksheet>
    <worksheet name='Recall'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman' fontsize='18'>Recall@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Recall)' datatype='real' name='[bm25 (recall)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Recall)' datatype='real' name='[doc2vec (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (recall)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Recall)' datatype='real' name='[hybrid (recall)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Recall)' datatype='integer' name='[k (recall)]' role='dimension' type='ordinal' />
            <column caption='Lda (Recall)' datatype='real' name='[lda (recall)]' role='measure' type='quantitative' />
            <column-instance column='[k (recall)]' derivation='None' name='[none:k (recall):ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec (Recall)' datatype='real' name='[paper2vec (recall)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (recall)]' derivation='Sum' name='[sum:bm25 (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (recall)]' derivation='Sum' name='[sum:doc2vec (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (recall)]' derivation='Sum' name='[sum:hd2vINOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (recall)]' derivation='Sum' name='[sum:hd2vOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (recall)]' derivation='Sum' name='[sum:hybrid (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[lda (recall)]' derivation='Sum' name='[sum:lda (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (recall)]' derivation='Sum' name='[sum:paper2vec (recall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;</bucket>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;</bucket>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;</bucket>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;</bucket>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;</bucket>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;</bucket>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]'>
            <groupfilter from='1' function='range' level='[none:k (recall):ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='Recall' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' value='136' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</cols>
      </table>
      <simple-id uuid='{F00F0ED4-5094-41E9-9446-FA36A49AB6B4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='88605' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='88605' id='5' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='44303' id='3' name='Recall' w='49200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44303' id='9' name='MRR' w='49200' x='50000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44302' id='10' name='MAP' w='49200' x='800' y='45303'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44302' id='11' name='NDCG' w='49200' x='50000' y='45303'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='9395' id='12' type='layout-flow' w='98400' x='800' y='89605'>
            <zone h='4375' id='8' leg-item-layout='horz' name='Recall' pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' show-title='false' type='color' w='98400' x='800' y='89605'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='26' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='44303' id='3' is-fixed='true' name='Recall' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4375' id='8' leg-item-layout='horz' name='Recall' pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' show-title='false' type='color' w='98400' x='800' y='89605'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44303' id='9' is-fixed='true' name='MRR' w='49200' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44302' id='10' is-fixed='true' name='MAP' w='49200' x='800' y='45303'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44302' id='11' is-fixed='true' name='NDCG' w='49200' x='50000' y='45303'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0B046EC0-DDC6-4381-A0CC-2B06166E247D}' />
    </dashboard>
    <dashboard name='Dashboard 1 (2)'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='12' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5750' id='8' leg-item-layout='horz' name='Recall' pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='33125' id='9' name='MRR' w='41000' x='50500' y='13500' />
        <zone h='34750' id='3' name='Recall' w='41100' x='5100' y='12125' />
        <zone h='32000' id='10' name='MAP' w='42800' x='29900' y='50125' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='26' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='278' h='34750' id='3' is-fixed='true' name='Recall' w='41100' x='5100' y='12125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5750' id='8' leg-item-layout='horz' name='Recall' pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='265' h='33125' id='9' is-fixed='true' name='MRR' w='41000' x='50500' y='13500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='256' h='32000' id='10' is-fixed='true' name='MAP' w='42800' x='29900' y='50125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{41B8C9B3-26A6-4164-B54A-7A08D3F44C5E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='MAP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE1AD117-502F-4F45-B5C2-4CDCF5C5477C}' />
    </window>
    <window class='worksheet' name='High value MAP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{60BABB40-9960-4112-9321-97B28E7B44F8}' />
    </window>
    <window class='worksheet' name='MRR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AA50CC9-8D96-4EFF-91AD-EA35F198D8C1}' />
    </window>
    <window class='worksheet' name='Recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FDBFCA76-4A4E-43E7-BE4A-930952F7A6BF}' />
    </window>
    <window class='worksheet' name='High value Recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F1E2AE7-CB73-41DB-B8A1-8C1EC09B4440}' />
    </window>
    <window class='worksheet' name='NDCG'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{040FF1B5-8143-4244-8521-DD5825CFCB72}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='MAP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MRR'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='NDCG'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Recall'>
          <zoom type='entire-view' />
          <highlight field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8AA6632A-4CA1-4462-8319-C99E3EE5A28E}' />
    </window>
    <window class='dashboard' name='Dashboard 1 (2)'>
      <viewpoints>
        <viewpoint name='MAP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MRR'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Recall'>
          <zoom type='entire-view' />
          <highlight field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{49FB9CF2-4533-45EE-ADBB-A2141492CD35}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      E43/BzksMLpmVX5TAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1 (2)' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='High value MAP' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2d2ZMcx53fP5l19D33AHPgPglSIAiS4KklRR1eSbvWhh0r7cqKlV+8doQf
      /LiO8IMjNsJ/gSP8Yj841n5Yhw89aNe7WksUxUMiAYEkQPDCjRnMgbl7ps+6Mv1Q1T3dAAgM
      oAYGw85PTEVm/urInK7fNyvryEyhtdYYDF2IEELIzS6EwbCZGAEYuppNFYDWGtMCM2wmmyoA
      pRRKqc0sgqHLMU0gQ1djBGDoaowADF1NRwSgVcilj05x+uMrRMlNbRRUOXPybU5+dJFIKa5+
      cpqTZy8QKnPTa3h06IgAqssTFO1R+qNlZopVAOqlNcYee5ZBr8js0lVuBEOMulUmF1Y7kaXB
      0BHsThxE1cr0jRxl3K9zpRZCP+T6t+HPXaeSH2TUK1EaP8p2IbhYDYiiCKVU8zFoFEWdKIbB
      cM90RAAilaW0tMBCUCE3YgFQXp5lrmLxlcO7iFavUpq9wbJTIlPowbIsLMtqOr5lWZ0ohqGL
      0VqjtMKS9+ZLHRFAdnA3zsQprluDnOjNMTk5QVaVuHpxhutXLvH0yy9SqL3P5WoPJ/b2diJL
      wxZAa02kImzrd3czrRVBFBIonyAKCKJGGOCFdf7m45+wUlvmX730b9jZv3vDxxWb+TGcuQI8
      WBqnVhM3NTWaudIsH01/yPEdJ+jPDsRrdWMrbk0n+0UqIlIhYSPUcRipiDAJm+t1SBgFvHX5
      Dc7Pf8q3Dn+H3nQffuK4fuTfFAYEYbu9EQ+iAD/0CVXQ8p8JhEjCxFIP6wD8+MS/4NtH/nBD
      v48QQhgBPAIorTgz9T71sMbR0acQQqJ0fJ8U6QilFZFaD4PIx4s8/NCjHtTwQq+ZjkO/GQ8i
      Hz8MCJSPH/pcX7nGmrdGzs3Tl+mPHVdHqCSMWkMVxeXQCoFAiGRBIlviQog4jUAImdgFZb9M
      pELyqQJZJ4eUEikktrRxLRfHcnEtJw7tOB3b1hfHcprb2paDYzk4MgktB1s62JbNO1fepFhb
      5k+f/jFDueEN/e5CCNGRJpChHaUVfujjhXW8sE499JKwTtWvUPZKlL0SpSRcq69ybuYMSitG
      e8eQSEIVEqgwrlWjgFCFzcUSFpa0sS0bRzrYloMt7fbFsrGkjWM5pKwUOTdHf2YApSOqCxc4
      tO0IB4YOYcvkWEloSQtbxGGctrGkxBIWUsQOLGVLvLlYTQdvLJ/NfcLFhc/51uHvMpwfTvKx
      m2LqJHsG9t3XfuYKcAfOzZxlqjjBS3tfQQhB1a9S9StUg0ozXvbXHbnslSl7JSp+ua2NGkRx
      DRyqENdKkXWzZJ1cHLo5MnaGT26cI4gCvnbwmwxkB3CtFCk7hWuncC23LW5LGyms2DGlHTun
      tLCEbItLaTVr4wa1oMZyZZGh/DApO72Jv+7mY5pACRoNOq65K36ZK0uXOD//Gf/v87+jFlTJ
      OlmEEKjkSYPWCqU1Ughybp58qtCyJGk3ThdSefKpHvKpPDk3j2M5cW0pJFJKLCERQrJaKxKq
      kMHcENJ003godK0AtNYEKqDmV5kvz3F58SJXli5yZekyc2uzpOw0hXQBpRS1sMbXDnyTfYP7
      m86eS+XJu3kyTgbTp2jr0jUC0FpT8kosVxe5vjLB5cWLTBYnmFmdohbUGMgMMFzYzv7BA+wb
      OshY7w6257fjRR6rtVVGe8Y63mY1bD5fWgGEKmShPM908TpXly9zZfESc6VZlqvLpGyX0Z5x
      dvbv4cDQQXb172EgO0gh3WOaHl3Gl0YAtaDG5PJVLi9d5PLiRa4tX2GtvkY9qDGU38a+wf3s
      GzzIgeFDbC+MkHWyOJZravUuZ8sJQGvNm5df5zdX3+aJkaMsVRa5tHiR2dUpEIK0nWZX/x72
      Dx1sLoXUes1uHN7QypYTQNWv8Jc/+3dcL06QstPs6NuV1O4H2NW/h/G+nbiW+yCLbPgSseVe
      hKXtDF/d9yonJ37Ddx//Hi/s/ipSmna74f7ZUlcAWH/LmrJTpklj+J3oWBNIa42KIjQCy7IQ
      IrEphZASAagoRCGwLavpuI/KizBDd9KxJlBQXebtt09Rx+WlV36P/qxLrTjLb9/9jB3PP8Ou
      dJ1fvvkRQgoOn3iR3YP5TmRrMPzOdEQA3soMO45/gzH/GjOlGv1Zl2z/GE8djVizAK0oDGyj
      4CosQbM3WGNMIDM4lmGz6OBN8Bc7cRQEOKk0FmU8P7xlvWnLGzaLjgggNTDG1Ju/4KLI8NVX
      93L9+iR9KcU7J09TS6d5/tgTLNyYZJmI/aMHb3lyY+4BDJtFx26C48M0vvPWTTvENXxr3NwE
      Gx4FOnYT3OrUiaVpb93GYHjUMG+RDF2NEYChqzECMHQ1RgCGrsYIwNDVGAEYuhojAENXYwRg
      6GqMAAxdjRGAoasxAjB0NZ2ZI0xrAt/D80Man9ZprQmDgEhp0JooDKjXPZT59t/wCNERAQTV
      Jd5+41f88o23KNZ8AGrFWX7zi7e5trKKCuu8+6vXOfX+R6zVgrsczWB4eHSoR9gs40+9xnhw
      jem19R5hx74S9wgLihPU0mPsHesn49qmR5jhkaEzPcIE8UwiGrjdV89aYbtpKN/g0wmXp/Zt
      i3dL+gmYT6UNm0VHBJDuH+f6r37OBZnllVf3Mjk5QX9K8dZ7p6mnUrz81ddIlX7N5SXYf/xQ
      s/9Aw/lNhxjDZrHlxgUyGDqFEGZwe0OXYwRg6GqMAAxdjRGA4YGh9cN7xL28VmNqYQ2l7i2/
      LTU69JeZeCJrkA/wkbDWsLRW5fzkIkd2D9OXTyeTaLeXIZ4zcGP2xnEbEw3qxvYaPro8x6cT
      C/z+if0Ucim0iu0qGUYnnnQQokgRfsESRYpQtdp0+7pIEYQRb5y5RrUe8Bc/fJnnjoxv+Dcx
      ArgDWmsipbGt3+1C2XCISDVOnCZU6yfXCyL+7t2L1LyAb53Yj2tbsXOoOH+lFKHS7c4Rrp/8
      MFIEt3Og8GZbxMTcKrNLZcaGCgz3ZhNnXHfsRll100m/aN26veHQreuU1qyUakRK8+aZCVxb
      Jv+LJmr+bwqtY9FLGS+WFM10HJdfsE627VerB0SRppx8ibBRjABug9aaSj3gv/3sLJdnVvj2
      8wcoZFyCKCIIFX4Q4YcRQRg1436g4jCxta+LnfTmk68ShwiVolSNT9xvPp6C5uja684kBfG8
      wJbEkgLbiuN2sjRtUiTbSGxLJKFs7pty4lOez7hs68+tO5EQCJk4Y/KeRrY4XGM2+NhGsr1o
      bt++DQgEpz6b5sLUEn/w4kF2buttltW2JHajXFZ7fvExuMnWkv4C2+eTi6xW6jz32MZrf+jC
      9wBtl22tKdV8ZhZLTC+WmF0qMb2wxvRimZVSjUrNRwOWXB/4S2twbYnjWLi2hdsWSpxbbHHo
      2I24vMVmScHfn7xEzQv5k68/QX8hg5M4uGPHTi2lSGZYXx9kTAjuaIvT8TTZIl5BtR4wObfK
      npE+Mimnud2DoFEJZNPOI/m2f8tNkXQvNJocnh/iBREr5Vrs6Auxo88ulZldKlOu+aRci5Rj
      U8i6jA/1MDaUZ3SwwPRiievzq/zJa08wPtyDa1s4tnwkT6bh3tmSAlBaEwQRrmM1P6fwgohS
      1adU9VhcrTKzWGJmscTcSpnF1RpLa1XCSJHPuPRkU/T3ZBgbLDA+VGBkIM9gb4bBniyFrJk5
      spvYcgJQSvOTtz7jnXOTPH1oFD+ImFkqsbRao1T1KFU9pJQM9GQY7MmwrT/H+FAhueHL0ZNL
      Uci6pF3bOLph602SV/MC3jo7wcTcKtMLJXaP9DIykGf/kX7GhnoYHyow0JMh7dikXAvbMs0V
      w53p2PDogVcnwiKdcptzhAW+j3QcbCnRWuF7Pk4qjUx88n7mCX7jw2u8dXaCP371cY7sGWo+
      NzeObrhXOtYE8soL/ObdM/ja5sRXX2Yg61JdmeH9UxcYP/EU+wZ6KS9e52dvnOTrf/h9BjLx
      fuZrUMNm0rEmkF+8wfixVxnzrzG1VmMg6RH25OMRaxJ0FHL1+iIH98fPaE2PMEPH0RqiCOx7
      c+mO9QjTSqMUzeZNK0tXPuDz62vYtRvo/sP07xmIdzPNF8NGURodBuggQPsBOvDRQQBBgPI8
      Sn/7f4mKRQb+5Z/j7Ny54cN2pkfYwA6mfvVzLsgcr7zS0iPs5Pt4qRQvvvwNvvsNzZXP3mfb
      UG9bjzAwTaCHQvI9jypX8C9fJnXoICKdbq67edu7pXUYosMQwggdhe3pMEQHAZU336T+yacU
      vv37WL29aN9H+z7K8xJHjtPa89fjzcVDtaQJwiRrTctHR+vl8TwAgs8+J71nz4Z/li31GPTL
      io4iah+eQddrpI8dQ0iJVhq0giTUSsUnXCl0GDVrQO15iZMktaKf1JKtcT/ZNgjwzl8gnJnB
      HhnBHhmBKIyPF7U4bxTBTaEOQ2iESiWvnNcXcVMaIWKnVAqRTiNSKYSUkCzCthCui3BTSRgv
      MuW2pdsXB+HcJu04VN56m2hlhb4f/RB7cHBDv/uWewy6FdBKrTtkS22mPR9VraIqZVS5giqX
      UeUyUbmCKpWonzsHWsdOacl1ZwzDxAnXHRQASyKkBbaNsCywLIQl41A20omtkXbsZq0p0ilk
      IY+wbYRtN4/TlrbjNJbdYrcQlt1+3LZ8ZVweKamf+xjv/HkK3/0Ozujo+nEdJxZDB3H/7Ef3
      tZ+5AnwRWlM9eQp/YoLcSy+CZaFqdXSthqrV2p25VE7iZVS1Gl/Sg5tEEASxE2UyyEwGkUkj
      040wTf3Tz9C+T/61r2H198dO0lLDtcZjZ40dUNjWbZ0vDtedEykRQFRcxb92DXf/Pqyens3+
      lTeVLfcm+EGiw5Bwfp5gaopgeoZgYoLahx+iPR+RycSX9SiKmwXJ0waZy2Hl88h8DplrWfKF
      2JbPIXN5ZLKNcN2W2tpqxpGSqFiEMMQaHOx47Wi4PV0lAK01JO3gaG0tdvKpKYLrUwRTU4Q3
      bsRtbttBZrM442NEKytExSKF736X1IH9tzhz26eUZkrYLceXUwDJEwpVqRCVSkTz8/hT04TT
      0wQ3bhDOzaPKZWQ2i8znsYeHcHbswBkfxx7Zjj0yEjdBpEQHAapaxert7Vz5DI8MW1IAOgiI
      VopYQ4MgRHwjubxMtLhEMD2d1OZzRMUVopUiOA7WQD/2wCD2+Bjujh3Yo7GTW339yHSqvSY3
      dA1bTgA6DFn5r39F9fRp3F07UdUqUXE1vvH0fezBwfjx3uhIXKvv3IE9MIDIZuMbTymNsxua
      bLnHoNoP8K5cRq2uEtxwyDz9NM6O8djZR0cRmUz8qE2ar0ANG2NLXQEA6p9/Tv2DD8l9/TWc
      kZEHVTRDF7DlmkAGQycxY4Mauh4jAENXYwRg6Go6IgAV1jnz3pu8dfIsXhh3cglqa5w9eZrZ
      tSoqqHLm5Du8/qtfs1y5t5G7DIYHSUcEUF2aQAw/wYFewexqBQCNZLC3j0DFDr/7yDM8tXeY
      pbVyJ7I0GDpCR94DaL9Orn+AAX+FK158BXAzeQq5FGuAtDNQucZ0zebweB9RFDW7RWqtm0+D
      DIaHTUcEILO9LF+/ShAu07t/jDAMkQI8z8NzXbzqIpfnfB4/vAtLxI89Lcsyj0ENm05HmkDZ
      gZ1sS5UJe8YY7c0xN3eD6soM52dnmb1wgZVyRK00z/unTzO7UutElgZDRzAvwgxdi3kRZuh6
      jAAMXY0RgKGrMQIwdDVGAIauxgjA0NUYARi6GiMAQ1djBGDoau76LdDa9Cf895+8jtO3gx/8
      8ffoy2ypfvQGwx256xXgk3fO8s0f/zkv7MxyeXrJTGZh+FJx1+pcOgE//av/QlRcJnDOMf/q
      P+Y7Lz32MMpmMDxwNvYxnNbUK6tMXL1C1R7i+JFdbatVWOfsqfdYk308/+yTpG2JX13l07MX
      2PbE44zmHM799l2WVZ7nnn2KrBt//GY+hjNsJhsaGOvGpbO88d6HlGolZqYF//xf/9kt21SX
      JrBGjnIomGF2tcLewQJC2gwP9BOpAL84i99/hMedJWaWVzkwMvBA/iGD4V65qwCKN64zX6yy
      fXwYrbKMD986UKz262T7+un3l5s9wpx0jnw27hGmvSq5gX30ihrz1cj0CDM8Mty1CRR4NSrV
      GsWFKX799q8pHHyF773yRNs21eUJzs9JesIFMjsfY6wvC8Da9DSlfJ5hWebMVZ8Rt4Qe3MPu
      4XhiBtMEMmwmGxoZ7r3//Z/5ydlpRrdtpyeXZt+Tr/Daswc6UgAjAMNmsqF7gOPf+QG5A5dZ
      XS2ytFplsDf3MMpmMDwU7ioAFfoUV5ZZK9cII43jOg+jXAbDQ+GuAvjgZ/+Ln55bYKgnTyrl
      kNl2iCO7hx5G2QyGB47pFG/oWkyneEPXYwRg6GqMAAxdjRGAoasxAjB0NUYAhq7GCMDQ1RgB
      GLqajghAa01lbYXiWoXGazWtI9ZWllir1NFaU15dZrm4hjJdKg2PEB3p4e6X5zn9/nmU1hx9
      7gWG8ilW567y0cUFvCDiheO7OHVmiqwVMnLkKfYmn0MbDJtNZwSwOsfoV15k3L/KZKnOUD5F
      pVji8DMvoK9+xJKySUkNlkvGtVFKNRegGRoMD5vOjHEiJCqMiEKwMiKxaaJIoSKNrq2S3bab
      YbFEsVxne08GKddbX61xg+Fh0hEBZAZ3cePN17ksC7z6yj4mJycY2j7Cr9/+B6LcMK/uHuHC
      uTPMI3js2X0IIRBCNIdYMQIwbBbma1BD12K+BjV0PUYAhq7GCMDQ1RgBGLoaIwBDV2MEYPhS
      oMISkTcH9/hQ0wz232W0PvUWQjyoXNAadFRG1WexcgfvaV90gFY+KH891H67LUnHNo/6/N+i
      wzL5/f8Wp/f4hnMzAngE0FqjowqgEFbhDo6pkwpOx4vWgGqJ62Qb/YXbBKWz+Iu/JDX8j7Cy
      +0BHaB2BDpN4HLbHw2SbjcTD5jGDlfdQ/hx24SsIu6/ptA0nbnXkdccOkv9VgBDEjRQBIg5F
      w9a2TqDDEuiIyLvBvYxcZQRwB7Ty0VEVafcmP/gdto2rvNs6wq3OFaKVlyx1dFimfuP/oKM6
      qaFvIKSLVkFyrABUEuowsYWgGscLbpPnTY6rWu0BoAlWTxM7kqTVoW5xsBZHEzdte8s+LY6K
      kGhVi3+bqI6wFUJmEXYfQroI6YJ0ESIJGzbhIqQDwkFIOw6FA424dEDYTZsQ8bZ+8V20v4w7
      +Oo9nWPzJrgNjVYhOlxDBSvUZv6aqDZJavBrCCsXO6vy0FEdWh1Y1ZMaLEycMGg6YWwL1h1X
      h6BVfBKTE42w0MEyADI1irCyICyEsEBYyQlvjbc4g3QTJ7CbzoF0brHFDuMQVS7gr5zEHfwa
      dv5I7NRNx47DdRG02lsFsB6KhhBuOQaE1WtE1as4fc8j7UdvSM0NDY77INkUAWiNVjUifxHt
      LxB5Cyh/HuXNxaG/2OLkcQ2GTCPtPMgUQqaaYVxrNdIuQqaTeDq2W+lku/RNNjd2ZmTs2IBf
      PIWOaonY0rTVpm21LYntfv99BaoOMk23fwiwNQWgNZrEBVqaJVqrlrZrhA6LKG+OyJtbd+4k
      raNycoS4VhNOH9LdjpXajkxtR6a2Id3tRNVLRLUJ0qPfRzoDrDueaMlbNO0P7qbS8CDYcgLQ
      WhMU38NfeZfU4KugNVGz9l5IliWUvwTouNa10ggri3SHkKmR2MHdYaQzGNvcwbhGNnQdHRNA
      FFT58OR7rIleXnruOGlH4leW+e2pD9A9Y7z41CEunj3J1Jrg2eeepS8bO9y9CkBFFUqf/QVR
      9Ur8D1g5hF1A2AWk3ZfU3tuR7jakO4C0exF2D8LON5saBkODDc0PsBFqS5Okxo/zRDDN7Fo8
      R9jSzATjR18mmPiE+ZVJinKcr7+y665PU+5YYJnG6XkGHa6R3v5PcfqfR1gZhMzEbW/TBDHc
      Ix0RgA48Mj299ASLLCVzhKlIkMunEVmXlZUlJqfLFGc/48Dxl9g7nL/vOcKs7X9KZuifIKwM
      kZDx4+4IiIK77Wow3EJHBGDl+1m4/DmVaJVtj41Tr9dJZR2uX7lGbbHE48cPsqc4x84BwVyl
      jjXSi2VZ9/kUyAWynSi2wdCZb4EyfePsGpBkRvayvSfL2toqg+OH6JUVxg89Tm9+mP3jeRa8
      FEd2D3ciS4OhI2ypp0AGQycxXSINXY8RgKGrMQIwdDVGAIauxgjA0NUYARi6GiMAQ1djBGDo
      aowADF2NEYChqzECMHQ1RgCGrqYjAoiCKr99+3Vef+c0tSD+wM2rLPHOL3/OW7/9hEhpgmqR
      N17/BWteJ3I0GDpDRwRQW5okvfMZjm7PMLtaBWB5ZpKdx36PMVlnJQiYvHIFJ+0QmunADI8Q
      nesRVuih4C+w6Dd6hEE2l4Ksw8riFGU5yECmSqQUUaTvu0eYwXA7vEqd0AvI9ufvqWtsh3qE
      DbBw6VNKUYmRIzuo1aqksikmLl2mvlxidzbF9Pwk8zNX2d97mOH9w79DjzDDViHyQwIvIJVP
      3+qUGjQarZJFq/X4bdJhEBL58dKMByGhHxJ6AVff+5ygHnDih68y8tiODZexM5Pk9Y2zZ1ud
      qhxme0+GpcV5hsYPUq5fwnrsCcaH+9ix+zDl1Sdx8wOdyPJLR6NfUqc69jeOp1UyU6eKHWpl
      apEbn11n7Ind5AYLyZCONK/G6GRg22a8xabWbXE6PqZSDWddD1Wkmfn4GsXpZcaP7sbNpgiD
      KHHigNAPiYIIFUXJDKMRKlRJ2GqL7UIKpCURlkRaEmlZSRjbgpqPUhq/Wr+n38n0CNsEtNbx
      yQ3ikxzWfS6+/QmhF7D72YNYtoWKVOwckUKFqs0hmmEQEQWJI91kV2G8780OWi/ViPwQy7Fx
      0s5tnD2umRtO3+rwrTaIxSqkACma8dbQr3popXFzKdKFLJZjIW0Ly7aQThxaro3t2liOg+1a
      WK6D7dhYrt2yzkbaEinXBSCkXBeAFCxPLuBX6ow+sQvb3djwuFtuYKyHzczHExRnltj34hFs
      145rLT9Maq+gPd20x5fkdnvLtsnlW2vdrFFVpAi9eFQLacXPJVprZgSx09gtDpSElmM1Hevm
      dbLF0WKbZGVqiZlPJtj19AGG9m6Pp6iVInYumTivlEgrGTVPCkTiZFKsx+MrlWj8NYe7aQ7d
      KGDp6hxLE/Psff4w6UIGWkUikn03cSibrhRAo7aLa9i4ZvWrHrXVKtVihVqxHMdXSixPLqKV
      ap6o+KSJeCzYZrxRA4IQMq6xGjWXa2O7TjMd25ybtnGwbMnE6UuEXsDhrx8j05ttd2Kr5WHd
      PfiLaHpn+/+vtV7/fx4gnW7WdZovrQCUUnFt6wWEXtB08NpqhWqxQn2tileu4ZXr1Es10Dp2
      yJSDk3JI5TNkerOU5lepl6rsPnGIwrbepMa14xo3CS3bbquFH9WTbbiVrScADas3llm8Ose2
      A6MIGbczvYpHPXHu2mqF+loNv+YR1Pzk5kjhZlzcbAo3myaVT5PpzZHpy5Hty5HKp3HSKZyM
      i5txkXZcntAL8Gs+md6scewvIR0bGvFhEfoBZ396kpXJBZyMixCC0A/RSuFm02R6s6QLGfLb
      esn2Zsn05cn05kjn03FTw41rcGnJDTm0nXKwU/cy34hhq7GlBCAsSbqQQVqS7Yd3sOPJPbGD
      98RtZiEFUra0zQ2Gu7C1mkBAGITUVsrkh3oQ0nzLZ7h/tt49gMHQQczIcIauxwjA0NUYARi6
      GiMAQ1fTkcegUVDh/d+8y5ro4eUXnyHjWHjlRU6d/ABVGOOlY7v44NQHrHpw7LkX2N6T7kS2
      BsPvTGd6hC1Okt1zgmNjufUeYbPX2XX8FXbYHkVlc/TEyzxzcIxStdaJLA2GjtCZHmFhQDqf
      J++7LLT2CMukIGNTUxZ66SrzfoYjO/uIosj0CDM8EnREAHZhgPnzH7OqKow/sYNKpUI6l+Lq
      xYvUi2W+MrLA2etlDu0rUPND8mnH9AgzPBJ0RADp3jH2j3lU5RjbChmWlxYZHD9I1b+CHP0K
      hbRmoGeFxcVF7Gwf+bT5vsbwaGDeBBu6FvMm2ND1GAEYuhojAENXYwRg6GqMAAxdjRGAoasx
      AjB0NUYAhq7GCMDQ1RgBPCI0B6d9GPmo6CHlpdAqfDh5qRAd1u85ry01LAqADmro+ioiO4iw
      7vGbIq1JxkxOBni9XdhYr4hmPkQtXsJ+7DsIJ9t2HBrH+SJbY5DZm2zczqYjgo/+J9ov4x77
      ITjZ9mO3lqstv7ic8XCPav3/0KptfdOGIpx8j/D8z3Ae/yOs0WMtx77p+G35tq+7JaZvKmti
      C8//jGj6NM7TP0b27mj/rdvKq5sD8oJq2lrXN+1t+yQ2FRGc/WtUZZHM9/4j9vjTbJQt9S2Q
      jgK8X/wlwYW/xz7wTWTfbtBR/O21itA6bMYbdq3CtnTsMCo+AUk6XiJQjXXxtmrpEkQ+ojCC
      cAs0fnzdcCy45UTeIqrb2PQt20TgV+LjWS4Iq2Wfxom/Ka8myfhHzcFqxbpd3LQOIPLj4wgL
      7FT7ce44lNKdVorbb+JX4rzsFNjp5raitYxtZW89SGv6pnWt/48Q8U9SmgGtSH3j3+M++YM7
      /SPrpe7UyHBaR8xeu0RZ9nBg1yhSxM567dIFZO8Yu7b3Mn/9MsUwy4G941j3O2ZV5BMtXYTQ
      I5p8F7V8BYSMT6aIh8xuxBESWtKiYbMchLBBWghpgbTibWRiEw2bJNQRamUSe++riMJo/GOL
      ZFQ5IYlPjGzam07XyKtxsm/ZppEWgAStCD76H+ighvvUjxDp3i84Zry9aO57c8hd49GNc4SX
      foHz2B8ghw/zxY4t7pC82wkUgCa69mui6fdxnvpniPy2eMCy25ar9ZhftO52IlhPh5d/ia4s
      YB/81l3K1k5HBFArTjOxFJIJrzHX18tob5al6QushBnqFz6hJ7WHizM1+pxlpm4zhNMAAAEr
      SURBVHt62DVUuL+MnAwT/d/m0nnB4898n6H9x2hzgjaH4KZ0S62xEbTmwnyexYVPObbjj8j1
      D99fmTeAiiI+9p/Gr1V4MvsYbib3YDLSmtnyAFdmd3BwZx/bBu/zPGwwryvLPdyY2c7RQ2kK
      6dt1g71b4+N2Tc3bZaX59FKVyqrPi4dDCpmNF7MjTaDS9bPMZY8y7l/mqt7G42O9TH9+BnfP
      Mbh6jqLtE/YeZ5+Y4mIty5HxgWaPMMuyqNfjWT0cJ27TB0E8Vr7ruiilCMMQAInmb/7Tf6C0
      eAMhrQf+GXUY+HG+lh2Po/+A0ECU5GXZzgMd1jEKQ7RWCCmxrAd7CxiGAWgdz+YiH865evrb
      3+fwC6+RSqXwPA+tNVJKXNdtpi3LwnEcbNsW/x9zJqVgzS0WKwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='High value Recall' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='MAP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MRR' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='NDCG' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Recall' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29d3Qd15Wn+1XVzRmByIkEI5hzEkWJysEWlSXLkuXc088ed/LMdE/PTPeb
      9V7PvJ61prvdY7vt8ch2t2RZbkkWJSpQEikxk2LOJBiQMy6Amyue98cFKVGBFIQM1LcW1gVu
      qDqFu3+79tnnnH0kIYTAxmaSIo92A2xsRhNbADaTmhEXgBAC0zRH+rQ2Np/KqNwB7G6HzVjB
      DoFsJjW2AGwmNbYAbCY1tgBsJjW2AGwmNbYAbCY1tgBsJjW2AGwmNbYAbCY1tgBsJjW2AGwm
      NbYAbCY1tgBsJjW2AGwmNbYAbCY1tgBsJjWDFkBv63k2vb6NTP8ir1RPK6+++DsOn2tBj7Xy
      uxeeZ8v2o9hrwGzGItKgqkKYaTZt2sLcOSXUdvm484a5JKLtxA2J3W+9R830ApKls5idF8Hv
      9yLx4ZJIh8MxdFdhY/MFGZQVCl3FV1hC1dQa6joOABDw+3j9X19E5FXjchq8+9rvaZ21jLtu
      XoYwDQBM08SyrMG33sZmkAxKAJLTQ6q9mfO1JoYyhUwmTbKnh7Ub7uTQ1ndJzlzJxo0z2Ldj
      D6q1HL/TiRACSZLsO4DNmGBwfQDFw/rVC7jYZnDT6hra21twOuDIvj2Ur7iJWQUhjh86zPwb
      bsFv27vNGGRwfYAvgN0HsBlL2GlQm0mN7YZtJiWWsGiLtdgCsJkctMVaeWbfT4l4c9EtjTPt
      p8gYGbsPYDOxSahxDjTsY8vZ16mLXsSluFlVtZZ5xQupyp1qC8Bm4pExMtR1X2D7hW0cbNyP
      1+llWcVKFMlBdf50llesRpIkwM4C2UwgOuJt7G/Yy55L22mLt1FTNI8bpt3EvOIF+F2BT/2M
      bYU24xYhBBkjzcm2E+y4sJXT7ScJeyKsm3YTq6rWkuefgiIr1zyGfQewGXdYwqKhp549dTv4
      oH4PKT3FwtIlrJt2M7MK5uBUnJ/7WLYAbMYFQgiSWpKDjfvZfmErDT11FIdKubH6ZpaWryDs
      jSBLAx/WsgVgM6bRDI2L3bXsvPg+HzTsxev0saxiBWunrqcqd9qVzuwXxRaAzZhDCEFfppfd
      l3aw8+J7tMZamFM4l/XVG6gpmk/AE0RicIZ/GdsKbUYdgaAt1kpd9CJOxcmui+9zpPkQUwIF
      rJ16I2unrifPnz9ob/9p2HcAm1HFtEzOdpzml/t/RlNvAx6nl2VlK7hx+gam58/E7fQMmbf/
      NGwB2Iw4KS1JQ089++t3c6BxP6qRIeAOohoqX1/5HZaULR8Wb/9p2AKwGRF0U+dcx2kONX3A
      keZD9KSizCqYw7KKlcwrXkCuL5+0niY4hPH958EWgM2wIBDohsaF7vPsr9/N4aYDZIwMFTlV
      rK66gQUli4l4c647UDXcDFoA8c4GDpxuY80NK3DLkIl1snffYQpnLmJ2aZC9u/ZRMX85pbl+
      wBbARMcSFq2xZo42H2Zv3S5aYk3MnDKbZeUrmF+ymHz/lBELbz4Pg6wKkeHVTa9TXp5Hh17I
      7atnE+tqpq03w9E9hyipCqIEimi81MrG++/CKdkCmGgIBKZl0p3s4mDjfvbV76Yt1kzQE+aG
      qeu5ofomcry5o+7pP4tBVoXI4C0sZ/78Gt7bdwCYTSgY4s03t2DlTQdJZcG8hYi+VtK6AMmu
      CjFRsIRJS18LJ9qOcKTlEBe7z1McKmFB8WIeW/gkU/Oqr4zMmoaJOUYrQw2uKoTDTbKjjfZW
      Nxo5WJZJLJbkzvsfZecrL9Gn5NDU3kpb1GSpQ8Ip21UhxiNCCOJqjM5EBwF3kA8a9nKgYS/N
      fY1EvDksq1jFk8u/QXGoFLfDPaZCnOsx6D5AtOkM7xxo4Mtfup2mS6fJ8zt58+1dVC25iVWz
      8tj8yhvMWXcH1YUhwA6BxiNJLcn/u+U/cyl6AafipDRczuKyZSwvX0Vl7tRxZfAfx84C2Xwm
      Qggudp/nN4d+zem2EyiywjdW/gFrpq7D5XCPdvOGBFsANp9ACEFnop0Xj/6Wg437WFK+go3z
      H8Ln8hP2RMa1x/84tgBsriKtp3jz9GtsOfM6RaESHlj4KHOL5n+hqcbjAdsKbYDstOODjfv4
      16PPI4TgsSVPsmbqjQNaXDIesQUwyRHCorbzHC8e/Q2Xohe5dead3DXnSwQ9odFu2ohgh0CT
      FCEE3ckuXjz2PAca9rKwdAkPLHiM4lDJhIrxr4ctgElIUk2w5ewbvHXmVUrD5Tyw4FHmFM2b
      sHH+tbCtcBJhWib7G/bw8rEXyOhpHlvyFKurbsDt8Ix200YNWwCTAEtY1Hac4cVjz1MXvcSG
      Gbfz5XkP4nP5Rrtpo44dAk1woqluXjz6PHvrdrKgZAkPLXqcklDppIrzr4UtgAlKQo3z7rm3
      2HzqFUpCZTy25KvMKqixDf9j2FY4wbCExd66Xfz++O9Q9QyPL3mKNVPXTeo4/1rYApgAmJZJ
      XfQiSS3JqydepLG3gZum38q9czfidwVsr38N7BBonCOEYE/dTn6y6++xhMWKilU8tPBxSiJl
      I7q2drxiW+E4xRIW7fE23ji1iT11O3DKDqbmVfOdNd/H6/SOdvPGDfYdYJwhhKAt3spbpzez
      69L7VORU8qW5D1AUKibsjeB12qnNgWALYJwghCCa6uK1k6+wp24HBYFCNi54mHlFCybM3PzR
      YJACENQefJ/3jjRw14OPUhZxE++s57XX38VdMIdb5wf55abtlE1dwn13rULBFsBAuTw3/60z
      m9l+YRtlkXLuqdnI4rJlY3ah+VhEWBZ6cwtKwI8AjLY2tIsXBycAoSd4bet+bl4xi93HWrh9
      /XIyiT4Mh4/9W94kNzdMaMEypgavjklN00RR7C/vesTVGJtOvMSui++T48vlvvkPsah0KS7F
      NdpNG1dYiQSpHTvpfeF3yN5sOthMJHGWlAyyE2yZuH1+vN4QknUeAIdT4ejud6latYFgvJbf
      /+bXKKFSnnjkXmQrWxXCsiy7KsQ16E528va5N9l+cSsl4VKeWv5NlpSuyGZ1LNAtfbSbOGYR
      hoHZHUVvaEA9fRr97FnMtnaUUAiEQA6HCT/2GEr1NCS3e5BVIZw+5M5afvHPR5i/9stcuHCW
      TMsJth7ppLpHYt70CF6fF1OSAAmn02mHQNegL93LW2de4/3zWwl6Qjy98jssr1hpD2JdAyEE
      ZjSKdv48mVOn0WrPo7e1ITkcuGfMILh+Pe6ZM3AUFmL2xVBCQZRI5MrnB90JtkwDVTfxuN2Y
      po6EQNUMJEnG7XaiqioOpxunQ/mwwbYAriCEoCcVZdv5t3n77Bvk+HK5p2YjKyvX4JAd9iDW
      x7BUFau3D+3SJTInT6GeOYPR1YXs9+OqqsI9Zzaemjk4S0vB4UCSrz3F284CjSJ96V621m7h
      3XNv4XP5uafmPlZWrsFj5/GvICwLo7MT7fwF1DNn0M5fQG9tRQ74cU2rxj17Fu6ZM3CWlCB5
      vQN2GLYARhghBLFMH+9f2Mpbp1/D5/Jx79z7WVm5BrfDM2k9vqWqWMkksteLlUignj2HeuYM
      mVOnseJxJLcL17RpeGpqcM+ZjaOgAMntvq6Hvx62AEaIy9XV3j+/lbfObMbjcHP33PtYXbVu
      co/cCoHRHaXnmV+SPnoUR0EBZlcXSm4uzspKPHPn4KquxlVejuQa+uzX5LLCUcASFptOvMTO
      C++hmiqKJHP/godZWbkWv8s/+Ty+ENlMTbSH9OHDpA8fRqurR6TTIASeeXMJ3HoLjvz8LxTS
      DBRbAMNMTyrKO2ffIJrqZn31LTy14puTcrqClUqj1deROX6C9OEjGM3NOIqK8NTUELz7bpzF
      RRjd3bhnzkQawTEiOwQaJoQQ9KZ7+NH2/0FcjbOqai23zrqLsCc82k0bEYQQCFXNGvzBg6hn
      zmD29OKsqMC7fBne+fNwFBcje0Y3xWsLYJho6m3kH7b/LSFPmO+t+xMi3pzRbtKwI4TA6u1F
      q6sjfegw6SNHwbJwTZ+Od/EivIsWXpWDHwvYAhgG6qIX+bv3/jtlkQq+u+b7E7vIlBAYPT1k
      jhwhfeQo2vnzWOkMnpoavCuX412wEDkcGrN9HVsAQ8yx5sP8ZNffs7hsGV9b8a0JNYorhEAC
      rEwGo7WV9NFjpA8eRG9qRsmJ4J4zB9+ypbjnzEHyjI+Uri2AIUIIwYHGffx89z+yrnoDjy15
      csLU1RSWRfzNt8gcP4GSm4N27hxGe0c2nl+4APf8+biqKkc9nv8iTCwrHCUsYfHuubd44fC/
      8OV5D3F3zZfH/VRlIQRWMol28RKpnTtJ7tkLuo5rejWB22/Hu3ABSk4OksMB48DTfxb2HWCQ
      mJbB5lOvsOn4izy25ClumXnHuLj1fxZWJoN69hzpAwdIHzmKSKdxz63BVVGBGYsRuu8+HLkT
      p0NvC2AQaKbGC4f/he3nt/LtNd9jafmKcVdfUwiB0DS0S5dI7dlL5vARrHQaV/U0/GvX4J47
      FyUSGfSUg7GKLYAvSFpP8av9/5vjLUf4Nzf8gHnFC0e7SQPCUlW0S5dI7/+A9KHDWPE4rhnT
      8S1fjmfxYhw5kXEd2nxebAF8ARJqgn/a/Q809NTxg/X/jqm51WM+7BFCgGWh19eT2ref1IGD
      mNFuXNOm4Vu1KhvT5+WN6CjsWMAWwADpTnbxo+3/A9VU+cGNP6QoVDLaTbomlqahNzaSPnCQ
      1AcHMLu7cVVV4lu5Eu+ypVmjH+PiHU5sAQyAtlgr/7D9b3EpLr5345+S758y2k36VIQQGM0t
      pPbuJXXwIEZzC87KiqzRL16Mo7Agm72xuXYatKv+GL9+bjNq/98rb3+MDUunfuQdgkvHdrP1
      UAP3PvgQhUEnqZ5mXtu8BW/xAm5ZWsTLL29h+spbWFFTMW7rlAkhqIte5H++99+oyKniD2/4
      I3wu/2g36wqWqpLauw8lGEBrbCS1ew9GRwfO0lL8q1bhXbUSR0EBwKT29p/GNQUgK04CgQCX
      h3Pczo/Fh3qK400pHr53DXsOHeWO9csQspvbH3iCQ1veZOehdjZsfJBju3aizq7AMw4TCUII
      TrUd58e7/p75xQt4avm3x1RdfSudJvbKJmKvbALIevpVq/AuWoSzvMz29B8hkdbwuBw4FBlL
      CPoSmWsLIFI0na88XUZvtINEWie3MO+q14Vp4A2F8QfykEUdAB6fn9O736N0+Y10XjhAyB8g
      4APdEChStiqEaZrjoiqEQHCo8QN+sf8nrK/ewIMLHseBA03TRrdhpone2kZq+3bUffuRZBkl
      Pw/XzJmEnv4akjtbKEu3LBjtto4ipiVIqzqpjM6xix089+5Jwn43IZ+L1mgS3bCu3wcwtQ7+
      6g/+knB1KZXrnuThG6d9+KKl89bvf0dUNSifezOVOQbJxuO8cyrO9MoqSiM6xy60IXsLeeTL
      N6NI46cPIIRga+0Wnjv4K+6b/yB319yHQx7dNluaRuboUZLvvU/m1ClclVX419+Id9lSZLf7
      cy0Cn6gYhkVHX5KOaJKmrhgN7X00d8bp7E0SjaVxORVSGZ2coJfblk+jvCBMQcT3eaZCKFTP
      nUWX0UOyK3b1S7KTDXffR09cJT8/l0w6SUHezTxQFUdxuMnPj1Bc2Y0/kosyjkJP0zJ5/dQr
      bDrxIo8teZJbZt4xagNcwrIwe3pJ7thBcvsOrEQC75LFFPzFn+OqqkJyToz5RtdDiOyUE003
      yWgGrd0J6tt7aeyIUd/WR2s0jmFYCCAn4KG8MMyC6kIqC8OUFYQI+lxcau2lIOKnOO/DkvHX
      vQNYVoamxihhv0lPJkhV2eDmc4/1O4Buavz28LNsv7CVb676N6yoWD0qHUeh66i150ls3Ub6
      8CEcUwrw37AG35o1OHJzR7w9w40QAtMSOJSso9ENk554hs7eJC3dcerb+mjujNEWTdLZl8Tr
      dpIf9lGY46eyMEJZQZCSvCCFuQH8Hufn/s6uKwBDbeZXz+zn0Y3lvLBV8I2vLB/8hY5RAaiG
      yq/2/5wjzQf5g7X/lvnFi0bU+IUQiFSK1L79JN7dit7Skl0ju2ED7tmzr5T1mygIIbCEQNNN
      Xth2kn2nmpk/rYDO3hQt3XHSqoGqG4T9HioLw5QXhKkoDFNeECIS8OD3OHE5lUF9R9e1QsVV
      RL63jRff6GH1PV/5wicaqwghSGoJznac5tWTL1McLOEvbvtryiIVI3P+y6Oze/ZidHZhdHXi
      mTOH4F134Jo+HWdR0Yi0YzgRQhBPaXT2JmnsiFHbHCWR1hAi20lNpHUyqkEioxEJeJhdkY+i
      yBTm+CmdEhqQRx8o1xWApXdzeOcZ1n/9SxzYcpQ5X105LA0ZLVpiTfzPbf+NrmQXt8++i4cX
      fQXnCBSfFaZJ+sBBElu3oZ47i7O8guBtt+JZtBA5MP63NYqnNM42dnHsQjvnm6N09CTpTWQI
      +dzMKM+juiSHGWW5FOcGiQQ9SP2fyQ17kUfw2q8rAEn2kVvg4p0X32TdU382Em0aUc53nqMl
      1kyuL5975m4cVuMXloXR0UFq5y4S770PpolnyWIKH//POCsrgfE1UCWEQDcsehMZ2qIJLrb0
      cK6pm4stPXT2psgJeKgqjrBgWiHVpbnMKMsl7P9wL4OPX6vbNfJh8bX7AELn0I6t9LqKmF/h
      51yLYO2yGYM64VjqAyTVBH/95p9TGCrmvnkPUT1lxpDvqyWEILV7D+n9H4AEmRMnUfLy8N+0
      Ht/KFdlFJePA6Fu74zR1xphemktTZ5xLrT1caI5S395HV18K3bCoKAwxrTiH6tJcqooiFOb6
      CfncY/r6rmmFjYe2cyLqJi/5Hn/zcpof/uWfjlS7hh3d1Hlm/89wOTx8Z833CbqDQ34OYZqo
      p07T8+t/xurrwzVzBvk/+Le458wGZXCdt+EmG58b9MTTnK7v4rfbTtLZm8TtdOB1O8gJeplW
      nMMdK6YzvTSHsikhnA4FRZbG9HV9nGsKIJNKU3fiLC2ZdhyOHOob2imeWzZSbRs2hBC8e+4t
      jrUc5i9v/6/DYvxaXT2xTZtIHz6Ce85sZJ+P8IMP4CwuHvJzDRWqbtDQHqO2qZvT9V1cbOmh
      oyfJlIiPgNeJqrn52p2LWDSjkJzgyMbqw8U1QyBTV+mLJbj8Bq8/hM8zuIGXsRAC1Xae5b+/
      89c8ufyb3Fi9Ycg8lhACo7OT+KubSe3Zjat6OuGHH8Q1dSrI8pjyjKZpkVJ1mrvinK7r5GRd
      JxdaejBMi5DPzayKPOZNLWBWRT55QS+SDLphDWtGZjSYdNOho6lu/ubtv6KmaD5PLf/m0Cxe
      FwKzr4/EO+8Sf2sLjqIiwg/cj2fB/DGzwEQIQTSepr6tj7ON3Zyu66S+vRfdsCibEmJGeR5z
      KvOZVpxDUW4AWZ44Rn4tRr8nOoIYps4/f/ALXA4Xjy95ctDGL4RAZFSSO3YQe/VVJMVBztNf
      w7t0SXZuzih5SiEEhmmRSGuca+zmVF0np+o66ezvrJYXhJg3tYD7bphFVVGEoN+NUxlbd6iR
      YtIIQAjBG6df5WzHaf781r8a9CYUlqaR/uAAfS+9jFAzhO65B/9NN43KaG0qo/POwYvkhXwY
      psXJug5qm6I0dcSIBDyUF4RYUVPGrPI8ppfmDjqMnUhMCgEIITjVfoJNJ17i6ZXfGdQorxAC
      9eRJ+v71JbTGBoK3307gtltHfH7O5bkztU3dbN5Ty45jDQBEAh5qqqawYXEVsyvzKcjxE/S5
      J0SHdTiYFALoTnXx893/yPrpG1gzdd0XyvULy0K7cIHYy78nc+YsvtWryPveH+LIzx+GFn9G
      G4SgL6lyobmHfaeb+OBMC7puUlkUYVpJDrMr8vjG3Yuv7Mdmc30mfCfYMHX+7v3/j5SW5M82
      /McBL2UUQmB0dBD7/Suk9u7DM28u4fs34qyqGrG598mMxuFzbew/08ypuk6SaZ350wpYObeM
      uZVTKMjxY1oWiiLbnn6ATGgBWMLi5WMvsK32bf7y9v86oAoOl7ffTGx5m/jb7+CqrCT86MPZ
      DRyG2fBN06IrluZUXQe7jjdyqq4Tn8fJnMp8Vs8tZ2F1IV6P0zb2IWDQVtjbeoFdx5q55dYb
      8SggTI2Th05StXQh7kQHr769g3DhLG66YQEjfWM+3nKEN06/ynfXfH9Axm+lUiTe3Ur8jTeR
      A37yvvsdvEsWD+viEyEErd0JDte28sGZFmqbovjcTpbMLOKPH1nFrPJ8gj73ZKhVNaIMTgBm
      hu17jzNnZjHv7znJHTfMJdbdSuf5BgKL5yOfOkPpktXMzs9lpNdTdSU6+MXen3DrzDtZWr7i
      +h8QIltdYd8+Yi+/ApZF+KEH8K1ZM2xVj1XdoD2aZP+ZZvadaqa1O07Y72HJzGIeuXkuU4sj
      eFz2XsHDyaAEIPQMvsJSpk2voWHfAQDCBZVML2/EBHTF4oPXX6WzZjl3rl+KMEdmUbxqZPj5
      nh9TGCzmntn3YejGZ1+DYZD54AAilSKzcxdGdze+Wzbg23AzcjCIAUO6sFw3LS40Rzl6oYPD
      te00dcaoKAyzsLqAp26fR3VJzpVVUSDQdX3Izm3zSQYlAMnpJtXewqWLAkPOR1UzKBL0xeNY
      fTFyplTy4ENz2L1tJ6q1DL/Tmd1kQZKGrQ8ghODlky/Q0tfEf7rj/yHou/buLKljx+j76T+B
      JBHYcDP5f/yDIa2WJoTg3UOX2HuyiSkRP0cvtBFLqJTkB1m3sIKlM0sozA18suSMzYgwOCtU
      vNy4ah47jzVz260raG08T8hhcjIWw7l7HzeuXsLeXXuYd8MG/COUcD3cdIAtZ17ne+v+hCmB
      gs9+oxColy7R++xzyMEg7jmzyXnqySHbi1YI6Etm2Hm8gefePk4yozOtJMI9q2awdFYJhTmT
      cIvUMciEyQIJIWiLt/I3b/8XbqzewAMLH/3MSg5CCFJ79tLzq1/jXbiA8CMPo4TDQ9LJFULQ
      HUvz+t5adhxtwLQsls8uxbQsHrqphqLcwKDPYTN0TJiBMM1U+dnuH1EaKef+BY98pvFbqkps
      06vEX3+d8P33E7z3niFJaxr9sf3mvbXsP91MeUGYRzbUsG5BJZ5RWOlk8/mYEN+MEIIXj/6W
      nlSUv7jt//7MSW5WIkH3z36OeuYs+d//Pp5FCwdt/IZpcfBcK6/tPsfZhi4WVBfyw8fWMG9q
      wags8bMZGOP+GxJCsLtuB1trt/AnN/35p8b9Qgj0+nq6f/wTJKeLwv/yn3CUlHzhGFwIQW8i
      w+4TTWzec45ERmN1TTnfvncJ5QVjd0tQm08y7gXQGmvhXz74P9w7dyM1RfM++QYhSB84QPQX
      z+CZPZucbzyNEvpi+/YKIWiLJtjywQW2H21AliVuXzaNGxdWUmjH9uOScS2AlJbkZ7t/xKzC
      Gu6e8+VPvC40jdjm14lv3kzw7rsJ3XsvkmtgHV0hwDBNLrb08OrucxyubaM4L8BXb5vPypoy
      vG57oGo8M24FYFomvzvyHLFMjB+s/3e4HO6rX08k6HnmV2ROHCfnW9/Et3LlgA01oxkcOtfK
      63trOd8UZdGMIv700dXMn1Zgz7icIIxLAQgh2FO3g50X3+dPbvoP5PiunouvNzXT/dOfIjSd
      gv/w77MzNz+n8V+ecrzzWANv7DtPLKWybkEF3+qP75VJWn15ojIuBdDQU8ezB37JAwseYXbh
      3CvPCyHIHD1G9J9+hqt6Grnf/hZKOHzd45mmhSRJNHfFePfgJd47UofX7eTWpdO4aVEleeGx
      syGGzdAy7gSQUBP8770/YU7hXG6bdfcVzy5Mk/gbb9L30ssEb7+N0MaNyB73dY4G7dEEf/v8
      bjTdJBpPU5Qb4Ot3LWLJzGKCvut/3mZ8M64EYAmLZw88g2pkeHrld3Ao2eabiQS9zz5H+sBB
      cr/+NL4b1n6ukCeR1vjNuyeobYri9zj540dWsXRmyaSpiGAzzgSw48I2DjTu4882/EeCnmwq
      0+jqovsf/xdmTw9T/v0PcVVff89eIQRnGrr4+WuHSKQ0Hrl5LrMq8lg6s9jO6ExQhKWj9+5F
      dpciuwux1FYstW38COB851mePfhLHl/yFDOnzAYBmRMn6P7pT3FWVFD4Rz9AiVx/8454SuXl
      HWfYvKeWGxdW8vSdC/FNsGJPkxkhBMJKIYwkwujDzLRgZZoxEifR+w5l3yQ5kRQfkvK5tkga
      fVJaip/t+V8sKl3K+um3AJB4+x16f/sCgRvXEX70kesuWhECTtd38vPXDpFMa/zZY2tYMrPI
      zuqMV4RAWGlMtQNLbcHMtGJlmrKPehRh9CLMNLIrD9ldhOzMQ3ZNQfHPwFv8CJIzguwIjm0B
      CCHYW7+Ll44+jyI7+OqybyBlVHp+81tSe/eS89Un8N+47rrV1+IplRffP83bBy6ydn45T9w6
      n3BgYu22Mu4RAoFA6p/EKIQAoSPMNMJMYantmJlmzEwTVqYZM9OMMHqz3lx2ITkjKJ4ynKH5
      yJ5SFE8ZsrsQSXaDpAAyCB0kBUn60F7GtAAsYfH2mddp7mvizjn34kvqdP7kR5gdneT/8R/h
      qZlzzc8LIThV18kvNh8mrRp8/8EVrJxTaoc7YwwhTNSO19F79+OMrMDSo5jpJiytE6F3Y+m9
      SIof2TUF2V2A4qvClbv2I549F0n2Xr8Sn/TJtR5jej2AEIJjLUfYU7eDO5zzcD/3GkpeHnnf
      /TbKlCmfachCQErV+N22U7x94CJr5pXzxG3zCfvHdq36iUzWoxsIS0XovZjpeozURcx0HWbq
      EpbWCcJAcuaieCtRvGUo7lIUbxmyuwTJEUCSXSC5hvQ7HPQdIN7VyOGzHaxcvRS3DMLUuXD6
      AiU1s/CKDPv3HKC8ZgkluQOrx3OZGW2Ckn0W6snf4Fm9ishXn7hmvC8EHL/YzjNvHEHVDH7w
      0EqWzbJTmyONEAKh92BmGjHTDZipS9lHtRVhxJFd+cjuIhRvBa7IiqxjTF3EU4tso9AAABMi
      SURBVPwQivsaK/mGmEFXhXhv+35KSnPZvu8st62eRayrmQuHTuCYPZ3ePdsxvFPY9d52Nt5/
      F86B2qBlEX/tNdTTZ/CtXkXO019D+ow7hxCClGrw0vbTvLGvltVzy3nytgVEgnasP1xkg4d+
      z24kMNMNV3t1PQqWiuzKR/FW4YyswOObiuIpz3p0xXtVPD4aDLoqhLeogkWLanhv3wFgFuHC
      KmqmNWECKUlh8cLFyIk3SesCpIFXhfDedhuS34/33nvQLetTKzQIAacbuvg/rx9FM0y+f/8y
      lswsRgK0IazoMJmx1GasTAuytwKhx7DUZoRaj8g0ZDumWheSI4zsykdylyKH1+H0TkXxz0BS
      rp5KYgJYgGVe/mvUGFxVCIebZEc7Xe1eVJHD5e6EJQRCCBQ1Q0tXB+1RkyUOCac88KoQrjWr
      Ca1Z/amvCQGabvD8tpO8ue88Nyyo4PFb5pET9Nix/iC40i20VMx0HUbiDJn2V7DUdiRHCGGm
      kRwhHL6pKL5puPJvQfFWIjvCSI4QkjymcytXMehOcLTxFG/tr+f+jXfRePEUEYfBS1v24A7k
      sPG+u3h/82bmrr+b6UXZkduhWhRvWdkMz89eO4hhWHz97sUsn/35q7/ZfIiwDITRi6l2YqYu
      YCRrMVPnMdONSIoP2ZUtACyMGN7SJ3BGViE7rz/JcDwwprNAn0VaNfjdtpO8sf88a/szPDnB
      wdX7n0wIM42RupTtmCbPYaTrsilHI4niKUHxVePwV6P4pyO7CpCdeYCJMBLIztxR2/hjOBhX
      AhBCcPJSdjRXN0y+cfdilswstjM8n4GwdIQRx9K6MFK1mMnzGMlzmJlWJMXTH8ZU4/BPR/HN
      QPFVISkeYGzvYDmUjBsBJDN6NsOzt5a188v5yq2217+MsFS06O7+ASFX1rsnz2c9vNqOsFIo
      nlIUbwUO/0wU71RkTwmyK2/UszCjzZgWwOVZm3tONHH0QjuqbvCte5aw2J7Dc8W7G6mLaN3b
      0Lq3ZYf5FT+SI4jDV43in4HDPwPFW4GkeId8EGkiMKa765YQ/POWY5y81Mncqin81dfXT1qv
      nx1YimKkLmLET2IkTmKmLoHsymZgPKU4fNV4y76WnQPzGYXBbK5mTAtAliRuWlSFYVg8eceC
      SWP82ZuyiTAzmMlz6PETGLGjmGorCBPFNxVnaDHesqdRPGVIjgDCzGQnhcn2BngDYUyHQJOJ
      yx7eTNejx09ixE9gps6D7EHxluMMLsARqEHxz0B2fLFpJTafxBbAKHBlCoGlYiRr0WNHMeLH
      s1N8zTQOfzXO4EIcoXkongokZ3jSd1aHgsum/tF+kC2AEcDSe7AyrUiufCy1DT1+rD+OP4Ok
      eFE8ZTiC83AG5+MIzM52WG2GBCEElmmRiiao3XGC4JQw4eIcMrE0mXjaFsDwIjDTzSQv/R1G
      4lR2GoGVweGfgSMwF2doAbK3HNmZZ3daB4EQAj2jke5LkYmlSPclSfelSPcmSfclUZMZ1EQG
      LZkBwOlx4g54cQe8tgCGGmGpmJlm9N79aNHdmGozsuJDmGk8JY/jnnJnv4eX7JTkRxCWwDJN
      FOeHdmFZFqZmYGgGhqqjJjJZ4+437I8a+uXPKi4HDpcTT8iLL+LHG87+OL0uWk83klOaR+Xy
      mSCBhGQLYCgQwsRM1qL1foDeux8z04jircIVWY4zvBzZXZidA+8psT39xzANk0wsRf0HtXSc
      b6FwVhmmZpDqTaDG02gpFT2toWU0FKeCJ+jFE/TiDvrwhf14wz68kQBuvwenz43L68LpcSF9
      ztkBtgC+AEIIsFIYqXr0nl1ovfsQRhzFU4Iz5wZckZX9uXjHhJo3MxCEEJi62e/BdTKxFKne
      BOneFKmeBOm+JKmeBGoygyRJGJqBZZj484IECyIfeu9Iv5GH/TjcLmRFQpJlJHlo7qC2AAaA
      MFMYiTNoPXvRY4ex9CgO/2xckRU4w0sntIcX/VPc5Y+MwF+OvbVEhkwijRpPk+pN9ht6kkw8
      TbovhZ5WcXpcuAMe3H4Pnv6wxJeTfXQHPGgJlb62KBVLp+P2j9wiJlsA10AIC8w0euIEes9e
      9L6DCEvF4Z+JM2ctzvASZGfuuJr//nm5nD2xDBM9o3Nu2zG669opnF2GntKyRt6XxFCNbEUH
      IZAdCt6IPxuaRPz484IE8sN4wz4cbieKQ0F2KEPmvYcCWwAf4/JaViNxCq1nN3rsCACOQA2u
      nDU4Q4uQnDlj5gscLJe9uJrIoMbTJHsSJLtiJKNxUv2dzcvZE2EJwiW5hIpy8EUC2fAk5MvG
      5SEfTu/4m2s06QUghInedwhJ8WKpnWg9uzASp0EYOMNLceWsxhGYi+SMjL/wRoBA9FdLE+hp
      lUR3nFR3nES/kSe7Y2gpDVM3MA0Td8BDIC+EPy+IPy9EIC+ILyeImkiT6OqjdMFUnJ6h2Up2
      LDBIAQjOH9rOtsMN3P3QI5SG3aT72tj08mby5q5ldbHJLza9T9nUJdx31yoUxpIABJYRR+18
      m3TjLwCB7CrEGVqEM2c1ztDC/rnxYx9TN2g91YAn5McT9JCJZ0hF4yS6+z15NEEyGsfUjGym
      xOfGG/JdMXJ/bgBfThBfTgCH0wHjy4kPisEJQE/w6rv7uHnFbHYfb+H29cs5s28LVK6lZe9W
      cvLDRBYuZ+pHJrGNtgAul99Qu7ag936AMPoAULzTCEz/83ER3pi6QbI7Tryzj0RXjGhDJx21
      zciKjKwoWIaJN+zvN/APPbk37Mfpc+P0uFCck2fRy7UYXFUI08QdCOD1hZCs8wBYlkQ46CPi
      k3HlB3n72V/iDJfzlUfuQbYGXhViaBBYagd6336M6LsIvR2Hfyae4seQQ6uyFcMkCQMJdH0E
      2/VZzRXoGT07uhlLkeyKEe/oIxWNk+yOo8bTKC4nLo8LT8iHN+InkBciWJjDjJvn4Y34s9ma
      z7BvCwtLH8n//9hlcFUhXD6kjlp++dwxalbew6VL58jNz+G1Z59BiRRzY5lOMBRElwAknM6B
      V4UYDMLS0PsOo3VvRY8dQVICuPNuwpW7FsVbNSZielM3SEYTV0KWRGeMRFeMTDyFmsggLIEv
      N4A/N0ikOI+yBdMI5AVxB714Al4UV3aTPj2joTgdyMroX9N4YtCdYNPQSKsGfp8Pw9BwOByk
      Uykcbi8OSZBKp3G5fbic2dmMwx0CCUvHzDSidW9H696GEDrO0ELc+bfjCNSAPLKZCiEEnedb
      6TzfSuGsUjLxNPGOXhJdMeKdfWT6UkiyhOxU8AS8BKaECeaHCBSECeSH8UX8SIqMrMh2yDIM
      TJgskKX3oPXsRYtux0icweGrxpV/M67wCiRX/sgYjwAtrZLqyWZZYu19xNp76L7UjqHqyA4F
      X8SPLyfr0YMFYfx5IbxhH55QNlduG/nIMm4FkJ2OoGIkz6J2vo0eO4QkuXDmrsGdf2t2pZTk
      HPqpCKJ/kpZuoKVU4h1ZI4+19RDv6CMTTwOgOBQCU0KECrMFw/pauplz+xLCRTnZDugkX9M8
      Vhh3AhDCwso0oUV3okW3Y2ndOEILcefdhDO8dMjn0puGSaYvSaovSbyjj3hbL/GuPpLdcbRk
      BnfQizfsJ1gQJlQYITglgi838GFH1GZMM+YFIISBMNOAhN53ALVzC2bqPLIzH/eUW3HmrEF2
      TfnCK6aEJehp7sLldeMOeEhG48Tae4m39xJr6yHZHUdX9WxqMeInVBAhVJRDqDBCYEoYl8+N
      w+20O5/jlDEtACEsUvU/Ru14I1tJWPHhjKzElXdzduXUF8ziCCHQUiqpaIK2M43Ubj8BkoQs
      S8iO7JRbX06AUGEOwcIwwSkRAvmhKxkXm4nDaA/HXhdL6wIsXLnr8ZZ9FckRGZARXta3oer0
      NHURre8g2tBJojOGmkzjDfuRFRlfTpAFX1qBLyeAy+e2jX2SMKbvAACWEcNM1uIILvzcsy4N
      VScdS9HXEiXakDX4eEcfLq8Lf16InPJ88qoKyCmfgsvnxlD1KzMVbSYXY14AnwfTMIm19dDT
      2EW0oZO+1ijp3iQun4tIaT65FVPIKc/Hn5sdQLI9u81lxp0ATMNES6rEO3uJ1ncSbeigt7kb
      SZbwBLxEyj707r6cQHYAKbsA1MbmE4xpAWRHUVtoPlZHbmUBfW099DZ1keiKARAuyiVSlkdu
      ZQHBgjC+SMDOxtgMiLHdCRaCc++doLuundYzTeRVFlAyt5LciikEpoSzI6djaHWRzfhjbAtA
      kpi6ciYOl4PZty4iUpo32i2ymWCM6RDo8vsvY3t6m6FmbN8BsI3eZnixe4w2nxPB8AULAqFn
      sHobh+0cQgisWAtCS14p8SKEGPt3AJvrI0wNs2EfUqgYJW/6lTIlYGX3kkVkH6/8bn3Kc9nn
      BR9/Lvu82XwQs/0Ezpr7kJzebMkYywJhZo9nmWAZCFMHSwdTR1g6GBpY+keeNz78+8rvGmbj
      fqyucziqb0byDX1fT6hxjPPvIPkLUEoWgaEiDNUWwPAjMFqOYDbuxznvQSSnD0wVYWjZL8FU
      wVDB1Pp/1xCG+uF7+l8XRubKl5Z9Tb3yt0j3YLUdB3cAOVzO9Q3e+ohI+l//hFCsqwQg1BhY
      BvrxF0GWP2n8CJAdIDtBcWQ36lCyP1L/c8hOkB1ISvaR/kdJdoKeyrZJT4OeHvpvQU9fuRbJ
      FQT/FGTFPchOsDDY9srzHK/vZtVdj7NiZgGdl47wwqYdeEtmcmtNkFe2HiRv6iIeu2cdsjTw
      TrCWTpCK9RDMLURxfko5DiE+9FrC+pSf/i/wU55DWAgtSc+B3+EKF+Kfse5DYzO1K0Z3xfCu
      GGzmKgP80Eg/9lr/e7VkjIwu8LssZFkBSYb+R0mSQbr8nJx97P9bkhVweJAcLlA84HAjOdwf
      efQgKW4sQ6X36Gt48irwz72z/xj9x5Gzj9Ll5y6f/yOvSx977+XXpCvtkUme3kLq4h7ybv0h
      SrjkikFnjbnfoPuXvn7IRwcgP9aXk65+nxbrJNVyhvCM1UjK0PtlYVnELuzHnVeON7f0yvkH
      tyheS6LlTucP77yPbXsOw8wCOts6+PI3/y/ad73JwfYk3/juH3J4+1skDYFXMq98NpPJFluS
      JAlFUa4I4zKKoiABu57/MZdOn6Rs6lR8fu+nGjGWiRBm1hNdebQQ1sefMz/xXsOwaEr6cMsn
      KHK/NLB/gCRnp2FfNhw5+yNJTpA9V4ypuy9Db1qiNN+NNxC64v2kj3jMK57wsmHJjuzxrvqH
      A3r/z0fQMmnqO2vw63kU+0GSLMACjIFdz2cggI66Xvq6cqnYeQiP7+yQHPejdDZeJNraREXN
      sez/aIjRMinqTx4mEMmjaNrsK/obnNQkGV1V0bV0trICIMkCNaOR1ixcThNV09B0CUUGRc4a
      umVZuFwfevPLmR5FUa56TlhZI5YkCV3T0D2+7Hk+YnCSpAxq1ZelZuD8KYTHi5i2fsBZp0+7
      fV71nBBYVj2S3oUZmYEZvM4O6xbZ8ALtc7dBS6cAMA0dPZMahlVwAkNTAdDTqaFf6NN/fEmS
      0NIpFMfQ73OmpbMhkKFrV/2PBjkOYHFy99vsONnCnfc/hha9SGleiJdeep28mtWsm+blhVe3
      UbXkJjYsm4nEwEMgNdFDb2sD+VWzUZzuL97Uz0AIi57WZlxeH4Gc4RloyyTjxLo7yC+tQlaG
      fsapsCy6WxvxBUP4QjlDfnyAdLyPRG+UvNLKYVnplv0fdZJfWjks/yPLsoi2NuALRvCFIlee
      H/MDYTY2w4k9DmAzqbEFYDOpsQVgM6mxBWAzqbEFYDOpGZVUjGVZGMbQDNLY2AyGURGALMtX
      DXpdD8uyBpR7NgxjQGnWyxWrB/J+y7LG1DUM9PiXy9MP9DNj6RqG4vijlowfiMENxNC+yPEH
      PPrbL5ixdA0DPb4kSQMW/li7hqE4/qgMhMHwLnQZ6Bf7RY4P9jV8nnOM9eOPuAAGgrAsjh94
      h3azgttWzx6Wc3TVn2Tzu3sITV3E/TcvG/Ljm1qKt155gZaEg3sefpTiwNDPcwE4tW8TTSzk
      9pWVQ39wK8WLv3yWbsnDfQ89RmFwiK9BmBza/haHL/Vw36NPkD+09Y0Bi0Pvvsa+c81Y/mL+
      4KmNXL4XjO0skCRRNXs2Tm34OsyBvHIeeeIJHOnuYTm+7PCw/s77WTbVR2v355/gNhAyPU3U
      p3UyLX3Dcnwr1Ydr6gKefPxRCoZBwGqsi8a4g0ce3kiOezj8scySW77Md564mxnVM1GuemUM
      I0kSoVBwWGtaSZLG/u17WLHupuE5vizTXHuQiz0QGg7nLyzefeNNLFNwqaEebTi2/nIGUXov
      8eyzv+JMU2zID2+YGu2XzvCvLzzHvhMtQ378LILdu0+xenXNVc+O6Rlplmmw+YVneO9AL578
      XFbOLRnycxx++0V2XNSpj1s8/sCtDLWNqql2Dh26SI+RpieRAfxDfAZYsPIGovE6GpzDUwBP
      01Kk4klUzUAZhvqp3mA+xQUhmnoyuD3DEyJqvU1o4VKCH3P5/z8E8DjBRETQYgAAAABJRU5E
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
