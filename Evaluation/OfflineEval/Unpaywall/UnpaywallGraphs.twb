<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0515.1630                               -->
<workbook original-version='18.1' source-build='2019.2.0 (20192.19.0515.1630)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='map+ (acl_metrics)' inline='true' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='unpaywall_metrics' name='excel-direct.0v8d2p90sxri9u1ewfqqw09uwndz'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Coursework/Thesis/OfflineEval/Unpaywall/unpaywall_metrics.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[map].[k]' />
              <expression op='[recall].[k]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[map].[k]' />
                <expression op='[ndcg].[k]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[map].[k]' />
                  <expression op='[mrr].[k]' />
                </expression>
              </clause>
              <relation connection='excel-direct.0v8d2p90sxri9u1ewfqqw09uwndz' name='map' table='[map$]' type='table'>
                <columns gridOrigin='A1:G19:no:A1:G19:0' header='yes' outcome='6'>
                  <column datatype='integer' name='k' ordinal='0' />
                  <column datatype='real' name='hd2vINOUT' ordinal='1' />
                  <column datatype='real' name='hd2vOUT' ordinal='2' />
                  <column datatype='real' name='bm25' ordinal='3' />
                  <column datatype='real' name='hybrid' ordinal='4' />
                  <column datatype='real' name='paper2vec' ordinal='5' />
                  <column datatype='real' name='doc2vec' ordinal='6' />
                </columns>
              </relation>
              <relation connection='excel-direct.0v8d2p90sxri9u1ewfqqw09uwndz' name='mrr' table='[mrr$]' type='table'>
                <columns gridOrigin='A1:G19:no:A1:G19:0' header='yes' outcome='6'>
                  <column datatype='integer' name='k' ordinal='0' />
                  <column datatype='real' name='hd2vINOUT' ordinal='1' />
                  <column datatype='real' name='hd2vOUT' ordinal='2' />
                  <column datatype='real' name='bm25' ordinal='3' />
                  <column datatype='real' name='hybrid' ordinal='4' />
                  <column datatype='real' name='paper2vec' ordinal='5' />
                  <column datatype='real' name='doc2vec' ordinal='6' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.0v8d2p90sxri9u1ewfqqw09uwndz' name='ndcg' table='[ndcg$]' type='table'>
              <columns gridOrigin='A1:G19:no:A1:G19:0' header='yes' outcome='6'>
                <column datatype='integer' name='k' ordinal='0' />
                <column datatype='real' name='hd2vINOUT' ordinal='1' />
                <column datatype='real' name='hd2vOUT' ordinal='2' />
                <column datatype='real' name='bm25' ordinal='3' />
                <column datatype='real' name='hybrid' ordinal='4' />
                <column datatype='real' name='paper2vec' ordinal='5' />
                <column datatype='real' name='doc2vec' ordinal='6' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0v8d2p90sxri9u1ewfqqw09uwndz' name='recall' table='[recall$]' type='table'>
            <columns gridOrigin='A1:G19:no:A1:G19:0' header='yes' outcome='6'>
              <column datatype='integer' name='k' ordinal='0' />
              <column datatype='real' name='hd2vINOUT' ordinal='1' />
              <column datatype='real' name='hd2vOUT' ordinal='2' />
              <column datatype='real' name='bm25' ordinal='3' />
              <column datatype='real' name='hybrid' ordinal='4' />
              <column datatype='real' name='paper2vec' ordinal='5' />
              <column datatype='real' name='doc2vec' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[bm25 (mrr)]' value='[mrr].[bm25]' />
          <map key='[bm25 (ndcg)]' value='[ndcg].[bm25]' />
          <map key='[bm25 (recall)]' value='[recall].[bm25]' />
          <map key='[bm25]' value='[map].[bm25]' />
          <map key='[doc2vec (mrr)]' value='[mrr].[doc2vec]' />
          <map key='[doc2vec (ndcg)]' value='[ndcg].[doc2vec]' />
          <map key='[doc2vec (recall)]' value='[recall].[doc2vec]' />
          <map key='[doc2vec]' value='[map].[doc2vec]' />
          <map key='[hd2vINOUT (mrr)]' value='[mrr].[hd2vINOUT]' />
          <map key='[hd2vINOUT (ndcg)]' value='[ndcg].[hd2vINOUT]' />
          <map key='[hd2vINOUT (recall)]' value='[recall].[hd2vINOUT]' />
          <map key='[hd2vINOUT]' value='[map].[hd2vINOUT]' />
          <map key='[hd2vOUT (mrr)]' value='[mrr].[hd2vOUT]' />
          <map key='[hd2vOUT (ndcg)]' value='[ndcg].[hd2vOUT]' />
          <map key='[hd2vOUT (recall)]' value='[recall].[hd2vOUT]' />
          <map key='[hd2vOUT]' value='[map].[hd2vOUT]' />
          <map key='[hybrid (mrr)]' value='[mrr].[hybrid]' />
          <map key='[hybrid (ndcg)]' value='[ndcg].[hybrid]' />
          <map key='[hybrid (recall)]' value='[recall].[hybrid]' />
          <map key='[hybrid]' value='[map].[hybrid]' />
          <map key='[k (mrr)]' value='[mrr].[k]' />
          <map key='[k (ndcg)]' value='[ndcg].[k]' />
          <map key='[k (recall)]' value='[recall].[k]' />
          <map key='[k]' value='[map].[k]' />
          <map key='[paper2vec (mrr)]' value='[mrr].[paper2vec]' />
          <map key='[paper2vec (ndcg)]' value='[ndcg].[paper2vec]' />
          <map key='[paper2vec (recall)]' value='[recall].[paper2vec]' />
          <map key='[paper2vec]' value='[map].[paper2vec]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec]</local-name>
            <parent-name>[map]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[map]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G19:no:A1:G19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25 (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec (mrr)]</local-name>
            <parent-name>[mrr]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mrr]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G19:no:A1:G19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25 (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec (ndcg)]</local-name>
            <parent-name>[ndcg]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ndcg]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G19:no:A1:G19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>k</remote-name>
            <remote-type>20</remote-type>
            <local-name>[k (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>k</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vINOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vINOUT (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>hd2vINOUT</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hd2vOUT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hd2vOUT (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>hd2vOUT</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bm25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bm25 (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>bm25</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hybrid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hybrid (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>hybrid</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>paper2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[paper2vec (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>paper2vec</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>doc2vec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[doc2vec (recall)]</local-name>
            <parent-name>[recall]</parent-name>
            <remote-alias>doc2vec</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[recall]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G19:no:A1:G19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;' value='BM25' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;' value='Doc2Vec' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;' value='hd2vINOUT' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;' value='hd2vOUT' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;' value='Hybrid' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;' value='Lda' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (recall):qk]&quot;' value='Ldamallet' />
          <alias key='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;' value='Paper2Vec' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Bm25 (Mrr)' datatype='real' name='[bm25 (mrr)]' role='measure' type='quantitative' />
      <column caption='Bm25 (Ndcg)' datatype='real' name='[bm25 (ndcg)]' role='measure' type='quantitative' />
      <column caption='Bm25 (Recall)' datatype='real' name='[bm25 (recall)]' role='measure' type='quantitative' />
      <column caption='Bm25' datatype='real' name='[bm25]' role='measure' type='quantitative' />
      <column caption='Doc2Vec (Mrr)' datatype='real' name='[doc2vec (mrr)]' role='measure' type='quantitative' />
      <column caption='Doc2Vec (Ndcg)' datatype='real' name='[doc2vec (ndcg)]' role='measure' type='quantitative' />
      <column caption='Doc2Vec (Recall)' datatype='real' name='[doc2vec (recall)]' role='measure' type='quantitative' />
      <column caption='Doc2Vec' datatype='real' name='[doc2vec]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT (mrr)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT (ndcg)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT (recall)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vINOUT]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT (mrr)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT (ndcg)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT (recall)]' role='measure' type='quantitative' />
      <column datatype='real' name='[hd2vOUT]' role='measure' type='quantitative' />
      <column caption='Hybrid (Mrr)' datatype='real' name='[hybrid (mrr)]' role='measure' type='quantitative' />
      <column caption='Hybrid (Ndcg)' datatype='real' name='[hybrid (ndcg)]' role='measure' type='quantitative' />
      <column caption='Hybrid (Recall)' datatype='real' name='[hybrid (recall)]' role='measure' type='quantitative' />
      <column caption='Hybrid' datatype='real' name='[hybrid]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='K (Mrr)' datatype='integer' name='[k (mrr)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='K (Ndcg)' datatype='integer' name='[k (ndcg)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='K (Recall)' datatype='integer' name='[k (recall)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal' />
      <column caption='Paper2Vec (Mrr)' datatype='real' name='[paper2vec (mrr)]' role='measure' type='quantitative' />
      <column caption='Paper2Vec (Ndcg)' datatype='real' name='[paper2vec (ndcg)]' role='measure' type='quantitative' />
      <column caption='Paper2Vec (Recall)' datatype='real' name='[paper2vec (recall)]' role='measure' type='quantitative' />
      <column caption='Paper2Vec' datatype='real' name='[paper2vec]' role='measure' type='quantitative' />
      <column-instance column='[bm25 (mrr)]' derivation='Sum' name='[sum:bm25 (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[bm25 (ndcg)]' derivation='Sum' name='[sum:bm25 (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[bm25 (recall)]' derivation='Sum' name='[sum:bm25 (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[bm25]' derivation='Sum' name='[sum:bm25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec (mrr)]' derivation='Sum' name='[sum:doc2vec (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec (ndcg)]' derivation='Sum' name='[sum:doc2vec (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec (recall)]' derivation='Sum' name='[sum:doc2vec (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[doc2vec]' derivation='Sum' name='[sum:doc2vec:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT (mrr)]' derivation='Sum' name='[sum:hd2vINOUT (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT (ndcg)]' derivation='Sum' name='[sum:hd2vINOUT (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT (recall)]' derivation='Sum' name='[sum:hd2vINOUT (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vINOUT]' derivation='Sum' name='[sum:hd2vINOUT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT (mrr)]' derivation='Sum' name='[sum:hd2vOUT (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT (ndcg)]' derivation='Sum' name='[sum:hd2vOUT (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT (recall)]' derivation='Sum' name='[sum:hd2vOUT (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hd2vOUT]' derivation='Sum' name='[sum:hd2vOUT:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid (mrr)]' derivation='Sum' name='[sum:hybrid (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid (ndcg)]' derivation='Sum' name='[sum:hybrid (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid (recall)]' derivation='Sum' name='[sum:hybrid (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[hybrid]' derivation='Sum' name='[sum:hybrid:qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec (mrr)]' derivation='Sum' name='[sum:paper2vec (mrr):qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec (ndcg)]' derivation='Sum' name='[sum:paper2vec (ndcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec (recall)]' derivation='Sum' name='[sum:paper2vec (recall):qk]' pivot='key' type='quantitative' />
      <column-instance column='[paper2vec]' derivation='Sum' name='[sum:paper2vec:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.592068' measure-ordering='alphabetic' measure-percentage='0.407932' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (mrr):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (mrr):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (mrr):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet (recall):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:ldamallet:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (mrr):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (mrr):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda (recall):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:lda:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (mrr):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (mrr):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (mrr):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (ndcg):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='High value MAP'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25' datatype='real' name='[bm25]' role='measure' type='quantitative' />
            <column caption='Doc2Vec' datatype='real' name='[doc2vec]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT]' role='measure' type='quantitative' />
            <column caption='Hybrid' datatype='real' name='[hybrid]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal' />
            <column-instance column='[k]' derivation='None' name='[none:k:ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec' datatype='real' name='[paper2vec]' role='measure' type='quantitative' />
            <column-instance column='[bm25]' derivation='Sum' name='[sum:bm25:qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec]' derivation='Sum' name='[sum:doc2vec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT]' derivation='Sum' name='[sum:hd2vINOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT]' derivation='Sum' name='[sum:hd2vOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid]' derivation='Sum' name='[sum:hybrid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec]' derivation='Sum' name='[sum:paper2vec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:k:ok]' member='10' />
              <groupfilter function='member' level='[none:k:ok]' member='20' />
              <groupfilter function='member' level='[none:k:ok]' member='30' />
              <groupfilter function='member' level='[none:k:ok]' member='40' />
              <groupfilter function='member' level='[none:k:ok]' member='50' />
              <groupfilter function='member' level='[none:k:ok]' member='100' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='MAP' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</cols>
      </table>
      <simple-id uuid='{5655C8B9-CEC9-4A52-B75D-AF44EF23F03E}' />
    </worksheet>
    <worksheet name='High value Recall'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Recall@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Recall)' datatype='real' name='[bm25 (recall)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Recall)' datatype='real' name='[doc2vec (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (recall)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Recall)' datatype='real' name='[hybrid (recall)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Recall)' datatype='integer' name='[k (recall)]' role='dimension' type='ordinal' />
            <column-instance column='[k (recall)]' derivation='None' name='[none:k (recall):ok]' pivot='key' type='ordinal' />
            <column-instance column='[k (recall)]' derivation='None' name='[none:k (recall):qk]' pivot='key' type='quantitative' />
            <column caption='Paper2Vec (Recall)' datatype='real' name='[paper2vec (recall)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (recall)]' derivation='Sum' name='[sum:bm25 (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (recall)]' derivation='Sum' name='[sum:doc2vec (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (recall)]' derivation='Sum' name='[sum:hd2vINOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (recall)]' derivation='Sum' name='[sum:hd2vOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (recall)]' derivation='Sum' name='[sum:hybrid (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (recall)]' derivation='Sum' name='[sum:paper2vec (recall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:k (recall):ok]' member='10' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='20' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='30' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='40' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='50' />
              <groupfilter function='member' level='[none:k (recall):ok]' member='100' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='Recall' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):qk]</cols>
      </table>
      <simple-id uuid='{728FE13B-C33C-43B1-B399-EF81DAB52CF7}' />
    </worksheet>
    <worksheet name='MAP'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman'>MAP@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25' datatype='real' name='[bm25]' role='measure' type='quantitative' />
            <column caption='Doc2Vec' datatype='real' name='[doc2vec]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT]' role='measure' type='quantitative' />
            <column caption='Hybrid' datatype='real' name='[hybrid]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K' datatype='integer' name='[k]' role='dimension' type='ordinal' />
            <column-instance column='[k]' derivation='None' name='[none:k:ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec' datatype='real' name='[paper2vec]' role='measure' type='quantitative' />
            <column-instance column='[bm25]' derivation='Sum' name='[sum:bm25:qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec]' derivation='Sum' name='[sum:doc2vec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT]' derivation='Sum' name='[sum:hd2vINOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT]' derivation='Sum' name='[sum:hd2vOUT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid]' derivation='Sum' name='[sum:hybrid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec]' derivation='Sum' name='[sum:paper2vec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]'>
            <groupfilter from='1' function='range' level='[none:k:ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='MAP' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</cols>
      </table>
      <simple-id uuid='{41C82915-1299-4B14-998C-E916B4EBCFC8}' />
    </worksheet>
    <worksheet name='MRR'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman'>MRR@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Mrr)' datatype='real' name='[bm25 (mrr)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Mrr)' datatype='real' name='[doc2vec (mrr)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (mrr)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (mrr)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Mrr)' datatype='real' name='[hybrid (mrr)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Mrr)' datatype='integer' name='[k (mrr)]' role='dimension' type='ordinal' />
            <column-instance column='[k (mrr)]' derivation='None' name='[none:k (mrr):ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec (Mrr)' datatype='real' name='[paper2vec (mrr)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (mrr)]' derivation='Sum' name='[sum:bm25 (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (mrr)]' derivation='Sum' name='[sum:doc2vec (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (mrr)]' derivation='Sum' name='[sum:hd2vINOUT (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (mrr)]' derivation='Sum' name='[sum:hd2vOUT (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (mrr)]' derivation='Sum' name='[sum:hybrid (mrr):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (mrr)]' derivation='Sum' name='[sum:paper2vec (mrr):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (mrr):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (mrr):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]'>
            <groupfilter from='1' function='range' level='[none:k (mrr):ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='MRR' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]</cols>
      </table>
      <simple-id uuid='{258031A8-E651-405E-B3D4-716C98C5D783}' />
    </worksheet>
    <worksheet name='NDCG'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman'>NDCG@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Ndcg)' datatype='real' name='[bm25 (ndcg)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Ndcg)' datatype='real' name='[doc2vec (ndcg)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (ndcg)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (ndcg)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Ndcg)' datatype='real' name='[hybrid (ndcg)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Ndcg)' datatype='integer' name='[k (ndcg)]' role='dimension' type='ordinal' />
            <column-instance column='[k (ndcg)]' derivation='None' name='[none:k (ndcg):ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec (Ndcg)' datatype='real' name='[paper2vec (ndcg)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (ndcg)]' derivation='Sum' name='[sum:bm25 (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (ndcg)]' derivation='Sum' name='[sum:doc2vec (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (ndcg)]' derivation='Sum' name='[sum:hd2vINOUT (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (ndcg)]' derivation='Sum' name='[sum:hd2vOUT (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (ndcg)]' derivation='Sum' name='[sum:hybrid (ndcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (ndcg)]' derivation='Sum' name='[sum:paper2vec (ndcg):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (ndcg):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (ndcg):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]'>
            <groupfilter from='1' function='range' level='[none:k (ndcg):ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='NDCG' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]</cols>
      </table>
      <simple-id uuid='{60BAAFFD-9277-44E5-A061-4A11AEC523B9}' />
    </worksheet>
    <worksheet name='Recall'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Times New Roman'>Recall@k</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='map+ (acl_metrics)' name='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl' />
          </datasources>
          <datasource-dependencies datasource='federated.1pz7xwy1rhcxvm1cs9o1k043n9vl'>
            <column caption='Bm25 (Recall)' datatype='real' name='[bm25 (recall)]' role='measure' type='quantitative' />
            <column caption='Doc2Vec (Recall)' datatype='real' name='[doc2vec (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vINOUT (recall)]' role='measure' type='quantitative' />
            <column datatype='real' name='[hd2vOUT (recall)]' role='measure' type='quantitative' />
            <column caption='Hybrid (Recall)' datatype='real' name='[hybrid (recall)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='K (Recall)' datatype='integer' name='[k (recall)]' role='dimension' type='ordinal' />
            <column-instance column='[k (recall)]' derivation='None' name='[none:k (recall):ok]' pivot='key' type='ordinal' />
            <column caption='Paper2Vec (Recall)' datatype='real' name='[paper2vec (recall)]' role='measure' type='quantitative' />
            <column-instance column='[bm25 (recall)]' derivation='Sum' name='[sum:bm25 (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[doc2vec (recall)]' derivation='Sum' name='[sum:doc2vec (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vINOUT (recall)]' derivation='Sum' name='[sum:hd2vINOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hd2vOUT (recall)]' derivation='Sum' name='[sum:hd2vOUT (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[hybrid (recall)]' derivation='Sum' name='[sum:hybrid (recall):qk]' pivot='key' type='quantitative' />
            <column-instance column='[paper2vec (recall)]' derivation='Sum' name='[sum:paper2vec (recall):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:bm25 (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:doc2vec (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hybrid (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:paper2vec (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vINOUT (recall):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[sum:hd2vOUT (recall):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]'>
            <groupfilter from='1' function='range' level='[none:k (recall):ok]' to='10' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</column>
            <column>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]' scope='rows' value='Recall' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</rows>
        <cols>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</cols>
      </table>
      <simple-id uuid='{F00F0ED4-5094-41E9-9446-FA36A49AB6B4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='88605' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='88605' id='5' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='44303' id='3' name='Recall' w='49200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44303' id='9' name='MRR' w='49200' x='50000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44302' id='10' name='MAP' w='49200' x='800' y='45303'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44302' id='11' name='NDCG' w='49200' x='50000' y='45303'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='9395' id='12' type='layout-flow' w='98400' x='800' y='89605'>
            <zone h='5750' id='8' leg-item-layout='horz' name='Recall' pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' w='98400' x='800' y='89605'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='23' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='44303' id='3' is-fixed='true' name='Recall' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5750' id='8' leg-item-layout='horz' name='Recall' pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' w='98400' x='800' y='89605'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44303' id='9' is-fixed='true' name='MRR' w='49200' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44302' id='10' is-fixed='true' name='MAP' w='49200' x='800' y='45303'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44302' id='11' is-fixed='true' name='NDCG' w='49200' x='50000' y='45303'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0B046EC0-DDC6-4381-A0CC-2B06166E247D}' />
    </dashboard>
    <dashboard name='Dashboard 1 (2)'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='12' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5750' id='8' leg-item-layout='horz' name='Recall' pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='34250' id='10' name='MAP' w='43200' x='31000' y='48625' />
        <zone h='34500' id='9' name='MRR' w='41600' x='51900' y='10625' />
        <zone h='35375' id='3' name='Recall' w='44300' x='3400' y='10375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='24' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='35375' id='3' is-fixed='true' name='Recall' w='44300' x='3400' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5750' id='8' leg-item-layout='horz' name='Recall' pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='276' h='34500' id='9' is-fixed='true' name='MRR' w='41600' x='51900' y='10625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='274' h='34250' id='10' is-fixed='true' name='MAP' w='43200' x='31000' y='48625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7AC05EE2-8CB8-4FD5-8B03-99D2D51164F1}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='MAP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE1AD117-502F-4F45-B5C2-4CDCF5C5477C}' />
    </window>
    <window class='worksheet' name='High value MAP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{60BABB40-9960-4112-9321-97B28E7B44F8}' />
    </window>
    <window class='worksheet' name='MRR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (mrr):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AA50CC9-8D96-4EFF-91AD-EA35F198D8C1}' />
    </window>
    <window class='worksheet' name='Recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FDBFCA76-4A4E-43E7-BE4A-930952F7A6BF}' />
    </window>
    <window class='worksheet' name='High value Recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (recall):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F1E2AE7-CB73-41DB-B8A1-8C1EC09B4440}' />
    </window>
    <window class='worksheet' name='NDCG'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]</field>
            <field>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[none:k (ndcg):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{040FF1B5-8143-4244-8521-DD5825CFCB72}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='MAP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MRR'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='NDCG'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Recall'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[Multiple Values]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8AA6632A-4CA1-4462-8319-C99E3EE5A28E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1 (2)'>
      <viewpoints>
        <viewpoint name='MAP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MRR'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Recall'>
          <zoom type='entire-view' />
          <highlight field='[federated.1pz7xwy1rhcxvm1cs9o1k043n9vl].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{678C6CEE-67BF-459A-A81D-4371F64D36A5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      4eOGT5QAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='High value MAP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='High value Recall' width='192'>
      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
      /wPG6jMYttiF9wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='MAP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MRR' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='NDCG' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Recall' width='192'>
      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
      D5oAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
